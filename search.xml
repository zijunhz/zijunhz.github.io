<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>God of Avalon</title>
    <url>/2022/05/03/God-of-Avalon/</url>
    <content><![CDATA[<p>If you are in SJTU campus/using an SJTU vpn (as long as you has an SJTU ip), you can visit <a href="http://59.78.35.89:7998/">this site</a> to enjoy the online Avalon god.</p>
<p>I haven’t deployed it to any VPS, but I do have the plan.</p>
<h2 id="Frontend"><a href="#Frontend" class="headerlink" title="Frontend"></a>Frontend</h2><p><a href="https://github.com/zijunhz/GodOfAvalon-frontend">Frontend Repository</a></p>
<h2 id="Backend"><a href="#Backend" class="headerlink" title="Backend"></a>Backend</h2><p><a href="https://github.com/zijunhz/GodOfAvalon-backend">Backend Repository</a></p>
]]></content>
      <tags>
        <tag>Project</tag>
        <tag>Fun Stuff</tag>
        <tag>Web Dev</tag>
        <tag>Django</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>A Number Guessing Game Bot</title>
    <url>/2022/04/28/A-Number-Guessing-Game-Bot/</url>
    <content><![CDATA[<p><div id="guessing_game">
    <h1>A Guessing Game</h1>
    <a target="_blank" href="https://baike.baidu.com/item/%E7%8C%9C%E6%95%B0%E5%AD%97/83200?fr=aladdin">Here's the
      rules.</a><br>
    <button onclick="init()">Start the Game</button><button onclick="result()">Correct!</button><br>
    <input id="reA" type="tel">A <input id="reB" type="tel">B<br>
    <button onclick="kill()">Confirm</button>
    <p id="inf"></p>
  </div><br>  <img scr="../images/avatar.png"></p>
<script>
let rule_on_show = 0, init1 = 0, tern = 0, ans, first = 1, tot = 0, pre = 0, l = 0, check = 0, G = 0, isright = 0, lA = 0;
let a = new Array(), b = new Array(), cmp = new Array(), rd = new Array();
function build() {
  for (let i = 0; i <= 5; i++)cmp[i] = new Array();
  for (let i = 0; i <= 9; i++)for (let j = 0; j <= 9; j++)for (let k = 0; k <= 9; k++)for (let l = 0; l <= 9; l++) {
    if (i == j || i == k || i == l || j == k || j == l || k == l) continue;
    a[++tot] = i * 1000 + j * 100 + k * 10 + l;
  }
}
function init() {
  document.getElementById("inf").innerHTML = '';
  if (first == 1) {
    build(); first = 0;
  }
  for (let i = 1; i <= tot; i++)b[i] = 1;
  check = 1; init1 = 1; tern = 0; isright = 0; lA = 0;
  makeguess();
}
function getn(x, n) {
  for (let i = 1; i <= 4 - n; i++)x = Math.floor(x / 10);
  return x % 10;
}
function compA(X, Y) {
  let x = new Array(), y = new Array(), A = 0;
  for (let i = 1; i <= 4; i++)x[i] = getn(X, i);
  for (let i = 1; i <= 4; i++)y[i] = getn(Y, i);
  for (let i = 1; i <= 4; i++)if (x[i] == y[i]) A++;
  return A;
}
function compB(X, Y) {
  let x = new Array(), y = new Array(), B = 0;
  for (let i = 1; i <= 4; i++)x[i] = getn(X, i);
  for (let i = 1; i <= 4; i++)y[i] = getn(Y, i);
  for (let i = 1; i <= 4; i++)for (let j = 1; j <= 4; j++)if (i != j && x[i] == y[j]) B++;
  return B;
}
function sqr(x) {
  return x * x;
}
function abS(x) {
  if (x >= 0) return x; return -x;
}
function makeguess() {
  tern++;
  if (tern == 1) {
    G = a[Math.ceil(Math.random() * Math.random() * tot * tot * tot) % tot + 1]; pre = 5040;
  } else {
    let bestans = 0, ans; l = 0, eps = 1e-3;
    pre = 0;
    for (let i = 1; i <= tot; i++) {
      pre += b[i]
    }
    for (let i = 1; i <= tot; i++) {
      if (b[i] == 0) continue;
      for (let j = 0; j <= 4; j++)for (let k = 0; k <= 4 - j; k++)cmp[j][k] = 0;
      for (let j = 1; j <= tot; j++)
        if (b[j] == 1) {
          cmp[compA(a[j], a[i])][compB(a[j], a[i])]++;
        }
      ans = 0;
      for (let j = 0; j <= 4; j++)for (let k = 0; k <= 4 - j; k++)
        if (cmp[j][k] != 0) {
          ans += Math.log(pre / cmp[j][k]) * cmp[j][k] / pre;//sqr(ave-cmp[j][k]);
        }
      //ans/=cnt;ans-=cnt*1.1;
      if (abS(ans - bestans) <= eps) {
        rd[++l] = i;
        console.log(ans + ' ' + a[rd[l]]);
        continue;
      }
      if (ans > bestans) {
        console.log(ans + ' ' + a[rd[1]])
        l = 1; rd[1] = i; bestans = ans;
      }
    }
    G = a[rd[Math.ceil(Math.random() * Math.random() * tot * tot * tot) % l + 1]];
  }
  let t = '';
  for (let i = 1; i <= 4; i++)t = t + String(getn(G, i));
  document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + 'Attempt ' + String(tern) + ': ' + t + ' (' + String(pre) + ')';
  //document.getElementById("inf").innerHTML=String(l);
}
function kill() {
  if (init1 == 0) {
    document.getElementById("inf").innerHTML = 'Game has not started'; return;
  }
  if (isright == 1) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Hit the answer in ' + String(tern) + ' steps!'; init1 = 0;
    return;
  }
  let gusA = document.getElementById("reA").value, gusB = document.getElementById("reB").value, A, B, ill = 0;
  if (isNaN(gusA) || isNaN(gusB) || gusA == '' || gusB == '') ill = 1;
  else {
    A = Number(gusA); B = Number(gusB);
    if (A < 0 || B < 0 || A > 4 || B > 4 || A + B > 4) ill = 1;
  }
  if (ill == 1) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Wrong Input!<br>'; return;
  }
  lA = A;
  if (A == 4) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Hit the answer in ' + String(tern) + ' steps!'; init1 = 0;
    return;
  }
  let count = 0;
  for (let i = 1; i <= tot; i++) {
    if (b[i] == 1 && ((compA(a[i], G) != A || compB(a[i], G) != B) || a[i] == G)) b[i] = 0;
    if (b[i] == 1) count++;
  }
  if (count == 0) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Wrong Input!<br>'; init1 = 0; return;
  }
  document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + ' ' + String(gusA) + 'A ' + String(gusB) + 'B<br>';
  makeguess();
}
function result() {
  isright = 1;
  kill();
}
</script>
]]></content>
      <tags>
        <tag>Project</tag>
        <tag>Fun Stuff</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend Learning Notes</title>
    <url>/2022/05/03/Frontend-Learning-Notes/</url>
    <content><![CDATA[<h2 id="SHA1-SHA256-and-SHA512-Implementation-in-JavaScript"><a href="#SHA1-SHA256-and-SHA512-Implementation-in-JavaScript" class="headerlink" title="SHA1, SHA256 and SHA512 Implementation in JavaScript"></a>SHA1, SHA256 and SHA512 Implementation in JavaScript</h2><p>Docs: <a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#converting_a_digest_to_a_hex_string">MDN SubtleCrypto.digest()</a></p>
]]></content>
      <tags>
        <tag>Web Dev</tag>
        <tag>Frontend</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Goodbye World</title>
    <url>/2022/04/26/Goodbye-World/</url>
    <content><![CDATA[<h2 id="This-is-my-First-Hexo-Blog"><a href="#This-is-my-First-Hexo-Blog" class="headerlink" title="This is my First Hexo Blog"></a>This is my First Hexo Blog</h2><p>Goodbye world! (Why not ‘Hello World!’, you might ask. That’s what people in the industry do. Well, that’s the reason. )</p>
<p>Test formula: $ \frac{x_1^2} {\sqrt{y_2^2} } $</p>
]]></content>
      <tags>
        <tag>Others</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Using Notes</title>
    <url>/2022/05/10/Linux-Using-Notes/</url>
    <content><![CDATA[<h2 id="tzselect-Set-Timezone"><a href="#tzselect-Set-Timezone" class="headerlink" title="tzselect | Set Timezone"></a>tzselect | Set Timezone</h2><p>A simple, user-friendly timezone settings guider.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tzselect</span><br></pre></td></tr></table></figure>
<p>Remember to add a line in <code>~/.profile</code> according to instructions given by <code>tzselect</code>.</p>
<h2 id="clean-Clear-Terminal-Screen"><a href="#clean-Clear-Terminal-Screen" class="headerlink" title="clean | Clear Terminal Screen"></a>clean | Clear Terminal Screen</h2><p>A simple command to clear the terminal screen.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clear</span><br></pre></td></tr></table></figure>
<h2 id="screen-A-Terminal-Multiplexer"><a href="#screen-A-Terminal-Multiplexer" class="headerlink" title="screen | A Terminal Multiplexer"></a>screen | A Terminal Multiplexer</h2><h3 id="What-does-it-do"><a href="#What-does-it-do" class="headerlink" title="What does it do?"></a>What does it do?</h3><p>There are several cases you want to use screen to manage your terminals.</p>
<ul>
<li>You are connecting to your Linux machine using ssh, but the job is time-consuming. You don’t want to keep the ssh window open, but killing it will also kill the process.</li>
<li>You are using Linux desktop. You want to hide a terminal when you not need it and resume to the status right before you hide it.</li>
</ul>
<p>screen does the job perfectly. It serve as a layer between the terminal users see and the actual processes.</p>
<h3 id="How-to-Use-it"><a href="#How-to-Use-it" class="headerlink" title="How to Use it"></a>How to Use it</h3><p>To create a new screen:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S whateverNameYouLike</span><br></pre></td></tr></table></figure>
<p>To list all screens:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<p>To reattach to a screen:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r theNameOfTheScreen (and <span class="keyword">then</span> hit tab to complete it)</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r theIdOfTheScreen (and <span class="keyword">then</span> hit tab to complete it)</span><br></pre></td></tr></table></figure>
<p>To end a screen:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S screenIdYouWantToKill -X quit</span><br></pre></td></tr></table></figure>
<p>If you are in a screen, you can do the following operations:</p>
<p>I will use <code>@</code> to refer to <code>Ctrl+A</code></p>
<p>To detach the screen: press <code>@+D</code>.</p>
<p>To create a window in a screen: press <code>@+C</code>.</p>
<p>To navigate to the previous/next window in a screen: press <code>@+P/N</code></p>
<p>To list all windows in a screen: press <code>@+W</code>.</p>
]]></content>
      <tags>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Learning Notes</title>
    <url>/2022/04/28/Git-Learning-Notes/</url>
    <content><![CDATA[<h2 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h2><h3 id="Create-a-New-Repository"><a href="#Create-a-New-Repository" class="headerlink" title="Create a New Repository"></a>Create a New Repository</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin &lt;whatever ssh repository address&gt;</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
<h3 id="Push-an-Existing-Repository"><a href="#Push-an-Existing-Repository" class="headerlink" title="Push an Existing Repository"></a>Push an Existing Repository</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin &lt;whatever ssh repository address&gt;</span><br><span class="line">git branch -M main</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
<h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><p>The <code>.gitignore</code> file can fail to work from time to time, especially when you want to ignore a file that has been tracked before.</p>
<p>Try the following commands to fix this problem:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">rm</span> -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Untracked files issue resolved to fix .gitignore&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p>What these commands do is that they clear all the cache and reestablish the track during which <code>.gitignore</code> is loaded.</p>
<h2 id="Git-Commit-Messages-in-Appropriate-Formatting"><a href="#Git-Commit-Messages-in-Appropriate-Formatting" class="headerlink" title="Git Commit Messages in Appropriate Formatting"></a>Git Commit Messages in Appropriate Formatting</h2><p>Reference: <a href="https://www.freecodecamp.org/news/writing-good-commit-messages-a-practical-guide/">How to Write Good Commit Messages: A Practical Git Guide</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;&lt;type&gt;: &lt;verb&gt; &lt;object&gt;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>type:</p>
<ul>
<li><p><code>feat</code>: add a new feature</p>
</li>
<li><p><code>fix</code>: fix a bug</p>
</li>
<li><p><code>style</code>: change the coding style without any other functional changes</p>
</li>
<li><p><code>refactor</code>: rewrite</p>
</li>
<li><p><code>test</code>: everything related to testing</p>
</li>
<li><p><code>docs</code>: everything related to documentation</p>
</li>
<li><p><code>chore</code>: regular maintenance</p>
</li>
</ul>
<h2 id="Branch-Related"><a href="#Branch-Related" class="headerlink" title="Branch Related"></a>Branch Related</h2><p>Create new branch</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch anyNameYouLike</span><br></pre></td></tr></table></figure>
<p>List all branches</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<p>Switch between different branches locally</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout nameOfTargetedBranch</span><br></pre></td></tr></table></figure>
<h2 id="Push-Related"><a href="#Push-Related" class="headerlink" title="Push Related"></a>Push Related</h2><p>Set/change upstream</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push --set-upstream origin nameOfUpStream</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Tech Life Hacks</title>
    <url>/2022/05/10/Tech-Life-Hacks/</url>
    <content><![CDATA[<h2 id="Ctrl-D-Detach-from-Something"><a href="#Ctrl-D-Detach-from-Something" class="headerlink" title="Ctrl+D | Detach from Something"></a>Ctrl+D | Detach from Something</h2><p>Using this shortcut keys, users can detach from various things. Such as:</p>
<ul>
<li><code>ssh</code> connection, basically replacing the command <code>exit</code></li>
<li><code>screen</code> in linux. Though <code>Ctrl+D</code> is not enough, you should use <code>Ctrl+A+D</code></li>
</ul>
<h2 id="Oh-My-Posh-A-Theme-Engine-for-Any-Shell"><a href="#Oh-My-Posh-A-Theme-Engine-for-Any-Shell" class="headerlink" title="Oh My Posh | A Theme Engine for Any Shell"></a>Oh My Posh | A Theme Engine for Any Shell</h2><p><a href="https://ohmyposh.dev/docs">Docs</a></p>
<p>Jump to the <code>Installation</code> part and do according to the docs based on your OS.</p>
<p>Then, read the <code>Prompt</code> part and setup the terminal profile.</p>
<p>Restart the terminal and you should be ready to enjoy the beautiful terminal.</p>
<p>Personally, I use theme <code>atomic</code> on my Windows machine and <code>thecyberden</code> on my linux servers.</p>
<p>Also, Nerd Fonts are recommended. Check out <a href="https://www.nerdfonts.com/font-downloads">this site</a> to install them.</p>
<p>Personally, I use <code>FuraCode Nerd Font Retina</code> in any editor and <code>FiraCode Nerd Font Retina</code> in any terminal. This is because <code>FuraCode</code> is thinner than <code>FiraCode</code> and thus can make the code looks compact while <code>FiraCode</code> has better Nerd Pattern display.</p>
<h2 id="Transfer-SSH-keys-to-a-New-Computer-Windows"><a href="#Transfer-SSH-keys-to-a-New-Computer-Windows" class="headerlink" title="Transfer SSH keys to a New Computer (Windows)"></a>Transfer SSH keys to a New Computer (Windows)</h2><p>If you purchased a new computer and still want to use the ssh keys on the old computer to log in to your server. Just copy the <code>.ssh</code> folder under <code>C:\User\yourUserName</code> in the old computer to the exact path in the new computer. Simple.</p>
]]></content>
      <tags>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab Learning Notes</title>
    <url>/2022/04/27/Matlab-Learning-Notes/</url>
    <content><![CDATA[<p>Docs: <a href="https://ww2.mathworks.cn/help/?requestedDomain=en">MATLAB Help Center</a></p>
<h2 id="Things-Unique-to-MATLAB"><a href="#Things-Unique-to-MATLAB" class="headerlink" title="Things Unique to MATLAB"></a>Things Unique to MATLAB</h2><h3 id="Function-Handle-a-unique-class"><a href="#Function-Handle-a-unique-class" class="headerlink" title="Function Handle (a unique class)"></a>Function Handle (a unique class)</h3><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/ref/function_handle.html?searchHighlight=function%20handle&amp;s_tid=srchtitle_function%20handle_2">function handle</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f = @(x) x^<span class="number">2</span><span class="number">-3</span>*x+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">f =</span><br><span class="line"></span><br><span class="line">  function_handle with value:</span><br><span class="line"></span><br><span class="line">    @(x)x^<span class="number">2</span><span class="number">-3</span>*x+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">-1</span></span><br></pre></td></tr></table></figure>
<h2 id="Add-Fonts-to-MATLAB"><a href="#Add-Fonts-to-MATLAB" class="headerlink" title="Add Fonts to MATLAB"></a>Add Fonts to MATLAB</h2><p>Reference: <a href="https://ww2.mathworks.cn/matlabcentral/answers/514119-can-i-add-custom-fonts-to-my-matlab-desktop-in-preferences">Can I add custom fonts to my MATLAB Desktop in Preferences?</a></p>
<p>Basically, copy <code>ttf</code> font files to <code>\matlabRoot\sys\java\jre\win64\jre\lib\fonts</code>, restart MATLAB, and choose the font in the MATLAB preferences.</p>
<h2 id="Array-Related"><a href="#Array-Related" class="headerlink" title="Array Related"></a>Array Related</h2><h3 id="and-Merge-Arrays"><a href="#and-Merge-Arrays" class="headerlink" title="[;] and [,] | Merge Arrays"></a>[;] and [,] | Merge Arrays</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">3</span>;<span class="number">2</span>;<span class="number">6</span>;<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y=[<span class="number">4</span>;<span class="number">1</span>;<span class="number">3</span>;<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% merge several arrays in a vertical way; use &#x27;,&#x27; to merge them in a horizontal way</span></span><br><span class="line">&gt;&gt; y=[y;sum(x)]</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">    <span class="number">19</span></span><br></pre></td></tr></table></figure>
<h3 id="Array-Indexing"><a href="#Array-Indexing" class="headerlink" title="(:,:) | Array Indexing"></a>(:,:) | Array Indexing</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% anyArrayNameYouLike(startRow:endRow,startColumn:endColumn)</span></span><br><span class="line">&gt;&gt; y(<span class="number">1</span>:<span class="number">4</span>,:)  </span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y=<span class="built_in">ans</span></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br></pre></td></tr></table></figure>
<h3 id="Element-wise-Calculations"><a href="#Element-wise-Calculations" class="headerlink" title=".^ .* ./ | Element-wise Calculations"></a>.^ .* ./ | Element-wise Calculations</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% use &#x27;.&#x27; before calculation marks to perform element-wise calculations rather than matrix calculations</span></span><br><span class="line">&gt;&gt; x.^y</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">          <span class="number">81</span></span><br><span class="line">           <span class="number">2</span></span><br><span class="line">         <span class="number">216</span></span><br><span class="line">       <span class="number">32768</span></span><br></pre></td></tr></table></figure>
<h3 id="‘-Conjugate-Transpose-a-Matrix"><a href="#‘-Conjugate-Transpose-a-Matrix" class="headerlink" title="‘ | Conjugate Transpose a Matrix"></a>‘ | Conjugate Transpose a Matrix</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x&#x27;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">2</span>     <span class="number">6</span>     <span class="number">8</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; w=sum(x.*y)</span><br><span class="line"></span><br><span class="line">w =</span><br><span class="line"></span><br><span class="line">    <span class="number">72</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; x&#x27;*y-w</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B=[<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure>
<p>If complex number is involved and you simply want to transpose a matrix without turning complex numbers into its conjugate complex number, use <code>.&#39;</code> instead.</p>
<h3 id="union-A-B-Merge-Multiple-Arrays-without-Repetition"><a href="#union-A-B-Merge-Multiple-Arrays-without-Repetition" class="headerlink" title="union(A,B) | Merge Multiple Arrays without Repetition"></a>union(A,B) | Merge Multiple Arrays without Repetition</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; union(A,B)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure>
<h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><h3 id="fit-x-y-fitType-Fit-Curve-or-Surface-to-Data"><a href="#fit-x-y-fitType-Fit-Curve-or-Surface-to-Data" class="headerlink" title="fit(x,y,fitType) | Fit Curve or Surface to Data"></a>fit(x,y,fitType) | Fit Curve or Surface to Data</h3><p><a href="https://ww2.mathworks.cn/help/curvefit/fit.html?s_tid=doc_ta">Docs on fit()</a></p>
<p><a href="https://ww2.mathworks.cn/help/curvefit/cfit.coeffvalues.html?searchHighlight=coefficientvalues&amp;s_tid=srchtitle_coefficientvalues_1">Docs on coeffvalues()</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>];</span><br><span class="line">y=[<span class="number">1.09</span>;<span class="number">2.2</span>;<span class="number">3.3</span>];</span><br><span class="line">sf=fit(x,y,<span class="string">&#x27;poly1&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>(sf);</span><br><span class="line"><span class="built_in">disp</span>(coeffvalues(sf));</span><br></pre></td></tr></table></figure>
<p>Output:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"> Linear model Poly1:</span><br><span class="line"> sf(x) = p1*x + p2</span><br><span class="line"> Coefficients (with <span class="number">95</span><span class="comment">% confidence bounds):</span></span><br><span class="line">   p1 =       <span class="number">1.105</span>  (<span class="number">1.068</span>, <span class="number">1.142</span>)</span><br><span class="line">   p2 =    <span class="number">-0.01333</span>  (<span class="number">-0.09257</span>, <span class="number">0.0659</span>)</span><br><span class="line"><span class="number">1.1050</span>   <span class="number">-0.0133</span></span><br></pre></td></tr></table></figure>
<h3 id="isequal-A1-A2-A3-…-An-Determine-Array-Equality"><a href="#isequal-A1-A2-A3-…-An-Determine-Array-Equality" class="headerlink" title="isequal(A1,A2,A3,…,An) | Determine Array Equality"></a>isequal(A1,A2,A3,…,An) | Determine Array Equality</h3><p>Simple to understand.</p>
<p>To be noticed, <code>string</code> and <code>char</code> is also a type of array.</p>
<h3 id="isa-variable-char-Whether-a-Variable-is-a-Certain-Type"><a href="#isa-variable-char-Whether-a-Variable-is-a-Certain-Type" class="headerlink" title="isa(variable,char) | Whether a Variable is a Certain Type"></a>isa(variable,char) | Whether a Variable is a Certain Type</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; s=<span class="number">1234</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">        <span class="number">1234</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; isa(s,<span class="string">&#x27;double&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; isa(s,<span class="string">&#x27;string&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h3 id="class-variable-Get-Class-Type-of-a-Variable"><a href="#class-variable-Get-Class-Type-of-a-Variable" class="headerlink" title="class(variable) | Get Class/Type of a Variable"></a>class(variable) | Get Class/Type of a Variable</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; s=<span class="number">1234</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">        <span class="number">1234</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; class(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;double&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="prod-array-Product-of-an-Array"><a href="#prod-array-Product-of-an-Array" class="headerlink" title="prod(array) | Product of an Array"></a>prod(array) | Product of an Array</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; prod([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">24</span></span><br></pre></td></tr></table></figure>
<h3 id="primes-n-Primes"><a href="#primes-n-Primes" class="headerlink" title="primes(n) | Primes"></a>primes(n) | Primes</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = <span class="built_in">primes</span>(n) </span><br><span class="line"><span class="comment">%returns a row vector containing all the prime numbers less than or equal to n. The data type of p is the same as that of n.</span></span><br></pre></td></tr></table></figure>
<h3 id="strfind-str-substr-Locate-substr-in-str"><a href="#strfind-str-substr-Locate-substr-in-str" class="headerlink" title="strfind(str, substr) | Locate substr in str"></a>strfind(str, substr) | Locate substr in str</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; str = <span class="string">&#x27;Find the starting indices of substrings in a character vector&#x27;</span>;</span><br><span class="line">&gt;&gt; k = strfind(str,<span class="string">&#x27;in&#x27;</span>)</span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>    <span class="number">15</span>    <span class="number">19</span>    <span class="number">36</span>    <span class="number">41</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="input-prompt-argument-Input"><a href="#input-prompt-argument-Input" class="headerlink" title="input(prompt, argument) | Input"></a>input(prompt, argument) | Input</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">someVariableName=input(prompt)</span><br><span class="line"><span class="comment">% where prompt is a string (can be empty) that pops up before user input</span></span><br><span class="line"><span class="comment">% If you want to input a string, use:</span></span><br><span class="line">someStringVariableName=input(<span class="string">&quot;&quot;</span>,<span class="string">&quot;s&quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="disp-array-Output"><a href="#disp-array-Output" class="headerlink" title="disp(array) | Output"></a>disp(array) | Output</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="built_in">disp</span>(x)</span><br></pre></td></tr></table></figure>
<h3 id="amp-amp-Logic-Calculation"><a href="#amp-amp-Logic-Calculation" class="headerlink" title="~ || &amp;&amp; | Logic Calculation"></a>~ || &amp;&amp; | Logic Calculation</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; ~<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span> &amp;&amp; <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span> || <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="mod-n-m-fix-n-Take-the-Round-and-Mod"><a href="#mod-n-m-fix-n-Take-the-Round-and-Mod" class="headerlink" title="mod(n, m) fix(n) | Take the Round and Mod"></a>mod(n, m) fix(n) | Take the Round and Mod</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% mod</span></span><br><span class="line">&gt;&gt; <span class="built_in">mod</span>(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% fix: towards 0</span></span><br><span class="line">&gt;&gt; <span class="built_in">fix</span>(<span class="number">1.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">fix</span>(<span class="number">-1.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">-1</span></span><br></pre></td></tr></table></figure>
<h3 id="length-array-strlength-string-The-Length-of-an-Array-and-a-String"><a href="#length-array-strlength-string-The-Length-of-an-Array-and-a-String" class="headerlink" title="length(array) strlength(string) | The Length of an Array and a String"></a>length(array) strlength(string) | The Length of an Array and a String</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">3</span>;<span class="number">2</span>;<span class="number">6</span>;<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">length</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; s=<span class="string">&quot;This is a string&quot;</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;This is a string&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Also, I find length() can do the job as well</span></span><br><span class="line">&gt;&gt; strlength(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Use &#x27;&#x27; to wrap things that is not logically a string.</span></span><br><span class="line">&gt;&gt; s=<span class="string">&#x27;GCTA&#x27;</span> <span class="comment">% a DNA sequence</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GCTA&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="min-max-bounds-array-Get-Min-and-Max-in-an-Array"><a href="#min-max-bounds-array-Get-Min-and-Max-in-an-Array" class="headerlink" title="[min, max]=bounds(array) | Get Min and Max in an Array"></a>[min, max]=bounds(array) | Get Min and Max in an Array</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [minA,maxA]=bounds(A)</span><br><span class="line"></span><br><span class="line">minA =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">maxA =</span><br><span class="line"></span><br><span class="line">     <span class="number">5</span></span><br></pre></td></tr></table></figure>
<h3 id="clc-Clear-Screen"><a href="#clc-Clear-Screen" class="headerlink" title="clc | Clear Screen"></a>clc | Clear Screen</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; clc</span><br></pre></td></tr></table></figure>
<h3 id="randi-Get-Random-Int"><a href="#randi-Get-Random-Int" class="headerlink" title="randi() | Get Random Int"></a>randi() | Get Random Int</h3><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/ref/randi.html?searchHighlight=randi&amp;s_tid=srchtitle_randi_1">randi()</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; randi([<span class="number">1</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; randi([<span class="number">1</span>,<span class="number">10</span>],<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">6</span>     <span class="number">2</span>     <span class="number">7</span>     <span class="number">3</span>     <span class="number">7</span></span><br></pre></td></tr></table></figure>
<h2 id="Plot-Related"><a href="#Plot-Related" class="headerlink" title="Plot Related"></a>Plot Related</h2><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/learn_matlab/plots.html">2-D and 3-D Plots</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br><span class="line">xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">ylabel(<span class="string">&quot;sin(x)&quot;</span>)</span><br><span class="line">title(<span class="string">&quot;Plot of the Sine Function&quot;</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&quot;r--&quot;</span>) <span class="comment">% plot using red dashed line</span></span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&quot;r:o&quot;</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&quot;b:*&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>Notice that the titles and labels that you defined for the first plot are no longer in the current figure window. By default, MATLAB clears the figure each time you call a plotting function, resetting the axes and other elements to prepare the new plot.</p>
<p>To add plots to an existing figure, use <code>hold on</code>. Until you use <code>hold off</code> or close the window, all plots appear in the current figure window.</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"></span><br><span class="line">y2 = <span class="built_in">cos</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x,y2,<span class="string">&quot;:&quot;</span>)</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&quot;sin&quot;</span>,<span class="string">&quot;cos&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure>
<h2 id="Scripts-Related"><a href="#Scripts-Related" class="headerlink" title="Scripts Related"></a>Scripts Related</h2><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/learn_matlab/scripts.html">Programming and Scripts</a></p>
<h3 id="Write-Custom-Functions"><a href="#Write-Custom-Functions" class="headerlink" title="Write Custom Functions"></a>Write Custom Functions</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% y are outputs and x are input</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[y1,...,yN]</span> = <span class="title">myfun</span><span class="params">(x1,...,xM)</span></span></span><br><span class="line">    <span class="comment">% here scripts</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>To create a script, use the <code>edit</code> command,</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">edit whateverScriptNameYouLike</span><br></pre></td></tr></table></figure>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">N = <span class="number">100</span>;</span><br><span class="line">f(<span class="number">1</span>) = <span class="number">1</span>;</span><br><span class="line">f(<span class="number">2</span>) = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">3</span>:N   <span class="comment">% for loop</span></span><br><span class="line">    f(<span class="built_in">i</span>) = f(<span class="built_in">i</span> - <span class="number">1</span>) + f(<span class="built_in">i</span> - <span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">f(<span class="number">1</span>:<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">-0.3</span>:<span class="number">0</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.7000</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.4000</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% if elseif and else</span></span><br><span class="line">num=randi(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">if</span> num&lt;<span class="number">34</span></span><br><span class="line">  sz=<span class="string">&#x27;low&#x27;</span></span><br><span class="line"><span class="keyword">elseif</span> num&lt;<span class="number">67</span></span><br><span class="line">  sz=<span class="string">&#x27;medium&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  sz=<span class="string">&#x27;high&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="comment">% remember to add &#x27;end&#x27; at the end of if!!!!</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">10</span>;</span><br><span class="line">f = n;</span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">1</span>  <span class="comment">% while loop</span></span><br><span class="line">    n = n<span class="number">-1</span>;</span><br><span class="line">    f = f*n;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;n! = &#x27;</span> num2str(f)])</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Learning Notes</title>
    <url>/2022/05/03/Python-Learning-Notes/</url>
    <content><![CDATA[<h2 id="Secure-Hashes-and-Message-Digests"><a href="#Secure-Hashes-and-Message-Digests" class="headerlink" title="Secure Hashes and Message Digests"></a>Secure Hashes and Message Digests</h2><p>Docs: <a href="https://docs.python.org/3/library/hashlib.html">hashlib</a></p>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode Using Notes</title>
    <url>/2022/04/28/VSCode-Using-Notes/</url>
    <content><![CDATA[<h2 id="How-to-add-“Program-Files”-in-VS-Code-settings"><a href="#How-to-add-“Program-Files”-in-VS-Code-settings" class="headerlink" title="How to add “Program Files” in VS Code settings"></a>How to add “Program Files” in VS Code settings</h2><p>Use <code>&quot;C:\Program Files\...&quot;</code> or <code>C:\&quot;Program Files&quot;\...</code></p>
<h2 id="How-to-write-MATLAB-scripts-in-VSCode"><a href="#How-to-write-MATLAB-scripts-in-VSCode" class="headerlink" title="How to write MATLAB scripts in VSCode"></a>How to write MATLAB scripts in VSCode</h2><p>However, I find it not a good idea. The terminal crashes from time to time and <code>Workspace</code> in MATLAB cannot be integrated into vscode.</p>
<p>The main reason I want to use vscode to write MATLAB scripts is darkmode and suggestions. By changing the color profile and enabling autocompletion in MATLAB preferences, I can get a similar result.</p>
<h3 id="Install-Extensions"><a href="#Install-Extensions" class="headerlink" title="Install Extensions"></a>Install Extensions</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Matlab <span class="comment"># highlighting, suggestions, error messages</span></span><br><span class="line"><span class="comment"># You need to set matlab path and mlint path in the extension settings page.</span></span><br><span class="line"></span><br><span class="line">matlab-formatter <span class="comment"># format things</span></span><br><span class="line"><span class="comment"># You need to set Python path in the extension settings page. </span></span><br><span class="line"></span><br><span class="line">Matlab Interactive Terminal <span class="comment"># use vscode terminal instead of matlab IDE</span></span><br><span class="line"><span class="comment"># You need to set Python path in the extension settings page.</span></span><br><span class="line"><span class="comment"># If you enable this extension, do not enable another extension &#x27;matlab-code-run&#x27;</span></span><br><span class="line"></span><br><span class="line">Matlab Snippets <span class="comment"># more advanced suggestions </span></span><br><span class="line"></span><br><span class="line">Matlab Code Run <span class="comment"># run matlab using ctrl+shift+p and choose &#x27;run current matlab script or open a matlab terminal&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="Install-MATLAB-API-for-Python"><a href="#Install-MATLAB-API-for-Python" class="headerlink" title="Install MATLAB API for Python"></a>Install MATLAB API for Python</h3><p>The extension <code>Matlab Interactive Terminal</code> is based on matlab api for python. Follow <a href="https://ww2.mathworks.cn/help/matlab/matlab_external/install-the-matlab-engine-for-python.html">this doc</a> to install matlab api for python.</p>
<p>In Windows, <code>cd matlabRootPath\extern\engines\python</code>, then <code>python setup.py install</code>.  </p>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Software Using</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue+Django CORS and CSRF</title>
    <url>/2022/04/27/Vue-Django-CORS-and-CSRF/</url>
    <content><![CDATA[<h2 id="Backend-Django-Part"><a href="#Backend-Django-Part" class="headerlink" title="Backend (Django) Part"></a>Backend (Django) Part</h2><p>Docs: <a href="https://pypi.org/project/django-cors-headers/">django-cors-headers</a>, <a href="https://docs.djangoproject.com/en/4.0/ref/settings/#csrf-cookie-secure">django core settings</a></p>
<p>According to <a href="https://pypi.org/project/django-cors-headers/">django-cors-headers</a>, use:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m pip install django-cors-headers</span><br></pre></td></tr></table></figure>
<p>to install <code>django-cors-headers</code> and add it to installed apps in <code>settings.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...,</span><br><span class="line">    <span class="string">&quot;corsheaders&quot;</span>,</span><br><span class="line">    ...,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>Add a middleware class to listen in on responses. The order of middlewares is <strong>important</strong>:</p>
<p><code>CorsMiddleware</code> should be placed as high as possible, especially before any middleware that can generate responses such as Django’s <code>CommonMiddleware</code> or Whitenoise’s <code>WhiteNoiseMiddleware</code>. If it is not before, it will not be able to add the CORS headers to these responses.</p>
<p>Also if you are using <code>CORS_REPLACE_HTTPS_REFERER</code> it should be placed before Django’s <code>CsrfViewMiddleware</code>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    ...,</span><br><span class="line">    <span class="string">&quot;corsheaders.middleware.CorsMiddleware&quot;</span>,</span><br><span class="line">    <span class="string">&quot;django.middleware.common.CommonMiddleware&quot;</span>,</span><br><span class="line">    ...,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>Assume frontend is functioning on <code>frontend.com</code>.</p>
<p>Add:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CORS_ALLOWED_ORIGINS = [</span><br><span class="line">    <span class="string">&quot;frontend.com&quot;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_METHODS = [</span><br><span class="line">    <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="string">&quot;OPTIONS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PATCH&quot;</span>,</span><br><span class="line">    <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">    <span class="comment">#enable whatever method needed</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CSRF_TRUSTED_ORIGINS = [</span><br><span class="line">    <span class="string">&quot;frontend.com&quot;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">CSRF_COOKIE_SECURE = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">CSRF_COOKIE_SAMESITE = <span class="string">&#x27;None&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="Frontend-Vue-Part"><a href="#Frontend-Vue-Part" class="headerlink" title="Frontend (Vue) Part"></a>Frontend (Vue) Part</h2><p>Docs: <a href="https://axios-http.com/docs/req_config">Axios Request Config</a></p>
<p>We need to get CSRF token contained in cookie from backend.</p>
<p>In <code>urls.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_csrf_token</span>(<span class="params">request</span>):</span><br><span class="line">    csrf_token = get_token(request)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;token&#x27;</span>: csrf_token&#125;)</span><br><span class="line"></span><br><span class="line">urlpatterns=[</span><br><span class="line">    ...</span><br><span class="line">    path(<span class="string">&#x27;get_csrf_token/&#x27;</span>, get_csrf_token),</span><br><span class="line">    ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>Assume the backend is functioning on <code>backend.com</code>. In <code>whateverName.vue</code>, add:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//django use cookies to varify csrf</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueCookies</span> <span class="keyword">from</span> <span class="string">&#x27;vue-cookies&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueCookies</span>)</span><br><span class="line"><span class="comment">//`withCredentials` indicates whether or not cross-site Access-Control requests should be made using credentials</span></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">withCredentials</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            <span class="attr">token</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="comment">//get token function</span></span><br><span class="line">        <span class="title function_">gettoken</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">axios</span>(&#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">                <span class="attr">url</span>: <span class="string">`http://backend.com/get_csrf_token/`</span>,</span><br><span class="line">                <span class="attr">withCredentials</span>: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">token</span> = res.<span class="property">data</span>.<span class="property">token</span></span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//POST</span></span><br><span class="line">        <span class="title function_">tryPOST</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="title function_">axios</span>(&#123;</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;X-CSRFToken&#x27;</span>: <span class="variable language_">this</span>.<span class="property">token</span>,</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">withCredentials</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">url</span>: <span class="string">`http://backend.com/whateverURL`</span>,</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;data1&#x27;</span>: <span class="string">&#x27;data2&#x27;</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mounted</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//get token when page loads</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">gettoken</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Web Dev</tag>
        <tag>Django</tag>
        <tag>Vue</tag>
        <tag>Frontend</tag>
        <tag>Backend</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue Learning Notes</title>
    <url>/2022/04/27/Vue-Learning-Notes/</url>
    <content><![CDATA[<h2 id="Style-Related"><a href="#Style-Related" class="headerlink" title="Style Related"></a>Style Related</h2><h3 id="Add-Style-to-the-Chosen-Router-Link"><a href="#Add-Style-to-the-Chosen-Router-Link" class="headerlink" title="Add Style to the Chosen Router Link"></a>Add Style to the Chosen Router Link</h3><p>The chosen router link has a class <code>.router-link-exact-active</code></p>
<h2 id="Vue-Router-Related"><a href="#Vue-Router-Related" class="headerlink" title="Vue Router Related"></a>Vue Router Related</h2><h3 id="Navigation-Guard"><a href="#Navigation-Guard" class="headerlink" title="Navigation Guard"></a>Navigation Guard</h3><p>Docs: <a href="https://router.vuejs.org/guide/advanced/navigation-guards.html">Navigation Guards</a></p>
<p>As the name suggests, the navigation guards provided by Vue router are primarily used to guard navigations either by redirecting it or canceling it.</p>
<p>To put it in other words, navigation guards allows you to know the urls of the jump-out page and the jump-in page.</p>
<p>To get url of the jump-out page, in <code>whateverName.vue</code>, add:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            <span class="attr">lastURL</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">beforeRouteEnter</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) &#123;</span><br><span class="line">    <span class="title function_">next</span>(<span class="function">(<span class="params">vw</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">from</span>)</span><br><span class="line">      vw.<span class="property">lastUrl</span> = <span class="keyword">from</span>.<span class="property">fullPath</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Back-to-previous-route"><a href="#Back-to-previous-route" class="headerlink" title="Back to previous route"></a>Back to previous route</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">back</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Vuex-Related"><a href="#Vuex-Related" class="headerlink" title="Vuex Related"></a>Vuex Related</h2><h3 id="Get-Variables"><a href="#Get-Variables" class="headerlink" title="Get Variables"></a>Get Variables</h3><p>In <code>/store/index.js</code>, add:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">variableName</span>:<span class="string">&#x27;this is a global variable&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>In <code>view</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">computed</span>:&#123;</span><br><span class="line">        <span class="title function_">anyNameYourLike</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">variableName</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Web Dev</tag>
        <tag>Vue</tag>
        <tag>Frontend</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
</search>
