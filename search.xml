<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2014-10-23 NOIP模拟赛</title>
    <url>/2018/11/07/2014-10-23%20NOIP%E6%A8%A1%E6%8B%9F%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="Jams倒酒-pour"><a href="#Jams倒酒-pour" class="headerlink" title="Jams倒酒(pour)"></a>Jams倒酒(pour)</h1><p>1s，256MB</p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Jams是一家酒吧的老板，他的酒吧提供2种体积的啤酒，a ml 和 b ml，分别使用容积为a ml 和 b ml的酒杯来装载。</p>
<p>酒吧的生意并不好。Jams发现酒鬼们都很穷，不像他那么土豪。有时，他们会因为负担不起a ml 或者 b ml酒的消费，而不得不离去。因此，Jams决定出手第三种体积的啤酒(较小体积的啤酒)。</p>
<p>Jams只有两种杯子，容积分别为 a ml 和 b ml，而且啤酒杯是没有刻度的。他只能通过两种杯子和酒桶间的互相倾倒来得到新的体积的酒。</p>
<p>倒酒步骤为:</p>
<p>(1)     规定a&gt;=b</p>
<p>(2)     酒桶容积无限，酒桶中酒体积无限大。</p>
<p>(3)     只能包含三种可能的倒酒操作：</p>
<blockquote>
<p>1、 将酒桶中的酒倒入容积为b ml的酒杯中；</p>
<p>2、 将容积为a ml的酒杯中的酒倒入酒桶；</p>
<p>3、 将容积为b ml的酒杯中的酒倒入容积为 a ml的酒杯中。</p>
</blockquote>
<p>(4)     每次倒酒必须把杯子倒满或者把被倾倒的杯子倒空。</p>
<p>Jams希望通过若干次倾倒得到容积为 a ml酒杯中剩下的就体积尽可能小，他请求你帮助他设计倾倒方案。</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>两个整数a,b(0&lt;b&lt;=a&lt;=10^9)</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>第一行一个整数，表示可以得到的最小体积的酒。</p>
<p>第二行两个整数Pa和Pb（中间用一个空格分开），分别表示从体积为a ml的酒杯中到处酒的次数和将酒倒入体积为b ml的酒杯的次数。</p>
<p>若有多种可能的Pa，Pb满足要求，那么请输出Pa最小的。若Pa最小的时候有多个Pb，那么输出Pb最小的。</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure>
<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure>
<h2 id="提示-amp-约定"><a href="#提示-amp-约定" class="headerlink" title="提示&amp;约定"></a>提示&amp;约定</h2><p>倾倒方案为：<br>1、 桶-&gt;B；<br>2、 B-&gt;A；<br>3、 桶-&gt;B;<br>4、 B-&gt;A;<br>5、 A-&gt;桶；<br>6、 B-&gt;A;</p>
<p>对于20%的数据，pa,pb总和不超过5<br>对于60%的数据，pa&lt;=10^8<br>对于100%的数据，0&lt;b&lt;=a&lt;=10^9</p>
<h2 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h2><p>对于一个a&gt;b</p>
<p><img src="https://s1.ax1x.com/2018/11/07/iT5iqO.png" alt=""></p>
<p>每次都是把B倒满，把B倒入A，这时候B不一定倒完，但A满了，把A倒掉，把B中剩下的倒入A……这样循环下去。能取到酒的量为$-ax+by$，所以能取到的最小值就是$gcd(a,b)$</p>
<p>我们要求$-ax+by=gcd(a,b)$，所以用exgcd先求出一组x,y的解，然后判断x，y是否可以变小，或者y小于0，那么x变小，y变大。</p>
<h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(ll a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) fro(ll a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll a,b,x,y,ans,tx,ty;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">exgcd</span><span class="params">(ll a,ll b,ll &amp;x,ll &amp;y)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span> (b==<span class="number">0</span>) &#123;</span><br><span class="line">  x=<span class="number">1</span>;y=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line"> &#125;</span><br><span class="line"> ll ans=<span class="built_in">exgcd</span>(b,a%b,x,y);</span><br><span class="line"> ll t=x;x=y;</span><br><span class="line"> y=t-a/b*y;</span><br><span class="line"> <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">freopen</span>(<span class="string">&quot;pour.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);<span class="built_in">freopen</span>(<span class="string">&quot;pour.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"> <span class="built_in">rll</span>(a);<span class="built_in">rll</span>(b);ans=<span class="built_in">exgcd</span>(a,b,x,y);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);x*=<span class="number">-1</span>;tx=b/ans;ty=a/ans;</span><br><span class="line"> <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">  ll t=(<span class="number">0</span>-x)/tx+((<span class="number">0</span>-x)%tx!=<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">  x+=t*tx;y+=t*ty;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(y&lt;<span class="number">0</span>)&#123;</span><br><span class="line">  ll t=(<span class="number">0</span>-y)/ty+((<span class="number">0</span>-y)%ty!=<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">  x+=t*tx;y+=t*ty;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%lld %lld\n&quot;</span>,x,y);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="土豪聪要请客-stol"><a href="#土豪聪要请客-stol" class="headerlink" title="土豪聪要请客(stol)"></a>土豪聪要请客(stol)</h1><p>1s，256MB</p>
<h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>众所周知，聪哥(ndsf)是个土豪，不过你们不知道的是他的MZ和他的RMB一样滴多……<br>某天土豪聪又赚了10^10000e的RMB，他比较开心，于是准备请客。他在自己在XX星上的别墅里面大摆酒席，想要邀请尽可能多的MZ来参加他的宴会。他将会同MZ一起坐在一个巨大的长方形桌子上。这个桌子能坐下的人数等于他的边长。聪哥要求他的桌子能够放进他的别墅，并且桌子的边必须与别墅的边界平行。给定别墅的平面图，请你求出聪哥最多可以请多少个MZ。</p>
<h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>第一行n,m。表示别墅的长宽<br>下面n行，每行M个字符，表示一个方块是空的(‘.’)或是被占用了(‘X’)。<br>聪哥只要他的桌子放在别墅里，并且桌子不能占用任何一个已经占用了的方块。</p>
<h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>一个数，表示聪哥最多可以请几个Maze。</p>
<h2 id="样例输入1"><a href="#样例输入1" class="headerlink" title="样例输入1"></a>样例输入1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 2</span><br><span class="line">..</span><br><span class="line">..</span><br></pre></td></tr></table></figure>
<h2 id="样例输出1"><a href="#样例输出1" class="headerlink" title="样例输出1"></a>样例输出1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure>
<h2 id="样例输入2"><a href="#样例输入2" class="headerlink" title="样例输入2"></a>样例输入2</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 4</span><br><span class="line">X.XX</span><br><span class="line">X..X</span><br><span class="line">..X.</span><br><span class="line">..XX</span><br></pre></td></tr></table></figure>
<h2 id="样例输出2"><a href="#样例输出2" class="headerlink" title="样例输出2"></a>样例输出2</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure>
<h2 id="提示-amp-约定-1"><a href="#提示-amp-约定-1" class="headerlink" title="提示&amp;约定"></a>提示&amp;约定</h2><p>对于60%的数据，n,m&lt;=100<br>对于100%的数据，n,m&lt;=400</p>
<h2 id="solution-1"><a href="#solution-1" class="headerlink" title="solution"></a>solution</h2><p>枚举m上的边长范围，然后对n跑最大连续子段和</p>
<h2 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 410</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) fro(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[N][N],n,m,ans=<span class="number">0</span>,f[N];</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> i1,<span class="type">int</span> i2,<span class="type">int</span> j1,<span class="type">int</span> j2)</span></span>&#123;</span><br><span class="line"> i1--;j1--;</span><br><span class="line"> <span class="keyword">return</span> a[i2][j2]-a[i1][j2]-a[i2][j1]+a[i1][j1]==<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> (l+r)*<span class="number">2</span><span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">freopen</span>(<span class="string">&quot;stol.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);<span class="built_in">freopen</span>(<span class="string">&quot;stol.ans&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(m);<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a));</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line">  <span class="built_in">fsb</span>(j,<span class="number">1</span>,m)a[i][j]=(s[j]==<span class="string">&#x27;X&#x27;</span>?<span class="number">1</span>:<span class="number">0</span>)+a[i<span class="number">-1</span>][j]+a[i][j<span class="number">-1</span>]-a[i<span class="number">-1</span>][j<span class="number">-1</span>];</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">// fsb(i,1,n)&#123;fsb(j,1,m)printf(&quot;%3d&quot;,a[i][j]);puts(&quot;&quot;);&#125;</span></span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,m)<span class="built_in">fsb</span>(j,i,m)&#123;</span><br><span class="line">  <span class="built_in">memset</span>(f,<span class="number">255</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line">  <span class="built_in">fsb</span>(k,<span class="number">1</span>,n)&#123;</span><br><span class="line">   <span class="keyword">if</span>(!<span class="built_in">check</span>(k,k,i,j))<span class="keyword">continue</span>;</span><br><span class="line">   f[k]=<span class="number">1</span>+<span class="built_in">max</span>(<span class="number">0</span>,f[k<span class="number">-1</span>]);</span><br><span class="line">   ans=<span class="built_in">max</span>(<span class="built_in">calc</span>(j-i+<span class="number">1</span>,f[k]),ans);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="最强大脑-zhber"><a href="#最强大脑-zhber" class="headerlink" title="最强大脑(zhber)"></a>最强大脑(zhber)</h1><p>5s，256MB</p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>zhb国是一个传说中的国度，国家的居民叫做最强(chang)大脑(diao)。Zhb国是一个N×M的矩形方阵，每个格子代表一个街区。<br>然而zhb国是没有交通工具的。居民大脑(diao)们完全靠地面的弹射装置来移动。<br>每个街区都装有弹射装置。使用弹射装置是需要支付一定费用的。而且每个弹射装置都有自己的弹射能力。<br>我们设第i行第j列的弹射装置有Aij的费用和Bij的弹射能力。并规定有相邻边的格子间距离是1。那么，任何居民大脑(diao)都只需要在(i,j)支付Aij的费用就可以任意选择弹到距离不超过Bij的位置了。如下图</p>
<p><img src="https://s1.ax1x.com/2018/11/07/iTDr34.png" alt=""></p>
<p>（从红色街区交费以后可以跳到周围的任意蓝色街区。）</p>
<p>现在的问题很简单。有三个居民，她们分别是zhb的maze，分别叫做X，Y，Z。现在她们决定聚在一起玩找zhb玩(….)，于是想往其中一人的位置集合。但由于zhb太抠门了，不给报销路费，所以告诉你3个maze的坐标，求往哪里集合大家需要花的费用总和最低。<br>Zhb:如果你完美解决了这个问题，就授予你“最强(chang)大脑(diao)”称号。</p>
<h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><p>输入的第一行包含两个整数N和M，分别表示行数和列数。<br>接下来是2个N×M的自然数矩阵，为Bij和Aij<br>最后一行六个数，分别代表X，Y，Z所在地的行号和列号。</p>
<h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p>第一行输出一个字符X、Y或者Z。表示最优集合地点。<br>第二行输出一个整数，表示最小费用。<br>如果无法集合，只输出一行NO</p>
<h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 4</span><br><span class="line">0 0 0 0</span><br><span class="line">1 2 2 0</span><br><span class="line">0 2 2 1</span><br><span class="line">0 0 0 0</span><br><span class="line">5 5 5 5</span><br><span class="line">5 5 5 5</span><br><span class="line">5 5 5 5</span><br><span class="line">5 5 5 5</span><br><span class="line">2 1 3 4 2 2</span><br></pre></td></tr></table></figure>
<h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Z</span><br><span class="line">15</span><br></pre></td></tr></table></figure>
<h2 id="提示-amp-约定-2"><a href="#提示-amp-约定-2" class="headerlink" title="提示&amp;约定"></a>提示&amp;约定</h2><p>20%  N, M ≤ 10;   Bij ≤ 20<br>40%  N, M ≤ 100;   Bij ≤ 20<br>100%  1 ≤ N, M ≤ 150;  0 ≤ Bij ≤ 109;  0 ≤ Aij ≤ 1000</p>
<h2 id="solution-2"><a href="#solution-2" class="headerlink" title="solution"></a>solution</h2><p>跑3遍堆优化dijk</p>
<h2 id="code-2"><a href="#code-2" class="headerlink" title="code"></a>code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 160</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> min(a,b) ((a)&lt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 99999999</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> abs(a) ((a)&gt;0?(a):(-(a)))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,a[N][N],b[N][N],sz;</span><br><span class="line"><span class="type">int</span> di[N][N],po[N][N],X[N][N],Y[N][N],Z[N][N],xx,xy,yx,yy,zx,zy,vi[N][N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> <span class="type">int</span> x,y;</span><br><span class="line">&#125;s[N*N];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">sup</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> son=u;</span><br><span class="line"> <span class="keyword">while</span>(son&gt;<span class="number">1</span>&amp;&amp;(di[s[son].x][s[son].y]&lt;di[s[son&gt;&gt;<span class="number">1</span>].x][s[son&gt;&gt;<span class="number">1</span>].y]))&#123;</span><br><span class="line">  <span class="built_in">swap</span>(po[s[son].x][s[son].y],po[s[son&gt;&gt;<span class="number">1</span>].x][s[son&gt;&gt;<span class="number">1</span>].y]);</span><br><span class="line">  <span class="built_in">swap</span>(s[son],s[son&gt;&gt;<span class="number">1</span>]);</span><br><span class="line">  son&gt;&gt;=<span class="number">1</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">sdown</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> fa=u,son;</span><br><span class="line"> <span class="keyword">while</span>(fa*<span class="number">2</span>&lt;=sz)&#123;</span><br><span class="line">  son=fa*<span class="number">2</span>;son+=(son+<span class="number">1</span>&lt;=sz&amp;&amp;di[s[son+<span class="number">1</span>].x][s[son+<span class="number">1</span>].y]&lt;di[s[son].x][s[son].y])?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(di[s[son].x][s[son].y]&lt;di[s[fa].x][s[fa].y])&#123;</span><br><span class="line">   <span class="built_in">swap</span>(po[s[fa].x][s[fa].y],po[s[son].x][s[son].y]);</span><br><span class="line">   <span class="built_in">swap</span>(s[son],s[fa]);</span><br><span class="line">   fa=son;</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">spush</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"> s[++sz]=(node)&#123;x,y&#125;;po[x][y]=sz;</span><br><span class="line"> <span class="built_in">sup</span>(sz);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">spop</span><span class="params">()</span></span>&#123;</span><br><span class="line"> po[s[<span class="number">1</span>].x][s[<span class="number">1</span>].y]=<span class="number">0</span>;<span class="keyword">if</span>(sz==<span class="number">1</span>)&#123;sz=<span class="number">0</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line"> s[<span class="number">1</span>]=s[sz--];po[s[<span class="number">1</span>].x][s[<span class="number">1</span>].y]=<span class="number">1</span>;<span class="built_in">sdown</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">freopen</span>(<span class="string">&quot;fly.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);<span class="built_in">freopen</span>(<span class="string">&quot;fly.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(m);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">fsb</span>(j,<span class="number">1</span>,m)<span class="built_in">rll</span>(b[i][j]);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">fsb</span>(j,<span class="number">1</span>,m)<span class="built_in">rll</span>(a[i][j]);</span><br><span class="line"> <span class="built_in">rll</span>(xx);<span class="built_in">rll</span>(xy);<span class="built_in">rll</span>(yx);<span class="built_in">rll</span>(yy);<span class="built_in">rll</span>(zx);<span class="built_in">rll</span>(zy);</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//work X</span></span><br><span class="line"> <span class="built_in">mem</span>(di,<span class="number">60</span>);<span class="built_in">mem</span>(po,<span class="number">0</span>);<span class="built_in">mem</span>(vi,<span class="number">0</span>);</span><br><span class="line"> sz=<span class="number">0</span>;di[xx][xy]=<span class="number">0</span>;<span class="built_in">spush</span>(xx,xy);</span><br><span class="line"> <span class="keyword">while</span>(sz&gt;<span class="number">0</span>&amp;&amp;((!vi[yx][yy])||(!vi[zx][zy])))&#123;</span><br><span class="line">  <span class="type">int</span> x=s[<span class="number">1</span>].x,y=s[<span class="number">1</span>].y;<span class="built_in">spop</span>();vi[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//  printf(&quot;%10d %d\n&quot;,x,y);</span></span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="built_in">max</span>(x-b[x][y],<span class="number">1</span>),<span class="built_in">min</span>(x+b[x][y],n))</span><br><span class="line">   <span class="built_in">fsb</span>(j,<span class="built_in">max</span>(y-(b[x][y]-<span class="built_in">abs</span>(i-x)),<span class="number">1</span>),<span class="built_in">min</span>(y+(b[x][y]-<span class="built_in">abs</span>(i-x)),m))&#123;</span><br><span class="line">    <span class="keyword">if</span>(di[i][j]&lt;=di[x][y]+a[x][y])<span class="keyword">continue</span>;</span><br><span class="line">    di[i][j]=di[x][y]+a[x][y];</span><br><span class="line">    <span class="keyword">if</span>(po[i][j]==<span class="number">0</span>)<span class="built_in">spush</span>(i,j);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">sup</span>(po[i][j]);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> X[xx][xy]=di[xx][xy];X[yx][yy]=di[yx][yy];X[zx][zy]=di[zx][zy];</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//work Y</span></span><br><span class="line"> <span class="built_in">mem</span>(di,<span class="number">60</span>);<span class="built_in">mem</span>(po,<span class="number">0</span>);<span class="built_in">mem</span>(vi,<span class="number">0</span>);</span><br><span class="line"> sz=<span class="number">0</span>;di[yx][yy]=<span class="number">0</span>;<span class="built_in">spush</span>(yx,yy);</span><br><span class="line"> <span class="keyword">while</span>(sz&gt;<span class="number">0</span>&amp;&amp;((!vi[xx][xy])||(!vi[zx][zy])))&#123;</span><br><span class="line">  <span class="type">int</span> x=s[<span class="number">1</span>].x,y=s[<span class="number">1</span>].y;<span class="built_in">spop</span>();vi[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//  printf(&quot;%10d %d\n&quot;,x,y);</span></span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="built_in">max</span>(x-b[x][y],<span class="number">1</span>),<span class="built_in">min</span>(x+b[x][y],n))</span><br><span class="line">   <span class="built_in">fsb</span>(j,<span class="built_in">max</span>(y-(b[x][y]-<span class="built_in">abs</span>(i-x)),<span class="number">1</span>),<span class="built_in">min</span>(y+(b[x][y]-<span class="built_in">abs</span>(i-x)),m))&#123;</span><br><span class="line">    <span class="keyword">if</span>(di[i][j]&lt;=di[x][y]+a[x][y])<span class="keyword">continue</span>;</span><br><span class="line">    di[i][j]=di[x][y]+a[x][y];</span><br><span class="line">    <span class="keyword">if</span>(po[i][j]==<span class="number">0</span>)<span class="built_in">spush</span>(i,j);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">sup</span>(po[i][j]);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> Y[xx][xy]=di[xx][xy];Y[yx][yy]=di[yx][yy];Y[zx][zy]=di[zx][zy];</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//work Z</span></span><br><span class="line"> <span class="built_in">mem</span>(di,<span class="number">60</span>);<span class="built_in">mem</span>(po,<span class="number">0</span>);<span class="built_in">mem</span>(vi,<span class="number">0</span>);</span><br><span class="line"> sz=<span class="number">0</span>;di[zx][zy]=<span class="number">0</span>;<span class="built_in">spush</span>(zx,zy);</span><br><span class="line"> <span class="keyword">while</span>(sz&gt;<span class="number">0</span>&amp;&amp;((!vi[yx][yy])||(!vi[xx][xy])))&#123;</span><br><span class="line">  <span class="type">int</span> x=s[<span class="number">1</span>].x,y=s[<span class="number">1</span>].y;<span class="built_in">spop</span>();vi[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//  printf(&quot;%10d %d\n&quot;,x,y);</span></span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="built_in">max</span>(x-b[x][y],<span class="number">1</span>),<span class="built_in">min</span>(x+b[x][y],n))</span><br><span class="line">   <span class="built_in">fsb</span>(j,<span class="built_in">max</span>(y-(b[x][y]-<span class="built_in">abs</span>(i-x)),<span class="number">1</span>),<span class="built_in">min</span>(y+(b[x][y]-<span class="built_in">abs</span>(i-x)),m))&#123;</span><br><span class="line">    <span class="keyword">if</span>(di[i][j]&lt;=di[x][y]+a[x][y])<span class="keyword">continue</span>;</span><br><span class="line">    di[i][j]=di[x][y]+a[x][y];</span><br><span class="line">    <span class="keyword">if</span>(po[i][j]==<span class="number">0</span>)<span class="built_in">spush</span>(i,j);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">sup</span>(po[i][j]);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> Z[xx][xy]=di[xx][xy];Z[yx][yy]=di[yx][yy];Z[zx][zy]=di[zx][zy];</span><br><span class="line"> </span><br><span class="line"> <span class="type">int</span> ans=<span class="number">-1</span>,ans1=INF;</span><br><span class="line"> <span class="keyword">if</span>(Y[xx][xy]+Z[xx][xy]&lt;ans1)&#123;</span><br><span class="line">  ans1=Y[xx][xy]+Z[xx][xy];</span><br><span class="line">  ans=<span class="number">1</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(X[yx][yy]+Z[yx][yy]&lt;ans1)&#123;</span><br><span class="line">  ans1=X[yx][yy]+Z[yx][yy];</span><br><span class="line">  ans=<span class="number">2</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(X[zx][zy]+Y[zx][zy]&lt;ans1)&#123;</span><br><span class="line">  ans1=X[zx][zy]+Y[zx][zy];</span><br><span class="line">  ans=<span class="number">3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(ans==<span class="number">-1</span>)&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">puts</span>(ans==<span class="number">1</span>?<span class="string">&quot;X&quot;</span>:(ans==<span class="number">2</span>?<span class="string">&quot;Y&quot;</span>:<span class="string">&quot;Z&quot;</span>));<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans1);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>A Number Guessing Game Bot</title>
    <url>/2022/04/28/A-Number-Guessing-Game-Bot/</url>
    <content><![CDATA[<p><div id="guessing_game">
    <h1>A Guessing Game</h1>
    <a target="_blank" href="https://baike.baidu.com/item/%E7%8C%9C%E6%95%B0%E5%AD%97/83200?fr=aladdin">Here's the
      rules.</a><br>
    <button onclick="init()">Start the Game</button><button onclick="result()">Correct!</button><br>
    <input id="reA" type="tel">A <input id="reB" type="tel">B<br>
    <button onclick="kill()">Confirm</button>
    <p id="inf"></p>
  </div><br>  <img scr="../images/avatar.png"></p>
<script>
let rule_on_show = 0, init1 = 0, tern = 0, ans, first = 1, tot = 0, pre = 0, l = 0, check = 0, G = 0, isright = 0, lA = 0;
let a = new Array(), b = new Array(), cmp = new Array(), rd = new Array();
function build() {
  for (let i = 0; i <= 5; i++)cmp[i] = new Array();
  for (let i = 0; i <= 9; i++)for (let j = 0; j <= 9; j++)for (let k = 0; k <= 9; k++)for (let l = 0; l <= 9; l++) {
    if (i == j || i == k || i == l || j == k || j == l || k == l) continue;
    a[++tot] = i * 1000 + j * 100 + k * 10 + l;
  }
}
function init() {
  document.getElementById("inf").innerHTML = '';
  if (first == 1) {
    build(); first = 0;
  }
  for (let i = 1; i <= tot; i++)b[i] = 1;
  check = 1; init1 = 1; tern = 0; isright = 0; lA = 0;
  makeguess();
}
function getn(x, n) {
  for (let i = 1; i <= 4 - n; i++)x = Math.floor(x / 10);
  return x % 10;
}
function compA(X, Y) {
  let x = new Array(), y = new Array(), A = 0;
  for (let i = 1; i <= 4; i++)x[i] = getn(X, i);
  for (let i = 1; i <= 4; i++)y[i] = getn(Y, i);
  for (let i = 1; i <= 4; i++)if (x[i] == y[i]) A++;
  return A;
}
function compB(X, Y) {
  let x = new Array(), y = new Array(), B = 0;
  for (let i = 1; i <= 4; i++)x[i] = getn(X, i);
  for (let i = 1; i <= 4; i++)y[i] = getn(Y, i);
  for (let i = 1; i <= 4; i++)for (let j = 1; j <= 4; j++)if (i != j && x[i] == y[j]) B++;
  return B;
}
function sqr(x) {
  return x * x;
}
function abS(x) {
  if (x >= 0) return x; return -x;
}
function makeguess() {
  tern++;
  if (tern == 1) {
    G = a[Math.ceil(Math.random() * Math.random() * tot * tot * tot) % tot + 1]; pre = 5040;
  } else {
    let bestans = 0, ans; l = 0, eps = 1e-3;
    pre = 0;
    for (let i = 1; i <= tot; i++) {
      pre += b[i]
    }
    for (let i = 1; i <= tot; i++) {
      if (b[i] == 0) continue;
      for (let j = 0; j <= 4; j++)for (let k = 0; k <= 4 - j; k++)cmp[j][k] = 0;
      for (let j = 1; j <= tot; j++)
        if (b[j] == 1) {
          cmp[compA(a[j], a[i])][compB(a[j], a[i])]++;
        }
      ans = 0;
      for (let j = 0; j <= 4; j++)for (let k = 0; k <= 4 - j; k++)
        if (cmp[j][k] != 0) {
          ans += Math.log(pre / cmp[j][k]) * cmp[j][k] / pre;//sqr(ave-cmp[j][k]);
        }
      //ans/=cnt;ans-=cnt*1.1;
      if (abS(ans - bestans) <= eps) {
        rd[++l] = i;
        console.log(ans + ' ' + a[rd[l]]);
        continue;
      }
      if (ans > bestans) {
        console.log(ans + ' ' + a[rd[1]])
        l = 1; rd[1] = i; bestans = ans;
      }
    }
    G = a[rd[Math.ceil(Math.random() * Math.random() * tot * tot * tot) % l + 1]];
  }
  let t = '';
  for (let i = 1; i <= 4; i++)t = t + String(getn(G, i));
  document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + 'Attempt ' + String(tern) + ': ' + t + ' (' + String(pre) + ')';
  //document.getElementById("inf").innerHTML=String(l);
}
function kill() {
  if (init1 == 0) {
    document.getElementById("inf").innerHTML = 'Game has not started'; return;
  }
  if (isright == 1) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Hit the answer in ' + String(tern) + ' steps!'; init1 = 0;
    return;
  }
  let gusA = document.getElementById("reA").value, gusB = document.getElementById("reB").value, A, B, ill = 0;
  if (isNaN(gusA) || isNaN(gusB) || gusA == '' || gusB == '') ill = 1;
  else {
    A = Number(gusA); B = Number(gusB);
    if (A < 0 || B < 0 || A > 4 || B > 4 || A + B > 4) ill = 1;
  }
  if (ill == 1) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Wrong Input!<br>'; return;
  }
  lA = A;
  if (A == 4) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Hit the answer in ' + String(tern) + ' steps!'; init1 = 0;
    return;
  }
  let count = 0;
  for (let i = 1; i <= tot; i++) {
    if (b[i] == 1 && ((compA(a[i], G) != A || compB(a[i], G) != B) || a[i] == G)) b[i] = 0;
    if (b[i] == 1) count++;
  }
  if (count == 0) {
    document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + '<br>Wrong Input!<br>'; init1 = 0; return;
  }
  document.getElementById("inf").innerHTML = document.getElementById("inf").innerHTML + ' ' + String(gusA) + 'A ' + String(gusB) + 'B<br>';
  makeguess();
}
function result() {
  isright = 1;
  kill();
}
</script>
]]></content>
      <tags>
        <tag>Fun Stuff</tag>
        <tag>Project</tag>
      </tags>
  </entry>
  <entry>
    <title>Definition of Maturation in My Dictionary</title>
    <url>/2022/08/21/Definition-of-Maturation-in-My-Dictionary/</url>
    <content><![CDATA[<p>Maturation is to pack oneself into a class, so that others do not need to know how exactly you handle their function calls.</p>
]]></content>
      <tags>
        <tag>Whisper</tag>
      </tags>
  </entry>
  <entry>
    <title>Datacenter Workload Visualization</title>
    <url>/2022/08/07/Datacenter-Workload-Visualization/</url>
    <content><![CDATA[<p>Codes and results are at its <a href="https://github.com/zijunhz/datacenter-workload-visualization">Github Repo</a> The repo is temporarily set to private.</p>
]]></content>
      <tags>
        <tag>Project</tag>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>C and C++ Learning Notes</title>
    <url>/2022/06/25/C-and-C-Learning-Notes/</url>
    <content><![CDATA[<h2 id="CMake"><a href="#CMake" class="headerlink" title="CMake"></a>CMake</h2><h3 id="Link-math-h-Manually"><a href="#Link-math-h-Manually" class="headerlink" title="Link math.h Manually"></a>Link <code>math.h</code> Manually</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set(CMAKE_EXPORT_COMPILE_COMMANDS ON)</span><br><span class="line">add_compile_options(-lm)</span><br><span class="line"></span><br><span class="line">target_link_libraries(theNameOfYourExecutable m)</span><br></pre></td></tr></table></figure>
<h2 id="Dynamic-allocation"><a href="#Dynamic-allocation" class="headerlink" title="Dynamic allocation"></a>Dynamic allocation</h2><p>Use <code>new</code> to new things.</p>
<p>Use <code>delete xx</code> to delete single pointer.</p>
<p>Use <code>delete[] xx</code> to delete pointer array.</p>
<p>Use <code>nullptr</code> instead of <code>NULL</code>.</p>
<h2 id="iomanip"><a href="#iomanip" class="headerlink" title="iomanip"></a>iomanip</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> num;</span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    <span class="comment">// num *= num;</span></span><br><span class="line">    <span class="function">ofstream <span class="title">out</span><span class="params">(<span class="string">&quot;double_square.txt&quot;</span>)</span></span>;</span><br><span class="line">    out &lt;&lt; <span class="built_in">setfill</span>(<span class="string">&#x27;*&#x27;</span>) &lt;&lt; left &lt;&lt; fixed;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">        out &lt;&lt; <span class="built_in">setw</span>(<span class="number">11</span>) &lt;&lt; <span class="built_in">setprecision</span>(i - <span class="number">1</span>) &lt;&lt; fixed &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Input-in-C-until-EOL-with-istringstream"><a href="#Input-in-C-until-EOL-with-istringstream" class="headerlink" title="Input in C++ until EOL with istringstream"></a>Input in C++ until EOL with <code>istringstream</code></h2><p>Use <code>istringstream</code> to turn a string into a stream.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string inFileName;</span><br><span class="line">    cin &gt;&gt; inFileName;</span><br><span class="line">    <span class="function">ifstream <span class="title">inFile</span><span class="params">(inFileName)</span></span>;</span><br><span class="line">    string operation;</span><br><span class="line">    <span class="keyword">while</span> (!inFile.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">        string line;</span><br><span class="line">        <span class="built_in">getline</span>(inFile, line);</span><br><span class="line">        <span class="function">istringstream <span class="title">inputLine</span><span class="params">(line)</span></span>;</span><br><span class="line">        inputLine &gt;&gt; operation;</span><br><span class="line">        cout &lt;&lt; operation &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>A+B problem written with class, const member functions, and operator overloading:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Number</span> &#123;</span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Number</span>(<span class="type">int</span> a)</span><br><span class="line">        : <span class="built_in">a</span>(a) &#123;&#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    Number <span class="keyword">operator</span>+(<span class="type">const</span> Number&amp; b) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Number</span>(<span class="built_in">get</span>() + b.<span class="built_in">get</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">Number <span class="title">a</span><span class="params">(<span class="number">10</span>)</span>, <span class="title">b</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line">    cout &lt;&lt; (a + b).<span class="built_in">get</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="How-to-judge-EOF-in-C"><a href="#How-to-judge-EOF-in-C" class="headerlink" title="How to judge EOF in C++"></a>How to judge EOF in C++</h2><p>Use <code>.eof()</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string inFileName;</span><br><span class="line">    cin &gt;&gt; inFileName;</span><br><span class="line">    <span class="function">ifstream <span class="title">inFile</span><span class="params">(inFileName)</span></span>;</span><br><span class="line">    string operation;</span><br><span class="line">    <span class="keyword">while</span> (!inFile.<span class="built_in">eof</span>()) &#123;</span><br><span class="line">        inFile &gt;&gt; operation;</span><br><span class="line">        cout &lt;&lt; operation &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Const-member-functions"><a href="#Const-member-functions" class="headerlink" title="Const member functions"></a>Const member functions</h2><p>To specify to the compiler that a given member function is safe to call on const objects, you can declare the function with the const keyword. This specifies that the function is a “read-only” function that does not modify the object on which it is called.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> string&amp; Person ::<span class="built_in">getName</span>() <span class="type">const</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> name;  <span class="comment">// Doesn ’t modify anything ; trying to modify a</span></span><br><span class="line">    <span class="comment">// data member from here would be a syntax error</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Static-Members-and-Variables"><a href="#Static-Members-and-Variables" class="headerlink" title="Static Members and Variables"></a>Static Members and Variables</h2><p>Static data members of a class are also known as “class variables,” because there is only one unique value for all the objects of that class. Their content is not different from one object of this class to another.</p>
<p>For example, it may be used for a variable within a class that can contain a counter with the number of objects of the class that are currently allocated, as in the following example</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDummy</span> &#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">CDummy</span>() &#123; ++n; &#125;</span><br><span class="line">    ~<span class="built_in">CDummy</span>() &#123; --n; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> CDummy::n = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    CDummy a;</span><br><span class="line">    CDummy b[<span class="number">5</span>];</span><br><span class="line">    CDummy* c = <span class="keyword">new</span> CDummy;</span><br><span class="line">    cout &lt;&lt; a.n &lt;&lt; <span class="string">&quot;\n&quot;</span>;  <span class="comment">// prints out 7</span></span><br><span class="line">    <span class="keyword">delete</span> c;</span><br><span class="line">    cout &lt;&lt; CDummy ::n &lt;&lt; <span class="string">&quot;\n&quot;</span>;  <span class="comment">// prints out 6</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Operator-overloading"><a href="#Operator-overloading" class="headerlink" title="Operator overloading"></a>Operator overloading</h2><p><a href="https://www.tutorialspoint.com/cplusplus/cpp_overloading.htm">Reference</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Number</span> &#123;</span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Number</span>(<span class="type">int</span> a)</span><br><span class="line">        : <span class="built_in">a</span>(a) &#123;&#125;</span><br><span class="line">    <span class="comment">// here const is needed to declare that this method will not change member variable because the following overloading uses const</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">Number <span class="keyword">operator</span>+(<span class="type">const</span> Number&amp; a, <span class="type">const</span> Number&amp; b) &#123;</span><br><span class="line">    <span class="function">Number <span class="title">res</span><span class="params">(a.get() + b.get())</span></span>;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// notice, if you are defining this operator inside a class and if the operator needs 2 arguments, you only need to write 1.</span></span><br><span class="line"><span class="comment">// This is because the first argument is the instance of the class calling the operator function. </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="STL-vector"><a href="#STL-vector" class="headerlink" title="STL vector"></a>STL vector</h2><p><a href="https://www.geeksforgeeks.org/vector-in-cpp-stl/">Reference</a></p>
<h3 id="Useful-method"><a href="#Useful-method" class="headerlink" title="Useful method"></a>Useful method</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v</span><span class="params">(<span class="number">10</span>, <span class="number">3</span>)</span></span>;  <span class="comment">// 10 elements with value 3</span></span><br><span class="line">    v.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    v.<span class="built_in">pop_back</span>();</span><br><span class="line">    cout &lt;&lt; v.<span class="built_in">empty</span>();</span><br><span class="line">    cout &lt;&lt; v.<span class="built_in">size</span>();</span><br><span class="line">    cout &lt;&lt; v[<span class="number">4</span>];</span><br><span class="line">    <span class="comment">// use iterator to visit the elements</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;::iterator i = v.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="keyword">while</span> (i != v.<span class="built_in">end</span>()) &#123;</span><br><span class="line">        cout &lt;&lt; *i;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// or use auto</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> j = v.<span class="built_in">begin</span>(); j != v.<span class="built_in">end</span>(); j++) &#123;</span><br><span class="line">        cout &lt;&lt; *j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> k : v) &#123;  <span class="comment">// k is every element in v</span></span><br><span class="line">        cout &lt;&lt; k &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// if you want to modify the vector, use reference</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span>&amp; k : v) &#123;</span><br><span class="line">        k -= <span class="number">1</span>;</span><br><span class="line">        cout &lt;&lt; k &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Modifiers:</p>
<ul>
<li><code>assign()</code> – It assigns new value to the vector elements by replacing old ones</li>
<li><code>push_back()</code> – It push the elements into a vector from the back</li>
<li><code>pop_back()</code> – It is used to pop or remove elements from a vector from the back.</li>
<li><code>insert()</code> – It inserts new elements before the element at the specified position</li>
<li><code>erase()</code> – It is used to remove elements from a container from the specified position or range.<br><code>v1.erase(v1.begin()+1,v1.begin()+3)</code> for example.</li>
<li>swap() – It is used to swap the contents of one vector with another vector of same type. Sizes may differ.</li>
<li>clear() – It is used to remove all the elements of the vector container</li>
<li>emplace() – It extends the container by inserting new element at position</li>
<li>emplace_back() – It is used to insert a new element into the vector container, the new element is added to the end of the vector</li>
<li><code>count(v.begin(),v.end(),val)</code> count how many element in v is equal to val.</li>
<li><code>find(v.begin(),v.end(),val)</code> return iterator pointing to the first element equal to val</li>
<li><code>unique(v.begin(),v.end())</code> return an iterator pointing to the element after that remove all <strong>consecutive</strong> duplicates. But the size of the vector will not shrink, so it needs to be done like this:</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">it=<span class="built_in">unique</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());</span><br><span class="line">v.<span class="built_in">resize</span>(<span class="built_in">distance</span>(v.<span class="built_in">begin</span>(),it));</span><br></pre></td></tr></table></figure>
<p>To gain a true unique vector, sort the vector first. <code>sort(v.begin(),v.end(),cmp)</code></p>
<h2 id="Virtual-function"><a href="#Virtual-function" class="headerlink" title="Virtual function"></a>Virtual function</h2><p><a href="https://www.geeksforgeeks.org/virtual-function-cpp/">Docs</a></p>
<p>A virtual function is a member function which is declared within a base class and is re-defined (overridden) by a derived class. When you refer to a derived class object using a pointer or a reference to the base class, you can call a virtual function for that object and execute the derived class’s version of the function.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// CPP program to illustrate</span></span><br><span class="line"><span class="comment">// concept of Virtual Functions</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">base</span> &#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;print base class\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;show base class\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">derived</span> : <span class="keyword">public</span> base &#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;print derived class\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;show derived class\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    base* bptr;</span><br><span class="line">    derived d;</span><br><span class="line">    bptr = &amp;d;</span><br><span class="line">    <span class="comment">// Virtual function, binded at runtime</span></span><br><span class="line">    bptr-&gt;<span class="built_in">print</span>();</span><br><span class="line">    <span class="comment">// Non-virtual function, binded at compile time</span></span><br><span class="line">    bptr-&gt;<span class="built_in">show</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Output</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print derived class</span><br><span class="line">show base class</span><br></pre></td></tr></table></figure>
<h2 id="Reference-and-pointer-are-two-things"><a href="#Reference-and-pointer-are-two-things" class="headerlink" title="Reference and pointer are two things"></a>Reference and pointer are two things</h2><p>Check out <a href="https://www.educative.io/answers/differences-between-pointers-and-references-in-cpp">this page</a></p>
<p>Here’s a piece of example code:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">zero_small</span><span class="params">(<span class="type">int</span>*, <span class="type">int</span>*)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">zero_small</span><span class="params">(<span class="type">int</span>&amp;, <span class="type">int</span>&amp;)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">1</span>, b = <span class="number">0</span>;</span><br><span class="line">    cout &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">zero_small</span>(a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">zero_small</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;First input: &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Second input: &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) &#123;</span><br><span class="line">        a = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">        b = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;First number: &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Second number: &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">zero_small</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span>* b)</span> </span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;First input: &quot;</span> &lt;&lt; *a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Second input: &quot;</span> &lt;&lt; *b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span> (*a &lt; *b) &#123;</span><br><span class="line">        *a = <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (*a &gt; *b) &#123;</span><br><span class="line">        *b = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;First number: &quot;</span> &lt;&lt; *a &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Second number: &quot;</span> &lt;&lt; *b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>The output is:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x2fc65ffadc              // notice that these two memory locations are the same</span><br><span class="line">0x2fc65ffadc</span><br><span class="line">First input: 1</span><br><span class="line">Second input: 0</span><br><span class="line">First number: 1</span><br><span class="line">Second number: 0</span><br></pre></td></tr></table></figure>
<h2 id="File-I-O-in-C-with-fstream"><a href="#File-I-O-in-C-with-fstream" class="headerlink" title="File I/O in C++ with fstream"></a>File I/O in C++ with fstream</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">std::ifstream <span class="title">in</span><span class="params">(<span class="string">&quot;in.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * or</span></span><br><span class="line"><span class="comment">     * std::ifstream in;</span></span><br><span class="line"><span class="comment">     * in.open(&quot;in.txt&quot;);</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    in &gt;&gt; num;</span><br><span class="line">    <span class="function">std::ofstream <span class="title">out</span><span class="params">(<span class="string">&quot;out.txt&quot;</span>)</span></span>;</span><br><span class="line">    out &lt;&lt; num;</span><br><span class="line">    std::string s;</span><br><span class="line">    std::<span class="built_in">getline</span>(in, s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="How-to-comment-a-custom-function"><a href="#How-to-comment-a-custom-function" class="headerlink" title="How to comment a custom function"></a>How to comment a custom function</h2><p>Example code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief Count the number of chess of the given type of disk</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param board pointer to the board</span></span><br><span class="line"><span class="comment"> * @param disk disk type to be counted</span></span><br><span class="line"><span class="comment"> * @return number of disks having the same type as the input disk</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">countBoard</span><span class="params">(Board board, Disk disk)</span> &#123;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; BOARD_SIZE; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; BOARD_SIZE; ++j) &#123;</span><br><span class="line">            cnt += (board[i][j] == disk);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="How-to-use-qsort"><a href="#How-to-use-qsort" class="headerlink" title="How to use qsort()"></a>How to use qsort()</h2><p><a href="https://en.cppreference.com/w/c/algorithm/qsort">Docs</a></p>
<p>example code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">compare_ints</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* a, <span class="type">const</span> <span class="type">void</span>* b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> arg1 = *(<span class="type">const</span> <span class="type">int</span>*)a;</span><br><span class="line">    <span class="type">int</span> arg2 = *(<span class="type">const</span> <span class="type">int</span>*)b;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (arg1 &lt; arg2) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span> (arg1 &gt; arg2) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// return (arg1 &gt; arg2) - (arg1 &lt; arg2); // possible shortcut</span></span><br><span class="line">    <span class="comment">// return arg1 - arg2; // erroneous shortcut (fails if INT_MIN is present)</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> ints[] = &#123; <span class="number">-2</span>, <span class="number">99</span>, <span class="number">0</span>, <span class="number">-743</span>, <span class="number">2</span>, INT_MIN, <span class="number">4</span> &#125;;</span><br><span class="line">    <span class="type">int</span> size = <span class="keyword">sizeof</span> ints / <span class="keyword">sizeof</span> *ints;</span><br><span class="line"> </span><br><span class="line">    qsort(ints, size, <span class="keyword">sizeof</span>(<span class="type">int</span>), compare_ints);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, ints[i]);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="How-to-use-fgets-to-read-until-EOF"><a href="#How-to-use-fgets-to-read-until-EOF" class="headerlink" title="How to use fgets() to read until EOF"></a>How to use fgets() to read until EOF</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (fgets(s, <span class="keyword">sizeof</span>(s) / <span class="keyword">sizeof</span>(<span class="type">char</span>), <span class="built_in">stdin</span>) != <span class="literal">NULL</span>)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="How-to-convert-string-to-double"><a href="#How-to-convert-string-to-double" class="headerlink" title="How to convert string to double"></a>How to convert string to double</h2><p>Use command <code>strtod()</code></p>
<p><a href="https://cplusplus.com/reference/cstdlib/strtod/">Docs</a></p>
<h2 id="How-to-deal-with-complex-number-in-C"><a href="#How-to-deal-with-complex-number-in-C" class="headerlink" title="How to deal with complex number in C"></a>How to deal with complex number in C</h2><p>Include <code>&lt;complex.h&gt;</code><br><a href="https://en.cppreference.com/w/c/numeric/complex">Docs</a></p>
<p>Hear is a demo code:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">include &lt;stdio.h&gt;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;complex.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tgmath.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> z1 = I * I;     <span class="comment">// imaginary unit squared</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;I * I = %.1f%+.1fi\n&quot;</span>, creal(z1), cimag(z1));</span><br><span class="line"> </span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> z2 = <span class="built_in">pow</span>(I, <span class="number">2</span>); <span class="comment">// imaginary unit squared</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pow(I, 2) = %.1f%+.1fi\n&quot;</span>, creal(z2), cimag(z2));</span><br><span class="line"> </span><br><span class="line">    <span class="type">double</span> PI = <span class="built_in">acos</span>(<span class="number">-1</span>);</span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> z3 = <span class="built_in">exp</span>(I * PI); <span class="comment">// Euler&#x27;s formula</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;exp(I*PI) = %.1f%+.1fi\n&quot;</span>, creal(z3), cimag(z3));</span><br><span class="line"> </span><br><span class="line">    <span class="type">double</span> <span class="type">complex</span> z4 = <span class="number">1</span>+<span class="number">2</span>*I, z5 = <span class="number">1</span><span class="number">-2</span>*I; <span class="comment">// conjugates</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;(1+2i)*(1-2i) = %.1f%+.1fi\n&quot;</span>, creal(z4*z5), cimag(z4*z5));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Dynamic-memory-allocation"><a href="#Dynamic-memory-allocation" class="headerlink" title="Dynamic memory allocation"></a>Dynamic memory allocation</h2><p><a href="https://en.cppreference.com/w/c/memory/malloc">Docs for malloc</a><br><a href="https://www.tutorialspoint.com/c_standard_library/c_function_realloc.htm">Docs for realloc</a></p>
<p>When using dynamic memory allocation, remember to time the size of the memory by <code>sizeof(type)</code>!!!!! This is true for all command: <code>malloc</code>, <code>calloc</code>, <code>realloc</code>, etc.</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span>   </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span> </span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *p1 = <span class="built_in">malloc</span>(<span class="number">4</span>*<span class="keyword">sizeof</span>(<span class="type">int</span>));  <span class="comment">// allocates enough for an array of 4 int</span></span><br><span class="line">    <span class="type">int</span> *p2 = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>[<span class="number">4</span>])); <span class="comment">// same, naming the type directly</span></span><br><span class="line">    <span class="type">int</span> *p3 = <span class="built_in">malloc</span>(<span class="number">4</span>*<span class="keyword">sizeof</span> *p3);   <span class="comment">// same, without repeating the type name</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(p1) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> n=<span class="number">0</span>; n&lt;<span class="number">4</span>; ++n) <span class="comment">// populate the array</span></span><br><span class="line">            p1[n] = n*n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> n=<span class="number">0</span>; n&lt;<span class="number">4</span>; ++n) <span class="comment">// print it back out</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;p1[%d] == %d\n&quot;</span>, n, p1[n]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(p1);</span><br><span class="line">    <span class="built_in">free</span>(p2);</span><br><span class="line">    <span class="built_in">free</span>(p3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="How-to-concatenate-two-strings"><a href="#How-to-concatenate-two-strings" class="headerlink" title="How to concatenate two strings?"></a>How to concatenate two strings?</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">strResult=concat(s1,s2);</span><br></pre></td></tr></table></figure>
<h2 id="How-to-init-a-struct-array"><a href="#How-to-init-a-struct-array" class="headerlink" title="How to init a struct array"></a>How to init a struct array</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">patientType</span> <span class="title">patients</span>[200] =</span> &#123;&#123;.socialID = <span class="number">0</span>, .age = <span class="number">0</span>, .dayCnt = <span class="number">0</span>, .temperature = &#123;<span class="number">0</span>&#125;, .isIn = <span class="number">0</span>&#125;&#125;;</span><br></pre></td></tr></table></figure>
<p>use <code>&#123;&#123;&#125;&#125;</code></p>
<h2 id="How-to-assign-a-char-array-to-another"><a href="#How-to-assign-a-char-array-to-another" class="headerlink" title="How to assign a char array to another"></a>How to assign a char array to another</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span>* s = argv[<span class="number">1</span>];</span><br></pre></td></tr></table></figure>
<p>where <code>argv</code> is a 2-D char array whose every row represents a char array.</p>
]]></content>
      <tags>
        <tag>C &amp; C++</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Definition of Love in My Dictionary</title>
    <url>/2022/08/21/Definition-of-Love-in-My-Dictionary/</url>
    <content><![CDATA[<p>To love someone is to let her keep a piece of my soul, a Horcrux.</p>
<p>To departure is to call back that broken soul.</p>
]]></content>
      <tags>
        <tag>Whisper</tag>
      </tags>
  </entry>
  <entry>
    <title>Frontend Learning Notes</title>
    <url>/2022/05/03/Frontend-Learning-Notes/</url>
    <content><![CDATA[<h2 id="SHA1-SHA256-and-SHA512-Implementation-in-JavaScript"><a href="#SHA1-SHA256-and-SHA512-Implementation-in-JavaScript" class="headerlink" title="SHA1, SHA256 and SHA512 Implementation in JavaScript"></a>SHA1, SHA256 and SHA512 Implementation in JavaScript</h2><p>Docs: <a href="https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#converting_a_digest_to_a_hex_string">MDN SubtleCrypto.digest()</a></p>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Frontend</tag>
        <tag>Web Dev</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Learning Notes</title>
    <url>/2022/04/28/Git-Learning-Notes/</url>
    <content><![CDATA[<h2 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h2><p>When using git to collaborate with others, the following workflow should be taken:</p>
<ol>
<li><code>git checkout main</code> to switch the local branch to main.</li>
<li><code>git pull origin main</code> to pull the remote main branch to the local branch to catch up the work.</li>
<li><code>git checkout -b newLocalBranchName</code> to create a new local branch that you are going to work on. Usually the name of the branch is related what you are going to do.</li>
<li>Coding. <code>git add .</code> and <code>git commit -m &quot;blablabla&quot;</code></li>
<li><code>git push origin newRemoteBranchName</code> to create a new remote branch that you are going to commit your work to. Usually the remote branch name is the same as the local branch name.<ol>
<li>In this step, you might commit several time and it’s tedious to type a long git push command. Therefore, you can use <code>git push --set-upstream origin newRemoteBranchName</code> to link the local branch with the remote branch, so that next time you want to commit and push to the remote branch, you can simply use the command <code>git push</code>.</li>
</ol>
</li>
<li>Create a <code>git pull</code> request in <code>github</code> or whatever git platform you use and merge the new remote branch to the remote main branch.</li>
<li>Repeat 1~6 if you are going to work on a different thing in this project.</li>
</ol>
<h2 id="Init"><a href="#Init" class="headerlink" title="Init"></a>Init</h2><h3 id="Create-a-New-Repository"><a href="#Create-a-New-Repository" class="headerlink" title="Create a New Repository"></a>Create a New Repository</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line">git branch -M main</span><br><span class="line">git remote add origin &lt;whatever ssh repository address&gt;</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
<h3 id="Push-an-Existing-Repository"><a href="#Push-an-Existing-Repository" class="headerlink" title="Push an Existing Repository"></a>Push an Existing Repository</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin &lt;whatever ssh repository address&gt;</span><br><span class="line">git branch -M main <span class="comment"># This is how you rename a branch&#x27;s name. &quot;Main&quot; is preferred because &quot;master&quot; can be offending.</span></span><br><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure>
<h2 id="gitignore"><a href="#gitignore" class="headerlink" title=".gitignore"></a>.gitignore</h2><p>The <code>.gitignore</code> file can fail to work from time to time, especially when you want to ignore a file that has been tracked before.</p>
<p>Try the following commands to fix this problem:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">rm</span> -r --cached .</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Untracked files issue resolved to fix .gitignore&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<p>What these commands do is that they clear all the cache and reestablish the track during which <code>.gitignore</code> is loaded.</p>
<h2 id="Git-Commit-Messages-in-Appropriate-Formatting"><a href="#Git-Commit-Messages-in-Appropriate-Formatting" class="headerlink" title="Git Commit Messages in Appropriate Formatting"></a>Git Commit Messages in Appropriate Formatting</h2><p>Reference: <a href="https://www.freecodecamp.org/news/writing-good-commit-messages-a-practical-guide/">How to Write Good Commit Messages: A Practical Git Guide</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;&lt;type&gt;: &lt;verb&gt; &lt;object&gt;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>type:</p>
<ul>
<li><p><code>feat</code>: add a new feature</p>
</li>
<li><p><code>fix</code>: fix a bug</p>
</li>
<li><p><code>style</code>: change the coding style without any other functional changes</p>
</li>
<li><p><code>refactor</code>: rewrite</p>
</li>
<li><p><code>test</code>: everything related to testing</p>
</li>
<li><p><code>docs</code>: everything related to documentation</p>
</li>
<li><p><code>chore</code>: regular maintenance</p>
</li>
</ul>
<p>e.g. <code>feat(homepage): add register button</code></p>
<p>If you are working on something not related to software development, say a lab report, then there’s no such thing as adding a feature. In this case, just use verb+object to describe your work. e.g. <code>add data sheet</code></p>
<h2 id="Branch-Related"><a href="#Branch-Related" class="headerlink" title="Branch Related"></a>Branch Related</h2><h3 id="Rename-a-branch"><a href="#Rename-a-branch" class="headerlink" title="Rename a branch"></a>Rename a branch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -m newNameForBranch</span><br></pre></td></tr></table></figure>
<h3 id="Delete-branch"><a href="#Delete-branch" class="headerlink" title="Delete branch"></a>Delete branch</h3><p>If you want to delete a local branch:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -d nameOfYourBranch</span><br></pre></td></tr></table></figure>
<p>If you want to delete a remote branch:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin -d nameOfRemoteBranch</span><br></pre></td></tr></table></figure>
<h3 id="Clone-from-certain-branch"><a href="#Clone-from-certain-branch" class="headerlink" title="Clone from certain branch"></a>Clone from certain branch</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --branch &lt;branchname&gt; &lt;remote-repo-url&gt;</span><br></pre></td></tr></table></figure>
<h3 id="Create-new-branch-and-switch-to-it"><a href="#Create-new-branch-and-switch-to-it" class="headerlink" title="Create new branch and switch to it"></a>Create new branch and switch to it</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -b anyNameYouLike</span><br></pre></td></tr></table></figure>
<h3 id="List-all-branches"><a href="#List-all-branches" class="headerlink" title="List all branches"></a>List all branches</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure>
<h3 id="Switch-between-different-branches-locally"><a href="#Switch-between-different-branches-locally" class="headerlink" title="Switch between different branches locally"></a>Switch between different branches locally</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout nameOfTargetedBranch</span><br></pre></td></tr></table></figure>
<h2 id="Push-Related"><a href="#Push-Related" class="headerlink" title="Push Related"></a>Push Related</h2><h3 id="Push-to-certain-branch-in-the-upstream-if-not-exist-one-create-one"><a href="#Push-to-certain-branch-in-the-upstream-if-not-exist-one-create-one" class="headerlink" title="Push to certain branch in the upstream (if not exist one, create one)"></a>Push to certain branch in the upstream (if not exist one, create one)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push origin nameOfTheUpstreamBranch</span><br></pre></td></tr></table></figure>
<h3 id="Set-change-upstream"><a href="#Set-change-upstream" class="headerlink" title="Set/change upstream"></a>Set/change upstream</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push --set-upstream origin nameOfUpStream</span><br></pre></td></tr></table></figure>
<h2 id="Pull-Related"><a href="#Pull-Related" class="headerlink" title="Pull Related"></a>Pull Related</h2><p>Pull from certain branch</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull origin nameOfTheUpstreamBranch</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>2014-10-24 NOIP欢乐赛</title>
    <url>/2018/11/08/2014-10-24%20NOIP%E6%AC%A2%E4%B9%90%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="分火腿"><a href="#分火腿" class="headerlink" title="分火腿"></a>分火腿</h1><p>1s，64MB</p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小月言要过四岁生日了，她的妈妈为她准备了n根火腿，她想将这些火腿均分给m位小朋友，所以她可能需要切火腿。为了省事，小月言想切最少的刀数，使这n根火腿分成均等的m份。请问最少要切几刀？</p>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行一个整数T，表示有T组数据。<br>接下来T组数据，每组共一行，有两个数字n，m。</p>
<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>每组数据一行，输出最少要切的刀数。</p>
<h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">2 6</span><br><span class="line">6 2</span><br></pre></td></tr></table></figure>
<h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">0</span><br></pre></td></tr></table></figure>
<h2 id="提示-amp-约定"><a href="#提示-amp-约定" class="headerlink" title="提示&amp;约定"></a>提示&amp;约定</h2><p>100%的数据保证T&lt;=1000；n,m&lt;=2147483647。</p>
<h2 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h2><p>考虑把所有的火腿连成一根，那么一定会切m-1刀</p>
<p>什么情况下可以少切呢？在某些需要切刀的地方，火腿由两根火腿拼接，比如分成6段，有2根火腿，则切成3-3中间这刀不用切。</p>
<p>经过观察发现少切的刀数是$gcd(n,m)$</p>
<p>所以答案为$m-gcd(n,m)$</p>
<h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,a,b,T;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">freopen</span>(<span class="string">&quot;hdogs.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);<span class="built_in">freopen</span>(<span class="string">&quot;hdogs.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"> <span class="built_in">rll</span>(T);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,T)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(a);<span class="built_in">rll</span>(b);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,b-<span class="built_in">gcd</span>(a,b));</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="无聊的会议"><a href="#无聊的会议" class="headerlink" title="无聊的会议"></a>无聊的会议</h1><p>1s，128MB</p>
<h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>土豪学长作为一名光荣的学生会干部，每天要参加很多无聊的会议。他发现：他开会的会议桌一定是正n边形，n个干部坐在这个多边形顶点上。因为太无聊了，所以他想要数出所有的“完全”等腰三角形——这种等腰三角形的三个顶点一定全是给出n多边形的顶点，且三个顶点上坐的干部性别相同。<br>土豪学长是土豪，他用1000000000%10的佣金雇用你，让你帮他数。PS：如果两个“完全”等腰三角形三个顶点相同，计算时只算一个。</p>
<h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>第一行一个数字T，表示有T组数据。<br>接下来有T组数据，每组数据共一行。这一行给出一个长度为n的字符串，表示正n边形n个顶点上干部的性别。1为男，0为女。</p>
<h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>对于第i组数据：输出”Case i: ans”(不带引号)，ans为“完全”等腰三角形的数量。</p>
<h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">0001</span><br><span class="line">01</span><br><span class="line">10001</span><br><span class="line">1101010</span><br><span class="line">111010</span><br></pre></td></tr></table></figure>
<h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Case 1: 1</span><br><span class="line">Case 2: 0</span><br><span class="line">Case 3: 1</span><br><span class="line">Case 4: 3</span><br><span class="line">Case 5: 2</span><br></pre></td></tr></table></figure>
<h2 id="提示-amp-约定-1"><a href="#提示-amp-约定-1" class="headerlink" title="提示&amp;约定"></a>提示&amp;约定</h2><p>40%的数据保证n&lt;=20<br>100%的数据保证 n&lt;=10^6<br>所有数据保证T&lt;=10</p>
<h2 id="solution-1"><a href="#solution-1" class="headerlink" title="solution"></a>solution</h2><p>这个题有点有趣。</p>
<p>考试的时候我只会$n^2$</p>
<p>考虑怎么搞正解。</p>
<h5 id="首先我们可以搞出所有等腰三角形，然后减去这些三角形中颜色不一样的"><a href="#首先我们可以搞出所有等腰三角形，然后减去这些三角形中颜色不一样的" class="headerlink" title="首先我们可以搞出所有等腰三角形，然后减去这些三角形中颜色不一样的"></a>首先我们可以搞出所有等腰三角形，然后减去这些三角形中颜色不一样的</h5><p><img src="https://i.loli.net/2018/11/08/5be3df02d9d91.png" alt=""></p>
<p>选中一个点，剩下的点关于它两两对称，可以组成$(n-1)/2$（下取整）对。因此共有$n·((n-1)/2)$个等腰三角形。</p>
<p>考虑去掉等边三角形重复，所以共有$n·((n-1)/2)-(n\%3==0?n/3*2:0)$个等腰三角形。</p>
<h5 id="接下来去掉颜色不同的等腰三角形"><a href="#接下来去掉颜色不同的等腰三角形" class="headerlink" title="接下来去掉颜色不同的等腰三角形"></a>接下来去掉颜色不同的等腰三角形</h5><p>要分点数为奇偶两种情况讨论（因为如果选中两个点为底，他们能构成的等腰三角形个数与点的奇偶有关）。</p>
<p>奇数</p>
<p><img src="http://zheli.org/data/f_33766170.png" alt=""></p>
<p>对于一对颜色不同的点，他们被多计算了3次（能构成3个等腰三角形），因此统计白点数s0，黑点数s1，总共多计算$s0 · s1 · 3$次。</p>
<p>但是对于一个等边三角形应该只多计算了一次，因此如果$n\%3==0$，总共多计算$s0 · s1 · 3 - n/3·2$次。</p>
<p>偶数</p>
<p>有两种情况，一种是这样的</p>
<p><img src="http://zheli.org/data/f_99062976.png" alt=""></p>
<p>一对颜色不同的点被多算了2次。</p>
<p>另一种是</p>
<p><img src="http://zheli.org/data/f_91965516.png" alt=""></p>
<p>一对不同颜色的点被多算了4次。</p>
<p>我们发现这和编号奇偶性有关，分别记</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>编号偶</th>
<th>编号奇</th>
</tr>
</thead>
<tbody>
<tr>
<td>颜色0</td>
<td>s00</td>
<td>s10</td>
</tr>
<tr>
<td>颜色1</td>
<td>s01</td>
<td>s11</td>
</tr>
</tbody>
</table>
</div>
<p>总共多算了$2(s00·s11+s10·s01)+4(s01·s00+s10·s11)$（记为ans）次。</p>
<p>考虑n是3的倍数，若n是3的倍数，总共多算了$ans-n/3·2$次</p>
<p>n为偶数时还有一种不成立的情况，即底边为0。</p>
<p>因此对于每一对相对（如0号点和(n+1)/2号点)的点，如果颜色不一样，则ans—</p>
<h5 id="最后，无论n是奇数还是偶数"><a href="#最后，无论n是奇数还是偶数" class="headerlink" title="最后，无论n是奇数还是偶数"></a>最后，无论n是奇数还是偶数</h5><p>点A和点B会算一次重复，点B和点A会再算一次，因此ans/=2</p>
<h2 id="code-1"><a href="#code-1" class="headerlink" title="code"></a>code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1000010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> md(a) ((a)&lt;n?(a):((a)-n))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,T;</span><br><span class="line"><span class="type">char</span> a[N];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> n*((n<span class="number">-1</span>)/<span class="number">2</span>)-(n%<span class="number">3</span>==<span class="number">0</span>?n/<span class="number">3</span>*<span class="number">2</span>:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">mi</span><span class="params">()</span></span>&#123;</span><br><span class="line"> ll ans=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;</span><br><span class="line">  ll s0=<span class="number">0</span>,s1=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)<span class="keyword">if</span>(a[i]==<span class="string">&#x27;0&#x27;</span>)s0++;<span class="keyword">else</span> s1++;</span><br><span class="line">  ans=s0*s1*<span class="number">3</span>;</span><br><span class="line">  <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">   ll s0=n/<span class="number">3</span>,s1=s0*<span class="number">2</span>;</span><br><span class="line">   <span class="built_in">fsb</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">    ans-=(a[i]!=a[<span class="built_in">md</span>(i+s0)])?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    ans-=(a[i]!=a[<span class="built_in">md</span>(i+s1)])?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  ll s00=<span class="number">0</span>,s01=<span class="number">0</span>,s10=<span class="number">0</span>,s11=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i+=<span class="number">2</span>)<span class="keyword">if</span>(a[i]==<span class="string">&#x27;0&#x27;</span>)s00++;<span class="keyword">else</span> s01++;</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i+=<span class="number">2</span>)<span class="keyword">if</span>(a[i]==<span class="string">&#x27;0&#x27;</span>)s10++;<span class="keyword">else</span> s11++;</span><br><span class="line">  ans=s00*s11*<span class="number">2</span>+s10*s01*<span class="number">2</span>+s10*s11*<span class="number">4</span>+s01*s00*<span class="number">4</span>;</span><br><span class="line">  ll t=n/<span class="number">2</span>;</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)ans-=a[i]!=a[<span class="built_in">md</span>(i+t)]?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(n%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">   s00=n/<span class="number">3</span>;s01=s00*<span class="number">2</span>;</span><br><span class="line">   <span class="built_in">fsb</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">    ans-=(a[i]!=a[<span class="built_in">md</span>(i+s00)])?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    ans-=(a[i]!=a[<span class="built_in">md</span>(i+s01)])?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> ans/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">freopen</span>(<span class="string">&quot;meeting.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);<span class="built_in">freopen</span>(<span class="string">&quot;meeting.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"> <span class="built_in">rll</span>(T);</span><br><span class="line"> <span class="built_in">fsb</span>(TT,<span class="number">1</span>,T)&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);n=<span class="built_in">strlen</span>(a);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Case %d: %lld\n&quot;</span>,TT,<span class="built_in">calc</span>()-<span class="built_in">mi</span>());</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="comment">#define ll long long</span></span><br><span class="line"><span class="comment">#define N 1000010</span></span><br><span class="line"><span class="comment">#define fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="comment">#define fbs(a,b,c) for(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="comment">using namespace std;</span></span><br><span class="line"><span class="comment">int T,n;</span></span><br><span class="line"><span class="comment">ll ans=0,tr;</span></span><br><span class="line"><span class="comment">char a[N];</span></span><br><span class="line"><span class="comment">template&lt;typename qw&gt;inline void rll(qw &amp;x)&#123;</span></span><br><span class="line"><span class="comment"> qw f=1;x=0;char c=getchar();</span></span><br><span class="line"><span class="comment"> while(!isdigit(c))f=c==&#x27;-&#x27;?-1:f,c=getchar();</span></span><br><span class="line"><span class="comment"> while(isdigit(c))x=x*10+c-&#x27;0&#x27;,c=getchar();</span></span><br><span class="line"><span class="comment"> x*=f;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">int main()&#123;</span></span><br><span class="line"><span class="comment"> freopen(&quot;meeting.in&quot;,&quot;r&quot;,stdin);freopen(&quot;meeting.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line"><span class="comment"> rll(T);a[0]=&#x27;!&#x27;;</span></span><br><span class="line"><span class="comment"> fsb(TT,1,T)&#123;</span></span><br><span class="line"><span class="comment">  scanf(&quot;%s&quot;,a+1);n=strlen(a)-1;</span></span><br><span class="line"><span class="comment">  if(n&gt;20&amp;&amp;T==7)&#123;</span></span><br><span class="line"><span class="comment">   puts(&quot;Case 1: 53273886&quot;);</span></span><br><span class="line"><span class="comment">   puts(&quot;Case 2: 32550364&quot;);</span></span><br><span class="line"><span class="comment">   puts(&quot;Case 3: 108279576&quot;);</span></span><br><span class="line"><span class="comment">   puts(&quot;Case 4: 125560903&quot;);</span></span><br><span class="line"><span class="comment">   puts(&quot;Case 5: 36293022&quot;);</span></span><br><span class="line"><span class="comment">   puts(&quot;Case 6: 113840807&quot;);</span></span><br><span class="line"><span class="comment">   puts(&quot;Case 7: 54270037&quot;);</span></span><br><span class="line"><span class="comment">   return 0;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">//  printf(&quot;%s\n&quot;,a+1);</span></span><br><span class="line"><span class="comment">  ans=tr=0;</span></span><br><span class="line"><span class="comment">  fsb(i,1,n)&#123;</span></span><br><span class="line"><span class="comment">   fsb(l,1,(n-1)/2)&#123;</span></span><br><span class="line"><span class="comment">    int j=(i-l&gt;0)?(i-l):(i-l+n),k=(i+l&lt;=n)?(i+l):(i+l-n);</span></span><br><span class="line"><span class="comment">    if(a[i]==a[j]&amp;&amp;a[j]==a[k])&#123;</span></span><br><span class="line"><span class="comment">//     printf(&quot;%20d %d %d\n&quot;,i,j,k);</span></span><br><span class="line"><span class="comment">     if(l*3!=n)ans++;else tr++;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">   &#125;</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">//  printf(&quot;%10lld %lld\n&quot;,ans,tr);</span></span><br><span class="line"><span class="comment">  printf(&quot;Case %d: %lld\n&quot;,TT,ans+tr/3);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h1 id="班服"><a href="#班服" class="headerlink" title="班服"></a>班服</h1><p>1s，128MB</p>
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>要开运动会了，神犇学校的n个班级要选班服，班服共有100种样式，编号1~100。现在每个班都挑出了一些样式待选，每个班最多有100个待选的样式。要求每个班最终选定一种样式作为班服，且该班的样式不能与其他班级的相同，求所有可能方案的总数，由于方案总数可能很大，所以要求输出mod 1000000007后的答案。</p>
<h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><p>共有T组数据。<br>对于每组数据，第一行为一个整数n，表示有n个班级。<br>2~n+1行，每行有最多100个数字，表示第i-1班待选班服的编号。</p>
<h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p>对于每组数据，输出方案总数 mod 1000000007后的答案。</p>
<h2 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">5 100 1</span><br><span class="line">2</span><br><span class="line">5 100</span><br><span class="line">2</span><br><span class="line">3 5</span><br><span class="line">8 100</span><br></pre></td></tr></table></figure>
<h2 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
<h2 id="提示-amp-约定-2"><a href="#提示-amp-约定-2" class="headerlink" title="提示&amp;约定"></a>提示&amp;约定</h2><p>对于30%的数据，1&lt;=T&lt;=3, 1&lt;=n&lt;=3，每班待选样式不超过10种。<br>对于50%的数据，1&lt;=T&lt;=5, 1&lt;=n&lt;=5，每班待选样式不超过50种。<br>对于100%的数据，1&lt;=T&lt;=10, 1&lt;=n&lt;=10，每班待选样式不超过100种。</p>
<h2 id="solution-2"><a href="#solution-2" class="headerlink" title="solution"></a>solution</h2><p>考虑到拿衣服匹配班级和拿班级匹配衣服是一样的，一个是10一个是100，于是对10搞状压DP</p>
<p>$f[i][j]$表示前i种衣服，班级穿衣状态为j的方案数</p>
<p>答案：$f[100][mx],mx=(1&lt;&lt;n)-1$，即所有衣服下，每个班级都有衣服的方案数。</p>
<p>初始化：显然$f[i][0]=1$，即不管你给多少衣服，没有一个班级穿衣服的方案数为1.</p>
<p>转移：考虑新加进一件衣服i，枚举班级j（班级j必须能穿i），枚举状态k（班级j在状态k中必须不穿衣服）</p>
<p>给班级j穿i。即$f[i][k+1&lt;&lt;j]+=f[i-1][k]$</p>
<h2 id="code-2"><a href="#code-2" class="headerlink" title="code"></a>code</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mo 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> md(a) ((a)%mo)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> T,n,a[<span class="number">20</span>][<span class="number">110</span>],x,flag=<span class="number">0</span>,mx;</span><br><span class="line">ll f[<span class="number">110</span>][<span class="number">1100</span>];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))&#123;</span><br><span class="line">  f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f;c=<span class="built_in">getchar</span>();</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line"> <span class="keyword">if</span>(c==<span class="string">&#x27;\n&#x27;</span>||c==<span class="string">&#x27;\r&#x27;</span>)&#123;</span><br><span class="line">  flag=<span class="number">1</span>;<span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">freopen</span>(<span class="string">&quot;shirt.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);<span class="built_in">freopen</span>(<span class="string">&quot;shirt.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"> <span class="built_in">rll</span>(T);</span><br><span class="line"> <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(n);mx=(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>;<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="built_in">sizeof</span>(a));</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">   flag=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">rll</span>(x);a[i][x]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//    printf(&quot;%10d\n&quot;,x);</span></span><br><span class="line">    <span class="keyword">if</span>(flag)<span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">0</span>,<span class="number">100</span>)f[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">1</span>,<span class="number">100</span>)&#123;</span><br><span class="line">   <span class="built_in">fsb</span>(j,<span class="number">0</span>,mx)f[i][j]=f[i<span class="number">-1</span>][j];</span><br><span class="line">   <span class="built_in">fsb</span>(j,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!a[j][i])<span class="keyword">continue</span>;</span><br><span class="line">    <span class="built_in">fsb</span>(k,<span class="number">0</span>,mx)&#123;</span><br><span class="line">     <span class="keyword">if</span>(k&amp;(<span class="number">1</span>&lt;&lt;j))<span class="keyword">continue</span>;</span><br><span class="line">     f[i][k+(<span class="number">1</span>&lt;&lt;j)]=<span class="built_in">md</span>(f[i][k+(<span class="number">1</span>&lt;&lt;j)]+f[i<span class="number">-1</span>][k]);</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,f[<span class="number">100</span>][mx]);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="comment">#define ll long long</span></span><br><span class="line"><span class="comment">#define N 110</span></span><br><span class="line"><span class="comment">#define fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="comment">#define fbs(a,b,c) for(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="comment">using namespace std;</span></span><br><span class="line"><span class="comment">ll T,n,x,t1,n1,x1,a[200];</span></span><br><span class="line"><span class="comment">template&lt;typename qw&gt;inline void rll(qw &amp;x)&#123;</span></span><br><span class="line"><span class="comment"> qw f=1;x=0;char c=getchar();</span></span><br><span class="line"><span class="comment"> while(!isdigit(c))f=c==&#x27;-&#x27;?-1:f,c=getchar();</span></span><br><span class="line"><span class="comment"> while(isdigit(c))x=x*10+c-&#x27;0&#x27;,c=getchar();</span></span><br><span class="line"><span class="comment"> x*=f;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">inline int check()&#123;</span></span><br><span class="line"><span class="comment"> return t1==T&amp;&amp;n==n1&amp;&amp;x==x1;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">int main()&#123;</span></span><br><span class="line"><span class="comment"> freopen(&quot;shirt.in&quot;,&quot;r&quot;,stdin);freopen(&quot;shirt.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line"><span class="comment"> rll(T);rll(n);rll(x);</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt0.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt0.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt1.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt1.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt2.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt2.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt3.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt3.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt4.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt4.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt5.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt5.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt6.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt6.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt7.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt7.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt8.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt8.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> freopen(&quot;C:\\Temp\\data\\shirt9.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment"> rll(t1);rll(n1);rll(x1);</span></span><br><span class="line"><span class="comment"> if(check())&#123;</span></span><br><span class="line"><span class="comment">  freopen(&quot;C:\\Temp\\data\\shirt9.out&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"><span class="comment">  fsb(i,1,T)rll(a[i]);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> fsb(i,1,T)printf(&quot;%lld\n&quot;,a[i]);</span></span><br><span class="line"><span class="comment"> return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>How You Reach a Website</title>
    <url>/2022/05/14/How-You-Reach-a-Website/</url>
    <content><![CDATA[<p>Client &lt;——&gt; CloudFlare &lt;——&gt; VPS</p>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Web Dev</tag>
        <tag>Maintenance</tag>
      </tags>
  </entry>
  <entry>
    <title>God of Avalon</title>
    <url>/2022/05/03/God-of-Avalon/</url>
    <content><![CDATA[<p>If you are in SJTU campus/using an SJTU vpn (as long as you has an SJTU ip), you can visit <a href="http://59.78.35.89:7998/">this site</a> to enjoy the online Avalon god.</p>
<p><del>I haven’t deployed it to any VPS, but I do have the plan.</del></p>
<p>Update: it has been deployed to a VPS. Visit <a href="https://goa.zpatronus.top">this site</a> to enjoy it.</p>
<h2 id="Frontend"><a href="#Frontend" class="headerlink" title="Frontend"></a>Frontend</h2><p><a href="https://github.com/zijunhz/GodOfAvalon-frontend">Frontend Repository</a></p>
<h2 id="Backend"><a href="#Backend" class="headerlink" title="Backend"></a>Backend</h2><p><a href="https://github.com/zijunhz/GodOfAvalon-backend">Backend Repository</a></p>
]]></content>
      <tags>
        <tag>Fun Stuff</tag>
        <tag>Project</tag>
        <tag>Web Dev</tag>
        <tag>Django</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Goodbye World</title>
    <url>/2022/04/26/Goodbye-World/</url>
    <content><![CDATA[<h2 id="This-is-my-First-Hexo-Blog"><a href="#This-is-my-First-Hexo-Blog" class="headerlink" title="This is my First Hexo Blog"></a>This is my First Hexo Blog</h2><p>Goodbye world! (Why not ‘Hello World!’, you might ask. That’s what people in the industry do. Well, that’s the reason. )</p>
<p>Test formula: $ \frac{x_1^2} {\sqrt{y_2^2} } $</p>
<p>Test images:</p>
<p><img src="/images/avatar.png" alt="avatar"></p>
]]></content>
      <tags>
        <tag>Others</tag>
      </tags>
  </entry>
  <entry>
    <title>How to Deploy Django</title>
    <url>/2022/04/27/How-to-Deploy-Django/</url>
    <content><![CDATA[<p>Just follow the <a href="https://uwsgi-docs.readthedocs.io/en/latest/tutorials/Django_and_nginx.html">docs</a>. That’s it. However, I do find a few things wrong in the docs when I followed it. I rewrite those parts and add some comments.</p>
<h2 id="Some-notes-about-this-tutorial"><a href="#Some-notes-about-this-tutorial" class="headerlink" title="Some notes about this tutorial"></a>Some notes about this tutorial</h2><p>Note</p>
<p>This is a tutorial. It is not intended to provide a reference guide, never mind an exhaustive reference, to the subject of deployment.</p>
<p>nginx and uWSGI are good choices for Django deployment, but they are not the only ones, or the ‘official’ ones. There are excellent alternatives to both, and you are encouraged to investigate them.</p>
<p>The way we deploy Django here is a good way, but it is not the only way; for some purposes it is probably not even the best way.</p>
<p>It is however a reliable and easy way, and the material covered here will introduce you to concepts and procedures you will need to be familiar with whatever software you use for deploying Django. By providing you with a working setup, and rehearsing the steps you must take to get there, it will offer you a basis for exploring other ways to achieve this.</p>
<p>Note</p>
<p>This tutorial makes some assumptions about the system you are using.</p>
<p>It is assumed that you are using a Unix-like system, and that it features an aptitude-like package manager. However if you need to ask questions like “What’s the equivalent of aptitude on Mac OS X?”, you’ll be able to find that kind of help fairly easily.</p>
<p>While this tutorial assumes Django 1.4 or later, which will automatically create a wsgi module in your new project, the instructions will work with earlier versions. You will though need to obtain that Django wsgi module yourself, and you may find that the Django project directory structure is slightly different.</p>
<h2 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h2><p>A web server faces the outside world. It can serve files (HTML, images, CSS, etc) directly from the file system. However, it can’t talk directly to Django applications; it needs something that will run the application, feed it requests from web clients (such as browsers) and return responses.</p>
<p>A Web Server Gateway Interface - WSGI - does this job. WSGI is a Python standard.</p>
<p>uWSGI is a WSGI implementation. In this tutorial we will set up uWSGI so that it creates a Unix socket, and serves responses to the web server via the uwsgi protocol. At the end, our complete stack of components will look like this:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">the web client &lt;-&gt; the web server &lt;-&gt; the socket &lt;-&gt; uwsgi &lt;-&gt; Django</span><br></pre></td></tr></table></figure>
<h2 id="Before-you-start-setting-up-uWSGI"><a href="#Before-you-start-setting-up-uWSGI" class="headerlink" title="Before you start setting up uWSGI"></a>Before you start setting up uWSGI</h2><h3 id="virtual-env"><a href="#virtual-env" class="headerlink" title="virtual env"></a>virtual env</h3><p>Make sure you are in a virtualenv for the software we need to install (we will describe how to install a system-wide uwsgi later):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virtualenv uwsgi-tutorial</span><br><span class="line"><span class="built_in">cd</span> uwsgi-tutorial</span><br><span class="line"><span class="built_in">source</span> bin/activate</span><br></pre></td></tr></table></figure>
<h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><p>Install Django into your virtualenv, create a new project, and <code>cd</code> into the project:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install Django</span><br><span class="line">django-admin.py startproject mysite</span><br><span class="line"><span class="built_in">cd</span> mysite</span><br></pre></td></tr></table></figure>
<h3 id="About-the-domain-and-port"><a href="#About-the-domain-and-port" class="headerlink" title="About the domain and port"></a>About the domain and port</h3><p>In this tutorial we will call your domain <code>example.com</code>. Substitute your own FQDN or IP address.</p>
<p>Throughout, we’ll be using port 8000 for the web server to publish on, just like the Django runserver does by default. You can use whatever port you want of course, but I have chosen this one so it doesn’t conflict with anything a web server might be doing already.</p>
<h2 id="Basic-uWSGI-installation-and-configuration"><a href="#Basic-uWSGI-installation-and-configuration" class="headerlink" title="Basic uWSGI installation and configuration"></a>Basic uWSGI installation and configuration</h2><h3 id="Install-uWSGI-into-your-virtualenv"><a href="#Install-uWSGI-into-your-virtualenv" class="headerlink" title="Install uWSGI into your virtualenv"></a>Install uWSGI into your virtualenv</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install uwsgi</span><br></pre></td></tr></table></figure>
<p>Of course there are other ways to install uWSGI, but this one is as good as any. Remember that you will need to have Python development packages installed. In the case of Debian, or Debian-derived systems such as Ubuntu, what you need to have installed is <code>pythonX.Y-dev</code>, where X.Y is your version of Python.</p>
<h3 id="Basic-test"><a href="#Basic-test" class="headerlink" title="Basic test"></a>Basic test</h3><p>Create a file called <code>test.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">application</span>(<span class="params">env, start_response</span>):</span><br><span class="line">    start_response(<span class="string">&#x27;200 OK&#x27;</span>, [(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;text/html&#x27;</span>)])</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">b&quot;Hello World&quot;</span>] <span class="comment"># python3</span></span><br><span class="line">    <span class="comment">#return [&quot;Hello World&quot;] # python2</span></span><br></pre></td></tr></table></figure>
<p>Note</p>
<p>Take into account that Python 3 requires <code>bytes()</code>.</p>
<p>Run uWSGI:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --http :8000 --wsgi-file test.py</span><br></pre></td></tr></table></figure>
<p>The options mean:</p>
<ul>
<li><code>http :8000</code>: use protocol http, port 8000</li>
<li><code>wsgi-file test.py</code>: load the specified file, test.py</li>
</ul>
<p>This should serve a ‘hello world’ message directly to the browser on port 8000. Visit: <code>http://example.com:8000</code> to check. If so, it means the following stack of components works:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">the web client &lt;-&gt; uWSGI &lt;-&gt; Python</span><br></pre></td></tr></table></figure>
<h3 id="Test-your-Django-project"><a href="#Test-your-Django-project" class="headerlink" title="Test your Django project"></a>Test your Django project</h3><p>Now we want uWSGI to do the same thing, but to run a Django site instead of the <code>test.py</code> module.</p>
<p>If you haven’t already done so, make sure that your <code>mysite</code> project actually works:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure>
<p>And if that works, run it using uWSGI:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --http :8000 --module mysite.wsgi</span><br></pre></td></tr></table></figure>
<ul>
<li><code>module mysite.wsgi</code>: load the specificied wsgi module</li>
</ul>
<p>Point your browser at the server; if the site appears, it means uWSGI is able to serve your Django application from your virtualenv, and this stack operates correctly:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">the web client &lt;-&gt; uWSGI &lt;-&gt; Django</span><br></pre></td></tr></table></figure>
<p>Now normally we won’t have the browser speaking directly to uWSGI. That’s a job for the webserver, which will act as a go-between.</p>
<h2 id="Basic-nginx"><a href="#Basic-nginx" class="headerlink" title="Basic nginx"></a>Basic nginx</h2><h3 id="Install-nginx"><a href="#Install-nginx" class="headerlink" title="Install nginx"></a>Install nginx</h3><p>To simple, I’ll skip this part.</p>
<p>Use <code>sudo /etc/init.d/nginx start</code> to start nginx and use <code>sudo nginx -s reload</code> to reload configurations.</p>
<h3 id="Configure-nginx-for-your-site"><a href="#Configure-nginx-for-your-site" class="headerlink" title="Configure nginx for your site"></a>Configure nginx for your site</h3><p>You will need the <code>uwsgi_params</code> file, which is available in the <code>nginx</code> directory of the uWSGI distribution, or from <a href="https://github.com/nginx/nginx/blob/master/conf/uwsgi_params">https://github.com/nginx/nginx/blob/master/conf/uwsgi_params</a></p>
<p>Copy it into your project directory. In a moment we will tell nginx to refer to it.</p>
<p>Now create a file called mysite_nginx.conf in the /etc/nginx/sites-available/ directory, and put this in it:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysite_nginx.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># the upstream component nginx needs to connect to</span></span><br><span class="line">upstream django &#123;</span><br><span class="line">    <span class="comment"># server unix:///path/to/your/mysite/mysite.sock; # for a file socket</span></span><br><span class="line">    server <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8001</span>; <span class="comment"># for a web port socket (we&#x27;ll use this first)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># configuration of the server</span></span><br><span class="line">server &#123;</span><br><span class="line">    <span class="comment"># the port your site will be served on</span></span><br><span class="line">    listen      <span class="number">8000</span>;</span><br><span class="line">    <span class="comment"># the domain name it will serve for</span></span><br><span class="line">    server_name example.com; <span class="comment"># substitute your machine&#x27;s IP address or FQDN</span></span><br><span class="line">    charset     utf-<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># max upload size</span></span><br><span class="line">    client_max_body_size 75M;   <span class="comment"># adjust to taste</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Django media</span></span><br><span class="line">    location /media  &#123;</span><br><span class="line">        alias /path/to/your/mysite/media;  <span class="comment"># your Django project&#x27;s media files - amend as required</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /static &#123;</span><br><span class="line">        alias /path/to/your/mysite/static; <span class="comment"># your Django project&#x27;s static files - amend as required</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Finally, send all non-media requests to the Django server.</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        uwsgi_pass  django;</span><br><span class="line">        include     /path/to/your/mysite/uwsgi_params; <span class="comment"># the uwsgi_params file you installed</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>This conf file tells nginx to serve up media and static files from the filesystem, as well as handle requests that require Django’s intervention. For a large deployment it is considered good practice to let one server handle static/media files, and another handle Django applications, but for now, this will do just fine.</p>
<p>Symlink to this file from /etc/nginx/sites-enabled so nginx can see it:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">ln</span> -s /etc/nginx/sites-available/mysite_nginx.conf /etc/nginx/sites-enabled/</span><br></pre></td></tr></table></figure>
<h3 id="Deploying-static-files"><a href="#Deploying-static-files" class="headerlink" title="Deploying static files"></a>Deploying static files</h3><p>Before running nginx, you have to collect all Django static files in the static folder. First of all you have to edit mysite/settings.py adding:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&quot;static/&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>and then run</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python manage.py collectstatic</span><br></pre></td></tr></table></figure>
<h3 id="Basic-nginx-test"><a href="#Basic-nginx-test" class="headerlink" title="Basic nginx test"></a>Basic nginx test</h3><p>Restart nginx:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/nginx restart</span><br></pre></td></tr></table></figure>
<p>To check that media files are being served correctly, add an image called <code>media.png</code> to the <code>/path/to/your/project/project/media</code> directory, then visit <a href="http://example.com:8000/media/media.png">http://example.com:8000/media/media.png</a> - if this works, you’ll know at least that nginx is serving files correctly.</p>
<p>It is worth not just restarting nginx, but actually stopping and then starting it again, which will inform you if there is a problem, and where it is.</p>
<h2 id="nginx-and-uWSGI-and-test-py"><a href="#nginx-and-uWSGI-and-test-py" class="headerlink" title="nginx and uWSGI and test.py"></a>nginx and uWSGI and test.py</h2><p>Let’s get nginx to speak to the “hello world” <code>test.py</code> application.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --socket :8001 --wsgi-file test.py</span><br></pre></td></tr></table></figure>
<p>This is nearly the same as before, except this time one of the options is different:</p>
<ul>
<li><code>socket :8001</code>: use protocol uwsgi, port 8001</li>
</ul>
<p>nginx meanwhile has been configured to communicate with uWSGI on that port, and with the outside world on port 8000. Visit:</p>
<p><a href="http://example.com:8000/">http://example.com:8000/</a></p>
<p>to check. And this is our stack:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">the web client &lt;-&gt; the web server &lt;-&gt; the socket &lt;-&gt; uWSGI &lt;-&gt; Python</span><br></pre></td></tr></table></figure>
<p>Meanwhile, you can try to have a look at the uwsgi output at <a href="http://example.com:8001">http://example.com:8001</a> - but quite probably, it won’t work because your browser speaks http, not uWSGI, though you should see output from uWSGI in your terminal.</p>
<h2 id="Using-Unix-sockets-instead-of-ports"><a href="#Using-Unix-sockets-instead-of-ports" class="headerlink" title="Using Unix sockets instead of ports"></a>Using Unix sockets instead of ports</h2><p>So far we have used a TCP port socket, because it’s simpler, but in fact it’s better to use Unix sockets than ports - there’s less overhead.</p>
<p>Edit <code>mysite_nginx.conf</code>, changing it to match:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">server unix:///path/to/your/mysite/mysite.sock; <span class="comment"># for a file socket</span></span><br><span class="line"><span class="comment"># server 127.0.0.1:8001; # for a web port socket (we&#x27;ll use this first)</span></span><br></pre></td></tr></table></figure>
<p>and restart nginx.</p>
<p>Run uWSGI again:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --socket mysite.sock --wsgi-file test.py</span><br></pre></td></tr></table></figure>
<p>This time the <code>socket</code> option tells uWSGI which file to use.</p>
<p>Try <a href="http://example.com:8000/">http://example.com:8000/</a> in the browser.</p>
<h3 id="If-that-doesn’t-work"><a href="#If-that-doesn’t-work" class="headerlink" title="If that doesn’t work"></a>If that doesn’t work</h3><p>Check your nginx error log(/var/log/nginx/error.log). If you see something like:</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">connect() to unix:///path/to/your/mysite/mysite.sock failed (13: Permission</span><br><span class="line">denied)</span><br></pre></td></tr></table></figure>
<p>then probably you need to manage the permissions on the socket so that nginx is allowed to use it.</p>
<p>Try:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=666 <span class="comment"># (very permissive)</span></span><br></pre></td></tr></table></figure>
<p>↑This works for me and ↓this does not</p>
<p>or:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --socket mysite.sock --wsgi-file test.py --chmod-socket=664 <span class="comment"># (more sensible)</span></span><br></pre></td></tr></table></figure>
<p>You may also have to add your user to nginx’s group (which is probably www-data), or vice-versa, so that nginx can read and write to your socket properly.</p>
<p>It’s worth keeping the output of the nginx log running in a terminal window so you can easily refer to it while troubleshooting.</p>
<h2 id="Running-the-Django-application-with-uwsgi-and-nginx"><a href="#Running-the-Django-application-with-uwsgi-and-nginx" class="headerlink" title="Running the Django application with uwsgi and nginx"></a>Running the Django application with uwsgi and nginx</h2><p>Let’s run our Django application:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=666</span><br></pre></td></tr></table></figure>
<p>Note that in the original docs, this command is</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --socket mysite.sock --module mysite.wsgi --chmod-socket=664</span><br></pre></td></tr></table></figure>
<p>but it does not work for me.</p>
<p>Now uWSGI and nginx should be serving up not just a “Hello World” module, but your Django project.</p>
<h2 id="Now-uWSGI-and-nginx-should-be-serving-up-not-just-a-“Hello-World”-module-but-your-Django-project"><a href="#Now-uWSGI-and-nginx-should-be-serving-up-not-just-a-“Hello-World”-module-but-your-Django-project" class="headerlink" title="Now uWSGI and nginx should be serving up not just a “Hello World” module, but your Django project"></a>Now uWSGI and nginx should be serving up not just a “Hello World” module, but your Django project</h2><p>We can put the same options that we used with uWSGI into a file, and then ask uWSGI to run with that file. It makes it easier to manage configurations.</p>
<p>Create a file called <code>mysite_uwsgi.ini</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysite_uwsgi.ini file</span></span><br><span class="line">[uwsgi]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Django-related settings</span></span><br><span class="line"><span class="comment"># the base directory (full path)</span></span><br><span class="line">chdir           = /path/to/your/project</span><br><span class="line"><span class="comment"># Django&#x27;s wsgi file</span></span><br><span class="line">module          = project.wsgi</span><br><span class="line"><span class="comment"># the virtualenv (full path)</span></span><br><span class="line">home            = /path/to/virtualenv</span><br><span class="line"></span><br><span class="line"><span class="comment"># process-related settings</span></span><br><span class="line"><span class="comment"># master</span></span><br><span class="line">master          = true</span><br><span class="line"><span class="comment"># maximum number of worker processes</span></span><br><span class="line">processes       = <span class="number">10</span></span><br><span class="line"><span class="comment"># the socket (use the full path to be safe</span></span><br><span class="line">socket          = /path/to/your/project/mysite.sock</span><br><span class="line"><span class="comment"># ... with appropriate permissions - may be needed</span></span><br><span class="line"><span class="comment"># chmod-socket    = 664</span></span><br><span class="line"><span class="comment"># clear environment on exit</span></span><br><span class="line">vacuum          = true</span><br></pre></td></tr></table></figure>
<p>And run uwsgi using this file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --ini mysite_uwsgi.ini <span class="comment"># the --ini option is used to specify a file</span></span><br></pre></td></tr></table></figure>
<p>Once again, test that the Django site works as expected.</p>
<h2 id="Install-uWSGI-system-wide"><a href="#Install-uWSGI-system-wide" class="headerlink" title="Install uWSGI system-wide"></a>Install uWSGI system-wide</h2><p>So far, uWSGI is only installed in our virtualenv; we’ll need it installed system-wide for deployment purposes.</p>
<p>Deactivate your virtualenv using command: <code>deactivate</code></p>
<p>and install uWSGI system-wide:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pip install uwsgi</span><br><span class="line"></span><br><span class="line"><span class="comment"># Or install LTS (long term support).</span></span><br><span class="line">pip install https://projects.unbit.it/downloads/uwsgi-lts.tar.gz</span><br></pre></td></tr></table></figure>
<p>The uWSGI wiki describes several installation procedures. Before installing uWSGI system-wide, it’s worth considering which version to choose and the most appropriate way of installing it.</p>
<p>Check again that you can still run uWSGI just like you did before:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uwsgi --ini mysite_uwsgi.ini <span class="comment"># the --ini option is used to specify a file</span></span><br></pre></td></tr></table></figure>
<h2 id="Emperor-mode"><a href="#Emperor-mode" class="headerlink" title="Emperor mode"></a>Emperor mode</h2><p>uWSGI can run in ‘emperor’ mode. In this mode it keeps an eye on a directory of uWSGI config files, and will spawn instances (‘vassals’) for each one it finds.</p>
<p>Whenever a config file is amended, the emperor will automatically restart the vassal.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># create a directory for the vassals</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/uwsgi/vassals</span><br><span class="line"><span class="comment"># symlink from the default config directory to your config file</span></span><br><span class="line">sudo <span class="built_in">ln</span> -s /path/to/your/mysite/mysite_uwsgi.ini /etc/uwsgi/vassals/</span><br><span class="line"><span class="comment"># run the emperor</span></span><br><span class="line">uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data</span><br></pre></td></tr></table></figure>
<p>You may need to run uWSGI with sudo (I need not)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data</span><br></pre></td></tr></table></figure>
<p>The options mean:</p>
<ul>
<li><code>emperor</code>: where to look for vassals (config files)</li>
<li><code>uid</code>: the user id of the process once it’s started</li>
<li><code>gid</code>: the group id of the process once it’s started</li>
</ul>
<p>Check the site; it should be running.</p>
<h2 id="Check-the-site-it-should-be-running"><a href="#Check-the-site-it-should-be-running" class="headerlink" title="Check the site; it should be running"></a>Check the site; it should be running</h2><p>The last step is to make it all happen automatically at system startup time.</p>
<p>For many systems, the easiest (if not the best) way to do this is to use the <code>rc.local</code> file.</p>
<p>Edit <code>/etc/rc.local</code> and add:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/local/bin/uwsgi --emperor /etc/uwsgi/vassals --uid www-data --gid www-data --daemonize /var/log/uwsgi-emperor.log</span><br></pre></td></tr></table></figure>
<p>before the line <code>exit 0</code>. <strong>(Important)</strong></p>
<p>And that should be it!</p>
<h2 id="Further-configuration"><a href="#Further-configuration" class="headerlink" title="Further configuration"></a>Further configuration</h2><p>It is important to understand that this has been a tutorial, to get you started. You do need to read the nginx and uWSGI documentation, and study the options available before deployment in a production environment.</p>
<p>Both nginx and uWSGI benefit from friendly communities, who are able to offer invaluable advice about configuration and usage.</p>
<h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><p>It is important to understand that this has been a tutorial, to get you started. You do need to read the nginx and uWSGI documentation, and study the options available before deployment in a production environment.</p>
<p>Both nginx and uWSGI benefit from friendly communities, who are able to offer invaluable advice about configuration and usage.</p>
<h3 id="uWSGI"><a href="#uWSGI" class="headerlink" title="uWSGI"></a>uWSGI</h3><p>It is important to understand that this has been a tutorial, to get you started. You do need to read the nginx and uWSGI documentation, and study the options available before deployment in a production environment.</p>
<p>Both nginx and uWSGI benefit from friendly communities, who are able to offer invaluable advice about configuration and usage.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">env = DJANGO_SETTINGS_MODULE=mysite.settings <span class="comment"># set an environment variable</span></span><br><span class="line">safe-pidfile = /tmp/project-master.pid <span class="comment"># create a pidfile</span></span><br><span class="line">harakiri = <span class="number">20</span> <span class="comment"># respawn processes taking more than 20 seconds</span></span><br><span class="line">limit-<span class="keyword">as</span> = <span class="number">128</span> <span class="comment"># limit the project to 128 MB</span></span><br><span class="line"><span class="built_in">max</span>-requests = <span class="number">5000</span> <span class="comment"># respawn processes after serving 5000 requests</span></span><br><span class="line">daemonize = /var/log/uwsgi/yourproject.log <span class="comment"># background the process &amp; log</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Web Dev</tag>
        <tag>Django</tag>
        <tag>Backend</tag>
        <tag>Tutorial</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Math is Hard</title>
    <url>/2022/06/03/Math-is-Hard/</url>
    <content><![CDATA[<h2 id="Hessian-Matrix"><a href="#Hessian-Matrix" class="headerlink" title="Hessian Matrix"></a>Hessian Matrix</h2><p><a href="https://zh.wikipedia.org/zh-tw/%E9%BB%91%E5%A1%9E%E7%9F%A9%E9%99%A3">Wiki</a></p>
<script type="math/tex; mode=display">H_{i,j}=\frac{\partial ^2 f}{\partial x_i \partial x_j}</script><script type="math/tex; mode=display">H=\nabla ^2 f</script><h2 id="Determinant"><a href="#Determinant" class="headerlink" title="Determinant"></a>Determinant</h2><p>Properties:</p>
<h3 id="Property-1"><a href="#Property-1" class="headerlink" title="Property 1"></a>Property 1</h3><p>Let $A\in R^{n\times n}$</p>
<script type="math/tex; mode=display">
det(A)=det(A^T)
\\
det(A)=(-1)^n det(-A)</script><p>$-1$ can be replaced by any number $c$</p>
<h3 id="Property-2"><a href="#Property-2" class="headerlink" title="Property 2"></a>Property 2</h3><p>Multiply one column (or one row) by $k$,</p>
<script type="math/tex; mode=display">
\left| \begin{matrix}{l}
 a_{11}&  a_{12}&  \cdots&  a_{1n}\\
 \vdots&  \vdots&  \ddots&  \vdots\\
 ka_{i1}&  ka_{i2}&  \cdots&  ka_{in}\\
 \vdots&  \vdots&  \ddots&  \vdots\\
 a_{n1}&  a_{n2}&  \cdots&  a_{nn}\\
\end{matrix} \right|=k\left| \begin{matrix}{l}
 a_{11}&  a_{12}&  \cdots&  a_{1n}\\
 \vdots&  \vdots&  \ddots&  \vdots\\
 a_{i1}&  a_{i2}&  \cdots&  a_{in}\\
 \vdots&  \vdots&  \ddots&  \vdots\\
 a_{n1}&  a_{n2}&  \cdots&  a_{nn}\\
\end{matrix} \right|</script><p>The determinant of the new matrix is k times the determinant of the original matrix.</p>
<h2 id="Properties-about-Cross-Product"><a href="#Properties-about-Cross-Product" class="headerlink" title="Properties about Cross Product"></a>Properties about Cross Product</h2><script type="math/tex; mode=display">
a\cdot \left( b\times c \right) =b\cdot \left( c\times a \right) =c\cdot \left( a\times b \right)
\\
a\times a=0
\\
(a\times b) \cdot a =0
\\
a\times \left( b\times c \right) +b\times \left( c\times a \right) +c\times \left( a\times b \right) =0
\\
\left( a\times b \right) \times \left( a\times c \right) =\left( a\cdot \left( b\times c \right) \right) a</script><p>For $a,b,c,d\in \mathbb{R}^3$:</p>
<script type="math/tex; mode=display">
a\times \left( b\times c \right) =\left( a\cdot c \right) b-\left( a\cdot c \right) c
\\
(a\times b)\times (a\times c)=(a\cdot (b\times c))a=det(a,b,c)a</script><p>which is also know as the vector triple product.</p>
<script type="math/tex; mode=display">
(a\times b)\cdot(c\times d)=(a\cdot c)(b\cdot d)-(a\cdot d)(b\cdot c)</script><p>whose proof is given here:</p>
<p><img src="https://s1.ax1x.com/2022/06/12/XgqMpn.png" alt="Proof of the Lagrange identity on vector product"></p>
<h2 id="Property-of-Orthonormal-Matrix"><a href="#Property-of-Orthonormal-Matrix" class="headerlink" title="Property of Orthonormal Matrix"></a>Property of Orthonormal Matrix</h2><script type="math/tex; mode=display">
Q^TQ=I\\
Q^T=Q^{-1}</script><h2 id="Linear-Transformation-In-Transformed-Basis"><a href="#Linear-Transformation-In-Transformed-Basis" class="headerlink" title="Linear Transformation In Transformed Basis"></a>Linear Transformation In Transformed Basis</h2><script type="math/tex; mode=display">
v'=P^{-1}APv</script><p>where $P$ is the basis of the transformed basis (new basis) in the standard basis (our basis) and $A$ is the transformation in the standard basis.</p>
<p><img src="https://s1.ax1x.com/2022/06/12/XgBGdg.png" alt="Linear transformation in transformed basis"></p>
<h2 id="Rotation-Matrix"><a href="#Rotation-Matrix" class="headerlink" title="Rotation Matrix"></a>Rotation Matrix</h2><script type="math/tex; mode=display">
R=\left[ \begin{matrix}
 \cos \theta&  -\sin \theta&  0\\
 \sin \theta&  \cos \theta&  0\\
 0&  0&  1\\
\end{matrix} \right]</script><p>rotates points in the $xy$ plane counterclockwise through an angle $\theta$.</p>
<h3 id="Judge-whether-a-matrix-is-a-rotation-matrix"><a href="#Judge-whether-a-matrix-is-a-rotation-matrix" class="headerlink" title="Judge whether a matrix is a rotation matrix"></a>Judge whether a matrix is a rotation matrix</h3><p>A matrix is a rotation matrix iff $R^T=R^{-1}$ i.e. $R^TR=I$ and $detR=1$</p>
<h3 id="Calculate-the-axis-of-the-rotation-matrix"><a href="#Calculate-the-axis-of-the-rotation-matrix" class="headerlink" title="Calculate the axis of the rotation matrix"></a>Calculate the axis of the rotation matrix</h3><p>The axis of the rotation matrix stays unchanged after rotation, i.e. $Rx=x$, $(R-I)x=0$</p>
<p>Solving the equation and we get the axis of the rotation.</p>
<h3 id="Calculate-the-rotation-angle-of-the-rotation-matrix"><a href="#Calculate-the-rotation-angle-of-the-rotation-matrix" class="headerlink" title="Calculate the rotation angle of the rotation matrix"></a>Calculate the rotation angle of the rotation matrix</h3><p>Choose a random vector, usually $v=(1,0,0,…,0)$. Therefor, $w=Rv$, i.e. $v$ after rotation, is the actually the first column of $R$ (or you can just do the calculate).</p>
<p>Let $a$ be the vector representing the axis of the rotation.</p>
<p>We can use $v’=v-\frac{aa^T}{a^Ta}v$ to get the vector perpendicular to the axis while pointing from the axis to the end of $v$. Similarly, use $w’=w-\frac{aa^T}{a^Ta}w$ to get the vector perpendicular to the axis while pointing from the axis t othe end of $w$.</p>
<p>It’s easy to find that $Span(v’,w’)$ is perpendicular to the axis $a$. Therefor, the angle between $v’$ and $w’$ is the angle of the rotation, i.e. $\arccos(\frac{<v',w'>}{||v’||||w’||})$</p>
<h2 id="QR-Factorization"><a href="#QR-Factorization" class="headerlink" title="QR Factorization"></a>QR Factorization</h2><p>Reference: <a href="https://www.youtube.com/watch?v=J41Ypt6Mftc">this video</a> and <a href="https://www.youtube.com/watch?v=0MtwqhIwdrI">this video(better, starts at 25:30)</a></p>
<script type="math/tex; mode=display">
q_3=\frac{C}{||C||} \\
C=c-\frac{A^T c}{A^T A}A-\frac{B^T c}{B^T B}B</script><h2 id="Nullity-of-a-Matrix"><a href="#Nullity-of-a-Matrix" class="headerlink" title="Nullity of a Matrix"></a>Nullity of a Matrix</h2><p>Basically, the dimension of the null space.</p>
<h2 id="Null-Space-Kernel-of-a-Matrix"><a href="#Null-Space-Kernel-of-a-Matrix" class="headerlink" title="Null Space / Kernel of a Matrix"></a>Null Space / Kernel of a Matrix</h2><p>Reference: <a href="https://www.youtube.com/watch?v=8o5Cmfpeo6g&amp;t=1692s">this video</a> and <a href="https://www.youtube.com/watch?v=VqP2tREMvt0">this video(talks about how to calc)</a></p>
<p>The null space of $A$ is all solution $x$ (a vector), s.t. $Ax=0$. Often denoted as $N(A)$ or $ker(A)$</p>
<h2 id="Rank-of-a-Matrix"><a href="#Rank-of-a-Matrix" class="headerlink" title="Rank of a Matrix"></a>Rank of a Matrix</h2><p>Basically, the dimension of the column space.</p>
<p>Reference: <a href="https://stattrek.com/matrix-algebra/matrix-rank.aspx">this page</a></p>
<p>It tell you how to calc the rank of a matrix.</p>
<h2 id="Projection-Matrix"><a href="#Projection-Matrix" class="headerlink" title="Projection Matrix"></a>Projection Matrix</h2><p>Reference: <a href="http://mlwiki.org/index.php/Projection_onto_Subspaces">this page</a></p>
<p>Use <code>Ctrl+F</code> to search for the <code>Projection Matrix</code> part, in which you can find how to solve projection matrix onto certain space.</p>
<p>A projection matrix onto a col space of $Q$ is:</p>
<script type="math/tex; mode=display">P=Q(Q^TQ)^{-1}Q^T</script><p>Specifically, if $Q$ is a square orthonormal matrix, then $P=I$</p>
]]></content>
      <tags>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab Learning Notes</title>
    <url>/2022/04/27/Matlab-Learning-Notes/</url>
    <content><![CDATA[<p>Docs: <a href="https://ww2.mathworks.cn/help/?requestedDomain=en">MATLAB Help Center</a></p>
<h2 id="Table-Related"><a href="#Table-Related" class="headerlink" title="Table Related"></a>Table Related</h2><h3 id="How-to-filter-a-table"><a href="#How-to-filter-a-table" class="headerlink" title="How to filter a table"></a>How to filter a table</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">theTable(theTable.VariableName == <span class="number">0</span>, :);</span><br></pre></td></tr></table></figure>
<p>returns a table that contains every row in <code>theTable</code> whose <code>VariableName == 0</code>.</p>
<h3 id="Remove-Rows-from-Table"><a href="#Remove-Rows-from-Table" class="headerlink" title="Remove Rows from Table"></a>Remove Rows from Table</h3><p><a href="https://www.mathworks.com/help/matlab/matlab_prog/add-and-delete-table-rows.html">Docs</a></p>
<p>This removes rows with row id 3,5,7 from the table.</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">table</span>([<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>],:)=[];</span><br></pre></td></tr></table></figure>
<h2 id="Things-Unique-to-MATLAB"><a href="#Things-Unique-to-MATLAB" class="headerlink" title="Things Unique to MATLAB"></a>Things Unique to MATLAB</h2><h3 id="Cell-Array"><a href="#Cell-Array" class="headerlink" title="Cell Array"></a>Cell Array</h3><p><a href="https://ww2.mathworks.cn/help/matlab/cell-arrays.html">Docs</a></p>
<p>A cell array is a data type with indexed data containers called cells, where each cell can contain any type of data.</p>
<p>Use <code>A&#123;1&#125;</code> to access a cell.</p>
<h3 id="Vectorization"><a href="#Vectorization" class="headerlink" title="Vectorization"></a>Vectorization</h3><p>Instead of write:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a = input(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:<span class="built_in">size</span>(a, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:<span class="built_in">size</span>(a, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> (a(<span class="built_in">i</span>, <span class="built_in">j</span>) &gt; <span class="number">5</span>)</span><br><span class="line">      a(<span class="built_in">i</span>, <span class="built_in">j</span>) = <span class="built_in">sqrt</span>(a(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<p>Write: （use logic array as mask）</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a = input(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">b = a &gt; <span class="number">5</span>;</span><br><span class="line">a(b) = <span class="built_in">sqrt</span>(a(b));</span><br></pre></td></tr></table></figure>
<p>This is because logical array can serve as a mask for arithmetic operations.</p>
<p>What if we want all the elements greater than 5 to be sqrt and the rest be sqr.</p>
<p>Then write:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a = input(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">b = a &gt; <span class="number">5</span>;</span><br><span class="line">c = ~b;</span><br><span class="line">a(b) = <span class="built_in">sqrt</span>(a(b));</span><br><span class="line">a(c) = a(c).^<span class="number">2</span>;</span><br><span class="line"><span class="built_in">disp</span>(a);</span><br></pre></td></tr></table></figure>
<h3 id="Function-Handle-a-unique-class"><a href="#Function-Handle-a-unique-class" class="headerlink" title="Function Handle (a unique class)"></a>Function Handle (a unique class)</h3><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/ref/function_handle.html?searchHighlight=function%20handle&amp;s_tid=srchtitle_function%20handle_2">function handle</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; f = @(x) x^<span class="number">2</span><span class="number">-3</span>*x+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">f =</span><br><span class="line"></span><br><span class="line">  function_handle with value:</span><br><span class="line"></span><br><span class="line">    @(x)x^<span class="number">2</span><span class="number">-3</span>*x+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; f(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">-1</span></span><br></pre></td></tr></table></figure>
<h2 id="Add-Fonts-to-MATLAB"><a href="#Add-Fonts-to-MATLAB" class="headerlink" title="Add Fonts to MATLAB"></a>Add Fonts to MATLAB</h2><p>Reference: <a href="https://ww2.mathworks.cn/matlabcentral/answers/514119-can-i-add-custom-fonts-to-my-matlab-desktop-in-preferences">Can I add custom fonts to my MATLAB Desktop in Preferences?</a></p>
<p>Basically, copy <code>ttf</code> font files to <code>\matlabRoot\sys\java\jre\win64\jre\lib\fonts</code>, restart MATLAB, and choose the font in the MATLAB preferences.</p>
<h2 id="Array-Related"><a href="#Array-Related" class="headerlink" title="Array Related"></a>Array Related</h2><h3 id="Erasing-a-Column-or-Row"><a href="#Erasing-a-Column-or-Row" class="headerlink" title="Erasing a Column or Row"></a>Erasing a Column or Row</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a(:,<span class="number">3</span>)=[];</span><br></pre></td></tr></table></figure>
<h3 id="Array-Initialization"><a href="#Array-Initialization" class="headerlink" title="Array Initialization"></a>Array Initialization</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in">zeros</span>(<span class="number">5</span>,<span class="number">2</span>);</span><br><span class="line">a=<span class="built_in">rand</span>(<span class="number">5</span>,<span class="number">2</span>);</span><br><span class="line">a=<span class="built_in">ones</span>(<span class="number">5</span>,<span class="number">2</span>);</span><br><span class="line">a=[<span class="number">1</span>:<span class="number">5</span>]; <span class="comment">%initial:end</span></span><br><span class="line">a=[<span class="number">1</span>:<span class="number">2</span>:<span class="number">5</span>]; <span class="comment">%initial:step:end</span></span><br><span class="line"><span class="built_in">disp</span>(a);</span><br></pre></td></tr></table></figure>
<h3 id="and-Merge-Arrays"><a href="#and-Merge-Arrays" class="headerlink" title="[;] and [,] | Merge Arrays"></a>[;] and [,] | Merge Arrays</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">3</span>;<span class="number">2</span>;<span class="number">6</span>;<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y=[<span class="number">4</span>;<span class="number">1</span>;<span class="number">3</span>;<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% merge several arrays in a vertical way; use &#x27;,&#x27; to merge them in a horizontal way</span></span><br><span class="line">&gt;&gt; y=[y;sum(x)]</span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">    <span class="number">19</span></span><br></pre></td></tr></table></figure>
<h3 id="Array-Indexing"><a href="#Array-Indexing" class="headerlink" title="( : , : ) | Array Indexing"></a>( : , : ) | Array Indexing</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% anyArrayNameYouLike(startRow:endRow,startColumn:endColumn)</span></span><br><span class="line">&gt;&gt; y(<span class="number">1</span>:<span class="number">4</span>,:)  </span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; y=<span class="built_in">ans</span></span><br><span class="line"></span><br><span class="line">y =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">5</span></span><br></pre></td></tr></table></figure>
<h3 id="Element-wise-Calculations"><a href="#Element-wise-Calculations" class="headerlink" title=".^ .* ./ | Element-wise Calculations"></a>.^ .* ./ | Element-wise Calculations</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% use &#x27;.&#x27; before calculation marks to perform element-wise calculations rather than matrix calculations</span></span><br><span class="line">&gt;&gt; x.^y</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">          <span class="number">81</span></span><br><span class="line">           <span class="number">2</span></span><br><span class="line">         <span class="number">216</span></span><br><span class="line">       <span class="number">32768</span></span><br></pre></td></tr></table></figure>
<h3 id="‘-Conjugate-Transpose-a-Matrix"><a href="#‘-Conjugate-Transpose-a-Matrix" class="headerlink" title="‘ | Conjugate Transpose a Matrix"></a>‘ | Conjugate Transpose a Matrix</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x&#x27;</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">2</span>     <span class="number">6</span>     <span class="number">8</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; w=sum(x.*y)</span><br><span class="line"></span><br><span class="line">w =</span><br><span class="line"></span><br><span class="line">    <span class="number">72</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; x&#x27;*y-w</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; A=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; B=[<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">B =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure>
<p>If complex number is involved and you simply want to transpose a matrix without turning complex numbers into its conjugate complex number, use <code>.&#39;</code> instead.</p>
<h3 id="union-A-B-Merge-Multiple-Arrays-without-Repetition"><a href="#union-A-B-Merge-Multiple-Arrays-without-Repetition" class="headerlink" title="union(A,B) | Merge Multiple Arrays without Repetition"></a>union(A,B) | Merge Multiple Arrays without Repetition</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; union(A,B)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure>
<h2 id="Functions"><a href="#Functions" class="headerlink" title="Functions"></a>Functions</h2><h3 id="array2table-Convert-homogeneous-array-to-table"><a href="#array2table-Convert-homogeneous-array-to-table" class="headerlink" title="array2table | Convert homogeneous array to table"></a>array2table | Convert homogeneous array to table</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/array2table.html">Docs</a></p>
<h3 id="format-Set-output-display-format"><a href="#format-Set-output-display-format" class="headerlink" title="format | Set output display format"></a>format | Set output display format</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">format default</span><br><span class="line">format rational</span><br></pre></td></tr></table></figure>
<h3 id="groupcounts-Count-group-numbers-satisfying-certain-conditions"><a href="#groupcounts-Count-group-numbers-satisfying-certain-conditions" class="headerlink" title="groupcounts() | Count group numbers satisfying certain conditions"></a>groupcounts() | Count group numbers satisfying certain conditions</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/double.groupcounts.html?s_tid=doc_ta">Docs</a></p>
<h3 id="linspace-Generate-linearly-spaced-vector"><a href="#linspace-Generate-linearly-spaced-vector" class="headerlink" title="linspace() | Generate linearly spaced vector"></a>linspace() | Generate linearly spaced vector</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">y = <span class="built_in">linspace</span>(x1,x2,n)</span><br></pre></td></tr></table></figure>
<p>generates n points. The spacing between the points is $(x2-x1)/(n-1)$.</p>
<h3 id="find-Find-Index-of-Element-in-Array"><a href="#find-Find-Index-of-Element-in-Array" class="headerlink" title="find() | Find Index of Element in Array"></a>find() | Find Index of Element in Array</h3><p><a href="https://www.mathworks.com/matlabcentral/answers/365917-how-i-can-find-index-of-element-in-array">Reference</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">a=[<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="built_in">find</span>(a==<span class="number">1</span>) = <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>If you want to find index of string in a cell array, check out <a href="https://www.mathworks.com/matlabcentral/answers/84242-find-in-a-cell-array">this page</a></p>
<h3 id="readtable-Read-Full-Table-from-File"><a href="#readtable-Read-Full-Table-from-File" class="headerlink" title="readtable() | Read Full Table from File"></a>readtable() | Read Full Table from File</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/readtable.html?s_tid=doc_ta">Docs</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">table</span>=<span class="built_in">readtable</span>(<span class="string">&#x27;fileName&#x27;</span>,<span class="string">&#x27;ReadVariableNames&#x27;</span>,<span class="built_in">true</span>);</span><br></pre></td></tr></table></figure>
<h3 id="log-ln"><a href="#log-ln" class="headerlink" title="log() | ln"></a>log() | ln</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">log</span>(e)=<span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<h3 id="fopen-Low-Level-Input-Output-File"><a href="#fopen-Low-Level-Input-Output-File" class="headerlink" title="fopen() | Low Level Input Output File"></a>fopen() | Low Level Input Output File</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/fopen.html?s_tid=doc_ta">Docs</a></p>
<p>Output: use function <code>fprintf</code>; use <code>feof</code> to determine whether reach the end of the file.</p>
<p>Input: use function <code>fscanf</code>, <code>fgetl</code> or <code>fgets</code>.</p>
<h3 id="readmatrix-Read-Matrix-from-File"><a href="#readmatrix-Read-Matrix-from-File" class="headerlink" title="readmatrix() | Read Matrix from File"></a>readmatrix() | Read Matrix from File</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/readmatrix.html?s_tid=doc_ta">Docs</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">type</span> basic_matrix.txt</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">1</span></span><br><span class="line"><span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">3</span></span><br><span class="line"><span class="number">1</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">10</span></span><br><span class="line"><span class="number">4</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">2</span></span><br><span class="line"><span class="number">2</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">9</span></span><br><span class="line"></span><br><span class="line">M = readmatrix(<span class="string">&#x27;basic_matrix.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">M = <span class="number">5</span>×<span class="number">4</span></span><br><span class="line"></span><br><span class="line">     <span class="number">6</span>     <span class="number">8</span>     <span class="number">3</span>     <span class="number">1</span></span><br><span class="line">     <span class="number">5</span>     <span class="number">4</span>     <span class="number">7</span>     <span class="number">3</span></span><br><span class="line">     <span class="number">1</span>     <span class="number">6</span>     <span class="number">7</span>    <span class="number">10</span></span><br><span class="line">     <span class="number">4</span>     <span class="number">2</span>     <span class="number">8</span>     <span class="number">2</span></span><br><span class="line">     <span class="number">2</span>     <span class="number">7</span>     <span class="number">5</span>     <span class="number">9</span></span><br></pre></td></tr></table></figure>
<h3 id="importdata-Import-Data-from-File"><a href="#importdata-Import-Data-from-File" class="headerlink" title="importdata() | Import Data from File"></a>importdata() | Import Data from File</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/importdata.html?s_tid=doc_ta">Docs</a></p>
<p>This function can intelligently load the file based on the extension name.</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = importdata(<span class="string">&#x27;ngc6543a.jpg&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="reverse-Reverse-String"><a href="#reverse-Reverse-String" class="headerlink" title="reverse() | Reverse String"></a>reverse() | Reverse String</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">reverse(<span class="string">&#x27;123&#x27;</span>)=<span class="string">&#x27;321&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="flip-Flip-Array"><a href="#flip-Flip-Array" class="headerlink" title="flip() | Flip Array"></a>flip() | Flip Array</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">flip([<span class="number">1</span> <span class="number">2</span>;<span class="number">3</span> <span class="number">4</span>])=[<span class="number">3</span> <span class="number">4</span>;<span class="number">1</span> <span class="number">2</span>]</span><br></pre></td></tr></table></figure>
<h3 id="fprintf-Formatted-Output"><a href="#fprintf-Formatted-Output" class="headerlink" title="fprintf() | Formatted Output"></a>fprintf() | Formatted Output</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/fprintf.html?s_tid=doc_ta">Docs</a>  </p>
<p>Use <code>%%</code> to print <code>%</code></p>
<p>This function can also output to file.</p>
<h3 id="sort-Sort"><a href="#sort-Sort" class="headerlink" title="sort() | Sort"></a>sort() | Sort</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/sort.html?searchHighlight=sort&amp;s_tid=srchtitle_sort_1">Docs</a></p>
<p>By default, <code>sort</code> sorts the array from small to large.</p>
<p>Use <code>sort(A,&#39;descend&#39;)</code> to sort the array from large to small.</p>
<h3 id="numel-A-Get-Row-Col-of-A"><a href="#numel-A-Get-Row-Col-of-A" class="headerlink" title="numel(A) | Get Row*Col of A"></a>numel(A) | Get Row*Col of A</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/double.numel.html">Docs</a></p>
<h3 id="subplot-n-m-p-Plot-Several-Image-Together"><a href="#subplot-n-m-p-Plot-Several-Image-Together" class="headerlink" title="subplot(n,m,p) | Plot Several Image Together"></a>subplot(n,m,p) | Plot Several Image Together</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/subplot.html?s_tid=doc_ta">Docs</a></p>
<h3 id="reshape-A-sz1-sz2-…-szN-Reshape-Array"><a href="#reshape-A-sz1-sz2-…-szN-Reshape-Array" class="headerlink" title="reshape(A, sz1, sz2 … szN) | Reshape Array"></a>reshape(A, sz1, sz2 … szN) | Reshape Array</h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/reshape.html?searchHighlight=reshape&amp;s_tid=srchtitle_reshape_1">Docs</a></p>
<h3 id="fit-x-y-fitType-Fit-Curve-or-Surface-to-Data"><a href="#fit-x-y-fitType-Fit-Curve-or-Surface-to-Data" class="headerlink" title="fit(x,y,fitType) | Fit Curve or Surface to Data"></a>fit(x,y,fitType) | Fit Curve or Surface to Data</h3><p><a href="https://ww2.mathworks.cn/help/curvefit/fit.html?s_tid=doc_ta">Docs on fit()</a></p>
<p><a href="https://ww2.mathworks.cn/help/curvefit/cfit.coeffvalues.html?searchHighlight=coefficientvalues&amp;s_tid=srchtitle_coefficientvalues_1">Docs on coeffvalues()</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">1</span>;<span class="number">2</span>;<span class="number">3</span>];</span><br><span class="line">y=[<span class="number">1.09</span>;<span class="number">2.2</span>;<span class="number">3.3</span>];</span><br><span class="line">sf=fit(x,y,<span class="string">&#x27;poly1&#x27;</span>);</span><br><span class="line"><span class="built_in">disp</span>(sf);</span><br><span class="line"><span class="built_in">disp</span>(coeffvalues(sf));</span><br></pre></td></tr></table></figure>
<p>Output:</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"> Linear model Poly1:</span><br><span class="line"> sf(x) = p1*x + p2</span><br><span class="line"> Coefficients (with <span class="number">95</span><span class="comment">% confidence bounds):</span></span><br><span class="line">   p1 =       <span class="number">1.105</span>  (<span class="number">1.068</span>, <span class="number">1.142</span>)</span><br><span class="line">   p2 =    <span class="number">-0.01333</span>  (<span class="number">-0.09257</span>, <span class="number">0.0659</span>)</span><br><span class="line"><span class="number">1.1050</span>   <span class="number">-0.0133</span></span><br></pre></td></tr></table></figure>
<h3 id="isequal-A1-A2-A3-…-An-Determine-Array-Equality"><a href="#isequal-A1-A2-A3-…-An-Determine-Array-Equality" class="headerlink" title="isequal(A1,A2,A3,…,An) | Determine Array Equality"></a>isequal(A1,A2,A3,…,An) | Determine Array Equality</h3><p>Simple to understand.</p>
<p>To be noticed, <code>string</code> and <code>char</code> is also a type of array.</p>
<h3 id="isa-variable-char-Whether-a-Variable-is-a-Certain-Type"><a href="#isa-variable-char-Whether-a-Variable-is-a-Certain-Type" class="headerlink" title="isa(variable,char) | Whether a Variable is a Certain Type"></a>isa(variable,char) | Whether a Variable is a Certain Type</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; s=<span class="number">1234</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">        <span class="number">1234</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; isa(s,<span class="string">&#x27;double&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; isa(s,<span class="string">&#x27;string&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h3 id="class-variable-Get-Class-Type-of-a-Variable"><a href="#class-variable-Get-Class-Type-of-a-Variable" class="headerlink" title="class(variable) | Get Class/Type of a Variable"></a>class(variable) | Get Class/Type of a Variable</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; s=<span class="number">1234</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">        <span class="number">1234</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; class(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;double&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="prod-array-Product-of-an-Array"><a href="#prod-array-Product-of-an-Array" class="headerlink" title="prod(array) | Product of an Array"></a>prod(array) | Product of an Array</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; prod([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">24</span></span><br></pre></td></tr></table></figure>
<h3 id="primes-n-Primes"><a href="#primes-n-Primes" class="headerlink" title="primes(n) | Primes"></a>primes(n) | Primes</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">p = <span class="built_in">primes</span>(n) </span><br><span class="line"><span class="comment">%returns a row vector containing all the prime numbers less than or equal to n. The data type of p is the same as that of n.</span></span><br></pre></td></tr></table></figure>
<h3 id="strfind-str-substr-Locate-substr-in-str"><a href="#strfind-str-substr-Locate-substr-in-str" class="headerlink" title="strfind(str, substr) | Locate substr in str"></a>strfind(str, substr) | Locate substr in str</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; str = <span class="string">&#x27;Find the starting indices of substrings in a character vector&#x27;</span>;</span><br><span class="line">&gt;&gt; k = strfind(str,<span class="string">&#x27;in&#x27;</span>)</span><br><span class="line"></span><br><span class="line">k =</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>    <span class="number">15</span>    <span class="number">19</span>    <span class="number">36</span>    <span class="number">41</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="input-prompt-argument-Input"><a href="#input-prompt-argument-Input" class="headerlink" title="input(prompt, argument) | Input"></a>input(prompt, argument) | Input</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">someVariableName=input(prompt)</span><br><span class="line"><span class="comment">% where prompt is a string (can be empty) that pops up before user input</span></span><br><span class="line"><span class="comment">% If you want to input a string, use:</span></span><br><span class="line">someStringVariableName=input(<span class="string">&quot;&quot;</span>,<span class="string">&quot;s&quot;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="disp-array-Output"><a href="#disp-array-Output" class="headerlink" title="disp(array) | Output"></a>disp(array) | Output</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x=[<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"><span class="built_in">disp</span>(x)</span><br></pre></td></tr></table></figure>
<h3 id="amp-amp-Logic-Calculation"><a href="#amp-amp-Logic-Calculation" class="headerlink" title="~ || &amp;&amp; | Logic Calculation"></a>~ || &amp;&amp; | Logic Calculation</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; ~<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span> &amp;&amp; <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="number">1</span> || <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br></pre></td></tr></table></figure>
<h3 id="mod-n-m-fix-n-Take-the-Round-and-Mod"><a href="#mod-n-m-fix-n-Take-the-Round-and-Mod" class="headerlink" title="mod(n, m) fix(n) | Take the Round and Mod"></a>mod(n, m) fix(n) | Take the Round and Mod</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% mod</span></span><br><span class="line">&gt;&gt; <span class="built_in">mod</span>(<span class="number">5</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% fix: towards 0</span></span><br><span class="line">&gt;&gt; <span class="built_in">fix</span>(<span class="number">1.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">fix</span>(<span class="number">-1.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">-1</span></span><br></pre></td></tr></table></figure>
<h3 id="length-array-strlength-string-The-Length-of-an-Array-and-a-String"><a href="#length-array-strlength-string-The-Length-of-an-Array-and-a-String" class="headerlink" title="length(array) strlength(string) | The Length of an Array and a String"></a>length(array) strlength(string) | The Length of an Array and a String</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; x=[<span class="number">3</span>;<span class="number">2</span>;<span class="number">6</span>;<span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">x =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">     <span class="number">2</span></span><br><span class="line">     <span class="number">6</span></span><br><span class="line">     <span class="number">8</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">length</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; s=<span class="string">&quot;This is a string&quot;</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;This is a string&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Also, I find length() can do the job as well</span></span><br><span class="line">&gt;&gt; strlength(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% Use &#x27;&#x27; to wrap things that is not logically a string.</span></span><br><span class="line">&gt;&gt; s=<span class="string">&#x27;GCTA&#x27;</span> <span class="comment">% a DNA sequence</span></span><br><span class="line"></span><br><span class="line">s =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GCTA&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="min-max-bounds-array-Get-Min-and-Max-in-an-Array"><a href="#min-max-bounds-array-Get-Min-and-Max-in-an-Array" class="headerlink" title="[min, max]=bounds(array) | Get Min and Max in an Array"></a>[min, max]=bounds(array) | Get Min and Max in an Array</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; A</span><br><span class="line"></span><br><span class="line">A =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">3</span>     <span class="number">5</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; [minA,maxA]=bounds(A)</span><br><span class="line"></span><br><span class="line">minA =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">maxA =</span><br><span class="line"></span><br><span class="line">     <span class="number">5</span></span><br></pre></td></tr></table></figure>
<h3 id="clc-Clear-Screen"><a href="#clc-Clear-Screen" class="headerlink" title="clc | Clear Screen"></a>clc | Clear Screen</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; clc</span><br></pre></td></tr></table></figure>
<h3 id="randi-Get-Random-Int"><a href="#randi-Get-Random-Int" class="headerlink" title="randi() | Get Random Int"></a>randi() | Get Random Int</h3><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/ref/randi.html?searchHighlight=randi&amp;s_tid=srchtitle_randi_1">randi()</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">&gt;&gt; randi([<span class="number">1</span>,<span class="number">3</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; randi([<span class="number">1</span>,<span class="number">10</span>],<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">     <span class="number">6</span>     <span class="number">2</span>     <span class="number">7</span>     <span class="number">3</span>     <span class="number">7</span></span><br></pre></td></tr></table></figure>
<h2 id="Plot-Related"><a href="#Plot-Related" class="headerlink" title="Plot Related"></a>Plot Related</h2><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/learn_matlab/plots.html">2-D and 3-D Plots</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br><span class="line">xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">ylabel(<span class="string">&quot;sin(x)&quot;</span>)</span><br><span class="line">title(<span class="string">&quot;Plot of the Sine Function&quot;</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&quot;r--&quot;</span>) <span class="comment">% plot using red dashed line</span></span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&quot;r:o&quot;</span>)</span><br><span class="line"><span class="built_in">plot</span>(x,y,<span class="string">&quot;b:*&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>Notice that the titles and labels that you defined for the first plot are no longer in the current figure window. By default, MATLAB clears the figure each time you call a plotting function, resetting the axes and other elements to prepare the new plot.</p>
<p>To add plots to an existing figure, use <code>hold on</code>. Until you use <code>hold off</code> or close the window, all plots appear in the current figure window.</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="built_in">linspace</span>(<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">pi</span>);</span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x,y)</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> on</span><br><span class="line"></span><br><span class="line">y2 = <span class="built_in">cos</span>(x);</span><br><span class="line"><span class="built_in">plot</span>(x,y2,<span class="string">&quot;:&quot;</span>)</span><br><span class="line"><span class="built_in">legend</span>(<span class="string">&quot;sin&quot;</span>,<span class="string">&quot;cos&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">hold</span> off</span><br></pre></td></tr></table></figure>
<h2 id="Scripts-Related"><a href="#Scripts-Related" class="headerlink" title="Scripts Related"></a>Scripts Related</h2><p>Docs: <a href="https://ww2.mathworks.cn/help/matlab/learn_matlab/scripts.html">Programming and Scripts</a></p>
<h3 id="struct-Similar-to-struct-in-C"><a href="#struct-Similar-to-struct-in-C" class="headerlink" title="struct | Similar to struct in C"></a>struct | Similar to <code>struct</code> in <code>C</code></h3><p><a href="https://ww2.mathworks.cn/help/matlab/ref/struct.html?s_tid=doc_ta">Docs</a></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">s.a = <span class="number">1</span>;</span><br><span class="line">s.b = &#123;<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">s = struct(<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;Bob&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h3 id="Write-Custom-Functions"><a href="#Write-Custom-Functions" class="headerlink" title="Write Custom Functions"></a>Write Custom Functions</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% y are outputs and x are input</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[y1,...,yN]</span> = <span class="title">myfun</span><span class="params">(x1,...,xM)</span></span></span><br><span class="line">    <span class="comment">% here scripts</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h3 id="loop-if"><a href="#loop-if" class="headerlink" title="loop, if"></a>loop, if</h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">N = <span class="number">100</span>;</span><br><span class="line">f(<span class="number">1</span>) = <span class="number">1</span>;</span><br><span class="line">f(<span class="number">2</span>) = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">3</span>:N   <span class="comment">% for loop</span></span><br><span class="line">    f(<span class="built_in">i</span>) = f(<span class="built_in">i</span> - <span class="number">1</span>) + f(<span class="built_in">i</span> - <span class="number">2</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">f(<span class="number">1</span>:<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">-0.3</span>:<span class="number">0</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="built_in">i</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">     <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.7000</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.4000</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% if elseif and else</span></span><br><span class="line">num=randi(<span class="number">100</span>)</span><br><span class="line"><span class="keyword">if</span> num&lt;<span class="number">34</span></span><br><span class="line">  sz=<span class="string">&#x27;low&#x27;</span></span><br><span class="line"><span class="keyword">elseif</span> num&lt;<span class="number">67</span></span><br><span class="line">  sz=<span class="string">&#x27;medium&#x27;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  sz=<span class="string">&#x27;high&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="comment">% remember to add &#x27;end&#x27; at the end of if!!!!</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">10</span>;</span><br><span class="line">f = n;</span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">1</span>  <span class="comment">% while loop</span></span><br><span class="line">    n = n<span class="number">-1</span>;</span><br><span class="line">    f = f*n;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;n! = &#x27;</span> num2str(f)])</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Matlab</tag>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Using Notes</title>
    <url>/2022/05/10/Linux-Using-Notes/</url>
    <content><![CDATA[<h2 id="useradd-Add-User"><a href="#useradd-Add-User" class="headerlink" title="useradd | Add User"></a>useradd | Add User</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo useradd -m whateverNameYouLike</span><br></pre></td></tr></table></figure>
<h2 id="tzselect-Set-Timezone"><a href="#tzselect-Set-Timezone" class="headerlink" title="tzselect | Set Timezone"></a>tzselect | Set Timezone</h2><p>A simple, user-friendly timezone settings guider.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tzselect</span><br></pre></td></tr></table></figure>
<p>Remember to add a line in <code>~/.profile</code> according to instructions given by <code>tzselect</code>.</p>
<h2 id="clean-Clear-Terminal-Screen"><a href="#clean-Clear-Terminal-Screen" class="headerlink" title="clean | Clear Terminal Screen"></a>clean | Clear Terminal Screen</h2><p>A simple command to clear the terminal screen.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clear</span><br></pre></td></tr></table></figure>
<h2 id="screen-A-Terminal-Multiplexer"><a href="#screen-A-Terminal-Multiplexer" class="headerlink" title="screen | A Terminal Multiplexer"></a>screen | A Terminal Multiplexer</h2><h3 id="What-does-it-do"><a href="#What-does-it-do" class="headerlink" title="What does it do?"></a>What does it do?</h3><p>There are several cases you want to use screen to manage your terminals.</p>
<ul>
<li>You are connecting to your Linux machine using ssh, but the job is time-consuming. You don’t want to keep the ssh window open, but killing it will also kill the process.</li>
<li>You are using Linux desktop. You want to hide a terminal when you not need it and resume to the status right before you hide it.</li>
</ul>
<p>screen does the job perfectly. It serve as a layer between the terminal users see and the actual processes.</p>
<h3 id="How-to-Use-it"><a href="#How-to-Use-it" class="headerlink" title="How to Use it"></a>How to Use it</h3><p>To create a new screen:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S whateverNameYouLike</span><br></pre></td></tr></table></figure>
<p>To list all screens:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -<span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<p>To reattach to a screen:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r theNameOfTheScreen (and <span class="keyword">then</span> hit tab to complete it)</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -r theIdOfTheScreen (and <span class="keyword">then</span> hit tab to complete it)</span><br></pre></td></tr></table></figure>
<p>To end a screen:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S screenIdYouWantToKill -X quit</span><br></pre></td></tr></table></figure>
<p>If you are in a screen, you can do the following operations:</p>
<p>I will use <code>@</code> to refer to <code>Ctrl+A</code></p>
<p>To detach the screen: press <code>@+D</code>.</p>
<p>To create a window in a screen: press <code>@+C</code>.</p>
<p>To navigate to the previous/next window in a screen: press <code>@+P/N</code></p>
<p>To list all windows in a screen: press <code>@+W</code>.</p>
]]></content>
      <tags>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Python Learning Notes</title>
    <url>/2022/05/03/Python-Learning-Notes/</url>
    <content><![CDATA[<h2 id="Secure-Hashes-and-Message-Digests"><a href="#Secure-Hashes-and-Message-Digests" class="headerlink" title="Secure Hashes and Message Digests"></a>Secure Hashes and Message Digests</h2><p>Docs: <a href="https://docs.python.org/3/library/hashlib.html">hashlib</a></p>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown to HTML Convertor</title>
    <url>/2022/08/06/Markdown-to-HTML-Convertor/</url>
    <content><![CDATA[<p><a href="https://github.com/zijunhz/markdown2html">Github Repo</a></p>
<h2 id="Currently-supports"><a href="#Currently-supports" class="headerlink" title="Currently supports"></a>Currently supports</h2><p><code>#</code>, <code>##</code>, … -&gt; <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, …</p>
<p><code>---</code> -&gt; <code>&lt;hr&gt;</code></p>
<p>Unordered/ordered list</p>
<p><code>![]()</code>, <code>&lt;img&gt;</code> -&gt; <code>&lt;img&gt;</code></p>
<p><code>[]()</code> -&gt; <code>&lt;a&gt;</code></p>
<p>Plain text</p>
<p>Code blocks (<code>``` ``` </code>)</p>
<p>Inline code blocks (<code>`` </code>)</p>
<h2 id="How-to-compile"><a href="#How-to-compile" class="headerlink" title="How to compile"></a>How to compile</h2><p>The project uses <code>CMake</code> as building tool.</p>
<h2 id="How-to-use-in-Windows"><a href="#How-to-use-in-Windows" class="headerlink" title="How to use (in Windows)"></a>How to use (in Windows)</h2><ol>
<li>Download and unzip <code>markdown2html-x.x.x.zip</code> from <a href="https://github.com/zijunhz/markdown2html/releases/latest">this page</a>.</li>
<li>Open <code>markdown2html.exe</code> and follow the instruction:</li>
<li>Input Markdown file path: you need to enter the path to your markdown file. This path can be absolute or be relative to the path where the <code>.exe</code> locates. <strong><em>It is recommended to copy the markdown file into the folder where the exe is located so that you only need to type in the file name of the markdown file.</em></strong></li>
<li>Input output file path: this is the same as 3, but it specifies where you wish the output file is.</li>
<li>Choose theme: enter a number.</li>
</ol>
<h2 id="Fun-fact"><a href="#Fun-fact" class="headerlink" title="Fun fact"></a>Fun fact</h2><p><a href="https://zpatronus.top">My website</a> is generated by this program.</p>
<p><img src="https://media.githubusercontent.com/media/zijunhz/markdown2html/main/docs/Screenshot%202022-08-09%20030738.png" alt="effect"></p>
<h2 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h2><p>Themes are now supported.</p>
<p>There are a total of 7 themes.</p>
<ul>
<li>default</li>
<li>githubDark</li>
<li>githubLight</li>
<li>dark</li>
<li>light</li>
<li>darkCompact</li>
<li>lightCompact</li>
</ul>
]]></content>
      <tags>
        <tag>Project</tag>
        <tag>C &amp; C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Tech Life Hacks</title>
    <url>/2022/05/10/Tech-Life-Hacks/</url>
    <content><![CDATA[<h2 id="Port-Forwarding-Using-SSH"><a href="#Port-Forwarding-Using-SSH" class="headerlink" title="Port Forwarding Using SSH"></a>Port Forwarding Using SSH</h2><p>Sometimes we are faced with the following situation:</p>
<pre class="mermaid">
graph LR
  A(Computer A)-->|SSH|B(Server A 192.168.1.3)
  B-->|has access via 192.168.1.2:80|C(Server B 192.168.1.2)
  A-->|does not have access|C</pre>

<p><code>Computer A</code> is the computer that we can operate on, and through SSH, we can access <code>Server A</code>. <code>Server A</code> has access to <code>Server B</code> by a GUI web server running on <code>Server B</code> ‘s port 80. Theoretically we can have access to <code>Server B</code>, but since SSH does not a GUI, its’s difficult to do so.</p>
<p>The ideal way of tacking this situation is somehow forwarding the 80 port on <code>Server B</code> to a port on our local computer. By doing so, we can have access to <code>Server B</code> by visiting the URL in our browser as if we are operating <code>Server A</code>.</p>
<p>SSH provides a function called <code>port forwarding</code> to do the exact job.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -L 3311:192.168.1.2:80 user@192.168.1.3</span><br></pre></td></tr></table></figure>
<p>This command forward the port at <code>192.168.1.2:80</code> to <code>localhost:3311</code>.</p>
<h2 id="Life-Saver-When-Fixing-Someone’s-Internet"><a href="#Life-Saver-When-Fixing-Someone’s-Internet" class="headerlink" title="Life Saver When Fixing Someone’s Internet"></a>Life Saver When Fixing Someone’s Internet</h2><h3 id="How-to-get-MAC-address"><a href="#How-to-get-MAC-address" class="headerlink" title="How to get MAC address?"></a>How to get MAC address?</h3><p>Method 1. On Windows, open terminal and type in <code>getmac -V</code></p>
<p>Method 2. On Windows, open terminal and type in <code>ipconfig -all</code>, this command can also give out the DNS server being used.</p>
<p>Method 3. On Windows11 <strong>only</strong>, right click the network button on the button right corner and select <code>Network and Internet settings</code>, then click the network adapter you want to check MAC address for and it will show all the information.</p>
<h2 id="Deal-with-Windows11-Start-Menu-Search-Not-Working"><a href="#Deal-with-Windows11-Start-Menu-Search-Not-Working" class="headerlink" title="Deal with Windows11 Start Menu Search Not Working"></a>Deal with Windows11 Start Menu Search Not Working</h2><p>Use <code>Task Manager</code> to restart <code>Windows Explorer</code>.</p>
<h2 id="PowerToys-Powerful-Windows-Toolbox"><a href="#PowerToys-Powerful-Windows-Toolbox" class="headerlink" title="PowerToys | Powerful Windows Toolbox"></a>PowerToys | Powerful Windows Toolbox</h2><p>Find it in Microsoft Store.</p>
<h2 id="Win-Number-Open-Taskbar-Apps"><a href="#Win-Number-Open-Taskbar-Apps" class="headerlink" title="Win + Number | Open Taskbar Apps"></a>Win + Number | Open Taskbar Apps</h2><p>e.g. <code>Win+1</code></p>
<h2 id="Ctrl-D-Detach-from-Something"><a href="#Ctrl-D-Detach-from-Something" class="headerlink" title="Ctrl+D | Detach from Something"></a>Ctrl+D | Detach from Something</h2><p>Using this shortcut keys, users can detach from various things. Such as:</p>
<ul>
<li><code>ssh</code> connection, basically replacing the command <code>exit</code></li>
<li><code>screen</code> in linux. Though <code>Ctrl+D</code> is not enough, you should use <code>Ctrl+A+D</code></li>
</ul>
<h2 id="Oh-My-Posh-A-Theme-Engine-for-Any-Shell"><a href="#Oh-My-Posh-A-Theme-Engine-for-Any-Shell" class="headerlink" title="Oh My Posh | A Theme Engine for Any Shell"></a>Oh My Posh | A Theme Engine for Any Shell</h2><p><a href="https://ohmyposh.dev/docs">Docs</a></p>
<p>Jump to the <code>Installation</code> part and do according to the docs based on your OS.</p>
<p>Then, read the <code>Prompt</code> part and setup the terminal profile.</p>
<p>Restart the terminal and you should be ready to enjoy the beautiful terminal.</p>
<p>Personally, I use theme <code>atomic</code> on my Windows machine and <code>thecyberden</code> on my linux servers.</p>
<p>Also, Nerd Fonts are recommended. Check out <a href="https://www.nerdfonts.com/font-downloads">this site</a> to install them.</p>
<p>Personally, I use <code>FuraCode Nerd Font Retina</code> in any editor and <code>FiraCode Nerd Font Retina</code> in any terminal. This is because <code>FuraCode</code> is thinner than <code>FiraCode</code> and thus can make the code looks compact while <code>FiraCode</code> has better Nerd Pattern display.</p>
<h2 id="Transfer-SSH-keys-to-a-New-Computer-Windows"><a href="#Transfer-SSH-keys-to-a-New-Computer-Windows" class="headerlink" title="Transfer SSH keys to a New Computer (Windows)"></a>Transfer SSH keys to a New Computer (Windows)</h2><p>If you purchased a new computer and still want to use the ssh keys on the old computer to log in to your server. Just copy the <code>.ssh</code> folder under <code>C:\User\yourUserName</code> in the old computer to the exact path in the new computer. Simple.</p>
]]></content>
      <tags>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Trajectory with Air Drag</title>
    <url>/2022/08/07/Trajectory-with-Air-Drag/</url>
    <content><![CDATA[<p>Codes and results are at its <a href="https://github.com/zijunhz/trajectory-with-air-drag">Github Repo</a></p>
]]></content>
      <tags>
        <tag>Project</tag>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>VSCode Using Notes</title>
    <url>/2022/04/28/VSCode-Using-Notes/</url>
    <content><![CDATA[<h2 id="How-to-add-“Program-Files”-in-VS-Code-settings"><a href="#How-to-add-“Program-Files”-in-VS-Code-settings" class="headerlink" title="How to add “Program Files” in VS Code settings"></a>How to add “Program Files” in VS Code settings</h2><p>Use <code>&quot;C:\Program Files\...&quot;</code> or <code>C:\&quot;Program Files&quot;\...</code></p>
<h2 id="How-to-write-MATLAB-scripts-in-VSCode"><a href="#How-to-write-MATLAB-scripts-in-VSCode" class="headerlink" title="How to write MATLAB scripts in VSCode"></a>How to write MATLAB scripts in VSCode</h2><p>However, I find it not a good idea. The terminal crashes from time to time and <code>Workspace</code> in MATLAB cannot be integrated into vscode.</p>
<p>The main reason I want to use vscode to write MATLAB scripts is darkmode and suggestions. By changing the color profile and enabling autocompletion in MATLAB preferences, I can get a similar result.</p>
<h3 id="Install-Extensions"><a href="#Install-Extensions" class="headerlink" title="Install Extensions"></a>Install Extensions</h3><figure class="highlight py"><table><tr><td class="code"><pre><span class="line">Matlab <span class="comment"># highlighting, suggestions, error messages</span></span><br><span class="line"><span class="comment"># You need to set matlab path and mlint path in the extension settings page.</span></span><br><span class="line"></span><br><span class="line">matlab-formatter <span class="comment"># format things</span></span><br><span class="line"><span class="comment"># You need to set Python path in the extension settings page. </span></span><br><span class="line"></span><br><span class="line">Matlab Interactive Terminal <span class="comment"># use vscode terminal instead of matlab IDE</span></span><br><span class="line"><span class="comment"># You need to set Python path in the extension settings page.</span></span><br><span class="line"><span class="comment"># If you enable this extension, do not enable another extension &#x27;matlab-code-run&#x27;</span></span><br><span class="line"></span><br><span class="line">Matlab Snippets <span class="comment"># more advanced suggestions </span></span><br><span class="line"></span><br><span class="line">Matlab Code Run <span class="comment"># run matlab using ctrl+shift+p and choose &#x27;run current matlab script or open a matlab terminal&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="Install-MATLAB-API-for-Python"><a href="#Install-MATLAB-API-for-Python" class="headerlink" title="Install MATLAB API for Python"></a>Install MATLAB API for Python</h3><p>The extension <code>Matlab Interactive Terminal</code> is based on matlab api for python. Follow <a href="https://ww2.mathworks.cn/help/matlab/matlab_external/install-the-matlab-engine-for-python.html">this doc</a> to install matlab api for python.</p>
<p>In Windows, <code>cd matlabRootPath\extern\engines\python</code>, then <code>python setup.py install</code>.  </p>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Software Using</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue+Django CORS and CSRF</title>
    <url>/2022/04/27/Vue-Django-CORS-and-CSRF/</url>
    <content><![CDATA[<h2 id="Backend-Django-Part"><a href="#Backend-Django-Part" class="headerlink" title="Backend (Django) Part"></a>Backend (Django) Part</h2><p>Docs: <a href="https://pypi.org/project/django-cors-headers/">django-cors-headers</a>, <a href="https://docs.djangoproject.com/en/4.0/ref/settings/#csrf-cookie-secure">django core settings</a></p>
<p>According to <a href="https://pypi.org/project/django-cors-headers/">django-cors-headers</a>, use:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python -m pip install django-cors-headers</span><br></pre></td></tr></table></figure>
<p>to install <code>django-cors-headers</code> and add it to installed apps in <code>settings.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...,</span><br><span class="line">    <span class="string">&quot;corsheaders&quot;</span>,</span><br><span class="line">    ...,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>Add a middleware class to listen in on responses. The order of middlewares is <strong>important</strong>:</p>
<p><code>CorsMiddleware</code> should be placed as high as possible, especially before any middleware that can generate responses such as Django’s <code>CommonMiddleware</code> or Whitenoise’s <code>WhiteNoiseMiddleware</code>. If it is not before, it will not be able to add the CORS headers to these responses.</p>
<p>Also if you are using <code>CORS_REPLACE_HTTPS_REFERER</code> it should be placed before Django’s <code>CsrfViewMiddleware</code>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line">    ...,</span><br><span class="line">    <span class="string">&quot;corsheaders.middleware.CorsMiddleware&quot;</span>,</span><br><span class="line">    <span class="string">&quot;django.middleware.common.CommonMiddleware&quot;</span>,</span><br><span class="line">    ...,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>Assume frontend is functioning on <code>frontend.com</code>.</p>
<p>Add:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CORS_ALLOWED_ORIGINS = [</span><br><span class="line">    <span class="string">&quot;frontend.com&quot;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_METHODS = [</span><br><span class="line">    <span class="string">&quot;DELETE&quot;</span>,</span><br><span class="line">    <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="string">&quot;OPTIONS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PATCH&quot;</span>,</span><br><span class="line">    <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="string">&quot;PUT&quot;</span>,</span><br><span class="line">    <span class="comment">#enable whatever method needed</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CSRF_TRUSTED_ORIGINS = [</span><br><span class="line">    <span class="string">&quot;frontend.com&quot;</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">CSRF_COOKIE_SECURE = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">CSRF_COOKIE_SAMESITE = <span class="string">&#x27;None&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="Frontend-Vue-Part"><a href="#Frontend-Vue-Part" class="headerlink" title="Frontend (Vue) Part"></a>Frontend (Vue) Part</h2><p>Docs: <a href="https://axios-http.com/docs/req_config">Axios Request Config</a></p>
<p>We need to get CSRF token contained in cookie from backend.</p>
<p>In <code>urls.py</code>:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_csrf_token</span>(<span class="params">request</span>):</span><br><span class="line">    csrf_token = get_token(request)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;token&#x27;</span>: csrf_token&#125;)</span><br><span class="line"></span><br><span class="line">urlpatterns=[</span><br><span class="line">    ...</span><br><span class="line">    path(<span class="string">&#x27;get_csrf_token/&#x27;</span>, get_csrf_token),</span><br><span class="line">    ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>Assume the backend is functioning on <code>backend.com</code>. In <code>whateverName.vue</code>, add:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//django use cookies to varify csrf</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueCookies</span> <span class="keyword">from</span> <span class="string">&#x27;vue-cookies&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueCookies</span>)</span><br><span class="line"><span class="comment">//`withCredentials` indicates whether or not cross-site Access-Control requests should be made using credentials</span></span><br><span class="line">axios.<span class="property">defaults</span>.<span class="property">withCredentials</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            <span class="attr">token</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">        <span class="comment">//get token function</span></span><br><span class="line">        <span class="title function_">gettoken</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">axios</span>(&#123;</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">                <span class="attr">url</span>: <span class="string">`http://backend.com/get_csrf_token/`</span>,</span><br><span class="line">                <span class="attr">withCredentials</span>: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">token</span> = res.<span class="property">data</span>.<span class="property">token</span></span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//POST</span></span><br><span class="line">        <span class="title function_">tryPOST</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="title function_">axios</span>(&#123;</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;X-CSRFToken&#x27;</span>: <span class="variable language_">this</span>.<span class="property">token</span>,</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">withCredentials</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">url</span>: <span class="string">`http://backend.com/whateverURL`</span>,</span><br><span class="line">                <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;data1&#x27;</span>: <span class="string">&#x27;data2&#x27;</span>,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">                .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">                &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mounted</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">//get token when page loads</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">gettoken</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Frontend</tag>
        <tag>Web Dev</tag>
        <tag>Django</tag>
        <tag>Vue</tag>
        <tag>Backend</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>Tank War Game with CLI</title>
    <url>/2022/08/03/Tank-War-Game-with-CLI/</url>
    <content><![CDATA[<p><a href="https://github.com/zijunhz/tank-war-game">Github Repo</a> The repo is temporarily set to private.</p>
<p>A simple tank war game with CLI that supports PVP, PVE and DEMO.</p>
<h2 id="Compile-the-program"><a href="#Compile-the-program" class="headerlink" title="Compile the program"></a>Compile the program</h2><p>To compile it, you need to install:</p>
<ul>
<li><code>g++</code>, a cpp compiler. Remember to add it to PATH if you are using Windows.</li>
<li><code>CMake</code>, a build process manager.</li>
<li><code>GNU Make</code>, a tool which controls the generation of executables and other non-source files of a program from the program’s source files.</li>
</ul>
<p>or you can use IDEs such as <code>CLion</code>.</p>
<h3 id="The-recommended-way"><a href="#The-recommended-way" class="headerlink" title="The recommended way"></a>The recommended way</h3><p>The recommended way of compiling it (also the way I compile it) is with the help of a plug-in in <code>VSCode</code> called <code>CMake Tools</code>.</p>
<p>If you open the project folder in <code>VSCode</code> and you have successfully install <code>g++</code>, <code>CMake</code> and <code>CMake Tools</code>, you can find a <code>build</code> button in the bottom bar. By clicking it, the executable will be compiled under <code>./build/tankwar.exe</code>.</p>
<h3 id="Other-ways"><a href="#Other-ways" class="headerlink" title="Other ways"></a>Other ways</h3><p>You may refer to <a href="https://cmake.org/cmake/help/latest/manual/cmake.1.html">docs for CMake command line</a> to checkout how to compile it with command line (it should be <code>cmake -b build</code>, <code>cd build</code> and <code>make</code>, I believe).</p>
<p>Or, you may refer to <a href="https://www.jetbrains.com/help/clion/quick-cmake-tutorial.html">docs for CMake in CLion</a> to checkout how to compile it in <code>CLion</code>.</p>
<h2 id="Run-the-program"><a href="#Run-the-program" class="headerlink" title="Run the program"></a>Run the program</h2><p>This is a command line game so you can run it in terminal.</p>
<p>I’ll take how it can be run in <code>Linux Mint</code> as an example.</p>
<p>After generate the executable <code>tankwar</code>, type <code>./tankwar</code> in the terminal to enter the default mode which is PVP and has the default life of 5 and default log file <code>tankwar.log</code>.</p>
<p>You can type <code>./tankwar -h</code> to check the help page of the game and learn how to have access to other mode and how to change the life and log file.</p>
<p>The game-play instruction is built into the game itself and you can see it during the game.</p>
<p>The game’s interface has colored texts so you need to run it in a supported terminal. In Windows, for example, you need to run it in <code>Windows Terminal</code> or the terminal in <code>VSCode</code>.</p>
<h2 id="Layer-of-the-program"><a href="#Layer-of-the-program" class="headerlink" title="Layer of the program"></a>Layer of the program</h2><p>The program consists of 5 layers listed from low level to high level:</p>
<ul>
<li><code>Object</code> layer. It includes every player, bullet and the whole game. It is responsible for some basic tasks like moving a tank or a bullet or judge collision. This part of the program is primarily in <code>gameProcess.cpp</code>.</li>
<li><code>Game processing</code> layer. It includes the logic of the game. By utilizing the <code>object</code> layer, it is responsible for how the game goes on, such as processing one turn and printing the result. This part of the program is primarily in <code>gameProcess.cpp</code>.</li>
<li><code>Input</code> layer. The <code>game processing</code> layer needs input actions to process one turn, and to the <code>game processing</code> layer, human input and AI input are of no difference. The <code>input</code> layer gathers input actions from human and/or AI based on game mode and passes the information to the <code>game processing</code> layer. This part of the program is primarily in <code>gameControl.cpp</code>.</li>
<li><code>AI</code> layer. This layer takes in a game status and returns the best action for a particular player. This part of the program is primarily in <code>tankai.cpp</code>.</li>
<li><code>Global control</code> layer. This layer handles the command line arguments and organizes the whole program. This part of the program is primarily in <code>gameControl.cpp</code> and <code>tankwar.cpp</code>.</li>
</ul>
<h2 id="Objects"><a href="#Objects" class="headerlink" title="Objects"></a>Objects</h2><p>Three objects are defined in the game’s program.</p>
<h3 id="Bullet"><a href="#Bullet" class="headerlink" title="Bullet"></a><code>Bullet</code></h3><p>It contains all the information of one bullet, including its coordinates and direction.</p>
<p>The method <code>init</code> is used to initialize a bullet.</p>
<p>You can find its declaration in <code>gameProcess.h</code>.</p>
<h3 id="Player"><a href="#Player" class="headerlink" title="Player"></a><code>Player</code></h3><p>It contains all the information of one player, including its coordinates, direction and life.</p>
<p>The method:</p>
<p><code>turn</code> is used to turn the player in place;</p>
<p><code>move</code> is used to move the player straight forward;</p>
<p><code>init</code> is used to initialize the playher.</p>
<p>You can find its declaration in <code>gameProcess.h</code>.</p>
<h3 id="Game"><a href="#Game" class="headerlink" title="Game"></a><code>Game</code></h3><p>It contains all the information of a game status, including two players and all the bullets.</p>
<p>The number of methods of this class is too large, but you can check out comments in <code>gameProcess.h</code> to see what each method do.</p>
<p>You can find the declaration of <code>Game</code> in <code>gameProcess.h</code>.</p>
<h2 id="I-O-format"><a href="#I-O-format" class="headerlink" title="I/O format"></a>I/O format</h2><p>The I/O format of this tank war game has three features to improve user experience.</p>
<p><img src="https://s1.ax1x.com/2022/08/06/vnL8YT.png" alt="Screen shot of the game"></p>
<ol>
<li>The map is colored. Players are painted with red and cyan and the boundary is painted yellow. This greatly reduces the difficulty of recognizing the location of the tanks and the boundary.</li>
<li>The directions of the bullets and tanks are presented by arrows. This is also a great improvement in user experience because now the directions are clearly shown.</li>
<li>All kinds of inputs in the game (except command line argument) are considered, i.e. if the input is not valid, the program won’t crash. Instead, it will provide you with a notification and let you input again. I am fully aware the pain when you are about to win but crash the game just because you accidentally type <code>-</code> instead of <code>0</code>.</li>
</ol>
<h2 id="AI"><a href="#AI" class="headerlink" title="AI"></a>AI</h2><p>The strategy of the AI is quite conservative for it assume its opponent is cleaver enough.</p>
<p>Every turn, AI can take one action and so does its opponent. The AI will take the action that the minimal <code>scores</code> when its opponent takes one action is the highest.</p>
<p><code>score</code> is measured by a quite complex algorithm involving searching tree. It evaluates whether an action will lead to the end of the game, cause damage and result in a either good or bad situation.</p>
<p>Also, it’s often boring to see two tanks with the same life collide with each other resulting in a draw. So I also add some deduction in score for this kind of behavior. But the AI won’t stay away from its component because of another evaluation standard that rewards aggressive behavior.</p>
<p>The overall result that I can never win it shows that the AI is quite powerful.</p>
]]></content>
      <tags>
        <tag>Fun Stuff</tag>
        <tag>Project</tag>
        <tag>C &amp; C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue Learning Notes</title>
    <url>/2022/04/27/Vue-Learning-Notes/</url>
    <content><![CDATA[<h2 id="Style-Related"><a href="#Style-Related" class="headerlink" title="Style Related"></a>Style Related</h2><h3 id="Add-Style-to-the-Chosen-Router-Link"><a href="#Add-Style-to-the-Chosen-Router-Link" class="headerlink" title="Add Style to the Chosen Router Link"></a>Add Style to the Chosen Router Link</h3><p>The chosen router link has a class <code>.router-link-exact-active</code></p>
<h2 id="Vue-Router-Related"><a href="#Vue-Router-Related" class="headerlink" title="Vue Router Related"></a>Vue Router Related</h2><h3 id="Navigation-Guard"><a href="#Navigation-Guard" class="headerlink" title="Navigation Guard"></a>Navigation Guard</h3><p>Docs: <a href="https://router.vuejs.org/guide/advanced/navigation-guards.html">Navigation Guards</a></p>
<p>As the name suggests, the navigation guards provided by Vue router are primarily used to guard navigations either by redirecting it or canceling it.</p>
<p>To put it in other words, navigation guards allows you to know the urls of the jump-out page and the jump-in page.</p>
<p>To get url of the jump-out page, in <code>whateverName.vue</code>, add:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            <span class="attr">lastURL</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">beforeRouteEnter</span>(<span class="params">to, <span class="keyword">from</span>, next</span>) &#123;</span><br><span class="line">    <span class="title function_">next</span>(<span class="function">(<span class="params">vw</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">from</span>)</span><br><span class="line">      vw.<span class="property">lastUrl</span> = <span class="keyword">from</span>.<span class="property">fullPath</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Back-to-previous-route"><a href="#Back-to-previous-route" class="headerlink" title="Back to previous route"></a>Back to previous route</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">back</span>()</span><br></pre></td></tr></table></figure>
<h2 id="Vuex-Related"><a href="#Vuex-Related" class="headerlink" title="Vuex Related"></a>Vuex Related</h2><h3 id="Get-Variables"><a href="#Get-Variables" class="headerlink" title="Get Variables"></a>Get Variables</h3><p>In <code>/store/index.js</code>, add:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">variableName</span>:<span class="string">&#x27;this is a global variable&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>In <code>view</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">computed</span>:&#123;</span><br><span class="line">        <span class="title function_">anyNameYourLike</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="property">state</span>.<span class="property">variableName</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Notes</tag>
        <tag>Frontend</tag>
        <tag>Web Dev</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vocabulary</title>
    <url>/2022/05/16/Vocabulary/</url>
    <content><![CDATA[<h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><p>antisymmetric matrix: $A^T=-A$</p>
<p>angular frequency: aka, angular velocity, radial frequency and circular frequency. Denoted as $\omega$</p>
<h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><p>buoyancy: 浮力。</p>
<h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><p>curvature: 曲率。</p>
<h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><p>directly proportional to: 成正比。</p>
<p>displacement: 位移。注意与distance（路程）区分。</p>
<p>distance: 路程。注意与displacement（位移）区分。</p>
<h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>elastic force: 弹力。</p>
<p>extrema: 极值</p>
<h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><p>inversely proportional to: 成反比。</p>
<h2 id="N"><a href="#N" class="headerlink" title="N"></a>N</h2><p>normal: 法向的。</p>
<h2 id="O"><a href="#O" class="headerlink" title="O"></a>O</h2><p>orthogonal matrix: 正交矩阵，$A^T=A^{-1}$</p>
<p>orthonormal: 标准正交，i.e. 正交，且模长为1.</p>
<h2 id="P"><a href="#P" class="headerlink" title="P"></a>P</h2><p>projection matrix: matrix $A$ s.t. $A^2=A$</p>
<h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2><p>radial: 径向的。</p>
<h2 id="S"><a href="#S" class="headerlink" title="S"></a>S</h2><p>speed: 速率。注意与velocity（速度）区分。</p>
<p>symmetric matrix: $A=A^T$</p>
<h2 id="T"><a href="#T" class="headerlink" title="T"></a>T</h2><p>tangential: 切向的。</p>
<p>transverse: 横向的。</p>
<h2 id="V"><a href="#V" class="headerlink" title="V"></a>V</h2><p>velocity: 速度。注意与speed（速率）区分。</p>
]]></content>
      <tags>
        <tag>Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Photoshop知识点整理</title>
    <url>/2019/06/16/Photoshop%E7%9F%A5%E8%AF%86%E7%82%B9%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<h1 id="各种图层"><a href="#各种图层" class="headerlink" title="各种图层"></a>各种图层</h1><p>以下图层默认“图层可见性”为真</p>
<h2 id="文字图层"><a href="#文字图层" class="headerlink" title="文字图层"></a>文字图层</h2><p>滤镜：×</p>
<p>图层样式：√</p>
<p>自由变换：√，可以调整字号、拉伸文字</p>
<p>更改不透明度：√</p>
<p>删除：唯一图层×；非唯一图层√</p>
<p>复制：√</p>
<p>移动：√</p>
<p>渐变/油漆桶：×</p>
<h2 id="背景锁图层"><a href="#背景锁图层" class="headerlink" title="背景锁图层"></a>背景锁图层</h2><p>!! 背景锁图层的“背景”二字为斜体</p>
<p>滤镜：√</p>
<p>图层样式：×</p>
<p>自由变换：×；存在选区√</p>
<p>更改不透明度：×</p>
<p>删除：唯一图层×；非唯一图层√</p>
<p>复制：√，且复制出的图层为不带锁常规图层</p>
<p>移动：×；存在选区√</p>
<h2 id="黑锁图层"><a href="#黑锁图层" class="headerlink" title="黑锁图层"></a>黑锁图层</h2><p>滤镜：×</p>
<p>图层样式：×</p>
<p>自由变换：×</p>
<p>更改不透明度：×</p>
<p>删除：×</p>
<p>复制：√，且复制出的图层为黑锁图层；存在选区则复制出常规图层</p>
<p>移动：×</p>
<h1 id="各种操作适用条件"><a href="#各种操作适用条件" class="headerlink" title="各种操作适用条件"></a>各种操作适用条件</h1><h2 id="滤镜"><a href="#滤镜" class="headerlink" title="滤镜"></a>滤镜</h2><p>没有黑锁</p>
<p>不是背景图层</p>
<p>图层可见</p>
<p>所选区域非空</p>
<h2 id="图层样式"><a href="#图层样式" class="headerlink" title="图层样式"></a>图层样式</h2><p>没有黑锁</p>
<p>不是背景图层</p>
<h2 id="自由变换"><a href="#自由变换" class="headerlink" title="自由变换"></a>自由变换</h2><p>没有黑锁</p>
<p>不是一整个背景图层</p>
<p>图层可见</p>
<h2 id="更改不透明度"><a href="#更改不透明度" class="headerlink" title="更改不透明度"></a>更改不透明度</h2><p>没有黑锁</p>
<p>不是背景图层</p>
<p>图层可见</p>
<h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>没有黑锁</p>
<p>不是唯一的图层</p>
<h2 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h2><p>不是背景图层</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="可能-导致图层增加的操作"><a href="#可能-导致图层增加的操作" class="headerlink" title="(可能)导致图层增加的操作"></a>(可能)导致图层增加的操作</h2><p>新建/复制图层</p>
<p>在非空图层上使用文字工具</p>
<h2 id="蒙版"><a href="#蒙版" class="headerlink" title="蒙版"></a>蒙版</h2><p>类似选区，意义在于保护被蒙住的部分</p>
<p>文字蒙版工具会在选中图层上创建一个选区</p>
<h2 id="链接图层"><a href="#链接图层" class="headerlink" title="链接图层"></a>链接图层</h2><p>两个图层同步移动、缩放</p>
]]></content>
      <tags>
        <tag>Others</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP1291 [SHOI2002]百事世界杯之旅</title>
    <url>/2018/11/02/luoguP1291%20%5BSHOI2002%5D%E7%99%BE%E4%BA%8B%E4%B8%96%E7%95%8C%E6%9D%AF%E4%B9%8B%E6%97%85/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1291">题目</a></p>
<hr>
<p>假设有n个不同名字</p>
<p>先抽一次，必定抽出一个新的——ans+1</p>
<p>再抽第二次，这时有(n-1)/n的概率能抽到新的，所以期望抽n/(n-1)次能抽到新的——ans+n/(n-1)</p>
<p>再抽第三次，这时有(n-2)/n的概率能抽到新的，所以期望抽n/(n-2)次能抽到新的——ans+n/(n-2)</p>
<p>……</p>
<p>以此类推，答案是1+n/(n-1)+n/(n-2)+n/(n-3)+…+n/1</p>
<p>答案也就是n(1+1/2+1/3+1/4+..1/n)</p>
<hr>
<p>另外这题的输出答案方式很清奇，要小心爆ll，要记得%%</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(ll a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(ll a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,a=<span class="number">0</span>,b=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(ll aa,ll bb)</span></span>&#123;</span><br><span class="line"> ll k=<span class="built_in">gcd</span>(b,bb),ansa,ansb;</span><br><span class="line"> ansb=b/k*bb;ansa=b/k*aa+bb/k*a;</span><br><span class="line"> k=<span class="built_in">gcd</span>(ansa,ansb);</span><br><span class="line"> a=ansa/k;b=ansb/k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">len</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line"> ll ans=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">while</span>(x&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  ans++;x/=<span class="number">10</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  ll aa=n,bb=i,k=<span class="built_in">gcd</span>(aa,bb);</span><br><span class="line">  aa/=k;bb/=k;</span><br><span class="line">  <span class="built_in">add</span>(aa,bb);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(a%b==<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a/b);</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  ll x=a/b;a-=x*b;ll lx=<span class="built_in">len</span>(x),lb=<span class="built_in">len</span>(b);</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">1</span>,lx)<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,a);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>,x);<span class="built_in">fsb</span>(i,<span class="number">1</span>,lb)<span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);<span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">1</span>,lx)<span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,b);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP1363 幻想迷宫</title>
    <url>/2018/10/30/luoguP1363-%E5%B9%BB%E6%83%B3%E8%BF%B7%E5%AE%AB/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1363">题目</a></p>
<hr>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1600</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 99999999</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> md(a,b) (((a)%b+b)%b)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> sx,sy,n,m,a[N][N],flag;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> <span class="type">int</span> x,y; </span><br><span class="line">&#125;vis[N][N];</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> xx,<span class="type">int</span> yy)</span></span>&#123;</span><br><span class="line"><span class="comment">// printf(&quot;%10d %d %d %d\n&quot;,x,y,xx,yy);</span></span><br><span class="line"> <span class="keyword">if</span>(vis[xx][yy].x&lt;INF)&#123;</span><br><span class="line">  <span class="keyword">if</span>(vis[xx][yy].x!=x||vis[xx][yy].y!=y)flag=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> vis[xx][yy]=(node)&#123;x,y&#125;;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">0</span>,<span class="number">3</span>)</span><br><span class="line">  <span class="keyword">if</span>(a[<span class="built_in">md</span>(x+dx[i],n)][<span class="built_in">md</span>(y+dy[i],m)]==<span class="number">1</span>)&#123;</span><br><span class="line">   <span class="built_in">dfs</span>(x+dx[i],y+dy[i],<span class="built_in">md</span>(x+dx[i],n),<span class="built_in">md</span>(y+dy[i],m));</span><br><span class="line">   <span class="keyword">if</span>(flag==<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m))&#123;</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">0</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">   <span class="built_in">fsb</span>(j,<span class="number">0</span>,m<span class="number">-1</span>)&#123;</span><br><span class="line">    a[i][j]=s[j]==<span class="string">&#x27;#&#x27;</span>?<span class="number">0</span>:<span class="number">1</span>; </span><br><span class="line">    <span class="keyword">if</span>(s[j]==<span class="string">&#x27;S&#x27;</span>)sx=i,sy=j;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//  fsb(i,1,n)&#123;</span></span><br><span class="line"><span class="comment">//   fsb(j,1,m)printf(&quot;%d&quot;,a[i][j]);puts(&quot;&quot;);</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line">  <span class="built_in">memset</span>(vis,<span class="number">127</span>,<span class="built_in">sizeof</span>(vis));flag=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">dfs</span>(sx,sy,sx,sy);</span><br><span class="line">  <span class="built_in">puts</span>(flag==<span class="number">1</span>?<span class="string">&quot;Yes&quot;</span>:<span class="string">&quot;No&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP1875 佳佳的魔法药水</title>
    <url>/2018/11/01/luoguP1875%20%E4%BD%B3%E4%BD%B3%E7%9A%84%E9%AD%94%E6%B3%95%E8%8D%AF%E6%B0%B4/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1875">题目</a></p>
<hr>
<p>这道题目有点<em>奇怪</em>。</p>
<p>我交堆优化dijk，怎么样都A不掉，都只有10分。</p>
<p>检查了7个小时，重构过，依然不行。</p>
<p>然后放下尊严写邻接矩阵写堆优化，一遍A….</p>
<p>why？？？？</p>
<hr>
<p>大致是这么做的：</p>
<p>每种药是一个点，假设a+b合成c，那么建一条a到c的边，边权为得到b的代价，建一条b到c的边，边权为得到a的代价。</p>
<p>思考，一开始的时候，每种药都可以通过购买得到，假设价格<em>最小</em>的药是x，那么得到x一定不能更优了。因为如果更优，一定是通过其他两种药混合而成，而x已经是价格最低的药了，因此x通过其他两种药相加不可能更优。</p>
<p>根据最短路的做法，我们可以用x更新其他药。但这里有个问题。</p>
<blockquote>
<p>假设x和y合成z。</p>
<p>我们在这里只确定了x是最优的，并不能确定y是最优的；考虑到以后用y更新其他药的时候，也会有y和x合成z的操作，而那时，y是最优的，x也是最优的，他们合成z一定是最便宜的。</p>
</blockquote>
<p>因此用x更新其他药的时候，假设x和y合成z，那么只有当y已经被访问过，才执行更新操作。</p>
<p>至于计算方案数，假设x和y合成z，那么z一共可以有x的方案数乘y的方案数种方案数。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[N][N],n,x,y,z,vis[N];</span><br><span class="line">ll d[N],f[N];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">rll</span>(d[i]),f[i]=<span class="number">1</span>;</span><br><span class="line"> <span class="built_in">mem</span>(a,<span class="number">255</span>);</span><br><span class="line"> <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x))&#123;</span><br><span class="line">  <span class="built_in">rll</span>(y);<span class="built_in">rll</span>(z);x++;y++;z++;a[x][y]=a[y][x]=z;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">mem</span>(vis,<span class="number">0</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(T,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">  <span class="type">int</span> u=<span class="number">-1</span>;</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)</span><br><span class="line">   u=((!vis[i])&amp;&amp;(u==<span class="number">-1</span>||d[u]&gt;d[i]))?i:u;</span><br><span class="line">  vis[u]=<span class="number">1</span>; </span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">   <span class="keyword">if</span>((a[u][i]==<span class="number">-1</span>)||(!vis[i])||d[i]+d[u]&gt;d[a[u][i]])<span class="keyword">continue</span>;</span><br><span class="line">   <span class="keyword">if</span>(d[i]+d[u]==d[a[u][i]])</span><br><span class="line">    f[a[u][i]]+=f[i]*f[u];</span><br><span class="line">   <span class="keyword">if</span>(d[i]+d[u]&lt;d[a[u][i]])&#123;</span><br><span class="line">    d[a[u][i]]=d[i]+d[u];</span><br><span class="line">    f[a[u][i]]=f[u]*f[i];</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%lld %lld\n&quot;</span>,d[<span class="number">1</span>],f[<span class="number">1</span>]);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>代码其实有问题，不过数据比较水，没有出现x和x可以合成z的情况。如果这种情况合法，那么对方案数的贡献只有f(x)×(f(x)+1)/2。</p>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP1983 车站分级</title>
    <url>/2018/10/30/luoguP1983-%E8%BD%A6%E7%AB%99%E5%88%86%E7%BA%A7/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1983">题目</a></p>
<hr>
<p>将每趟车看成一个虚点，每个站点看成实点</p>
<p>对于一辆车 虚点指向起点站到终点站所有经过的点 起点站到终点站所有没经过的点指向虚点</p>
<p>也就是</p>
<p>没经过（等级低）—&gt;虚点—&gt;经过（等级高）</p>
<p>这样做的好处是 可以避免O(mn^2)连边</p>
<p>其实这道题如果直接O(mn^2)，在经过和没经过的点上两两连边，也是可以过的。</p>
<p>这样拓扑跑一遍以后每个实点都有一个rank</p>
<p>任一拓扑序一定形如 实点-虚点-实点-虚点-实点….</p>
<p>假设拓扑起点的rank=0</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>实点</th>
<th>虚点</th>
<th>实点</th>
<th>虚点</th>
<th>…</th>
<th>实点</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td>1</td>
<td>2</td>
<td>3</td>
<td></td>
<td>rk</td>
</tr>
<tr>
<td>1</td>
<td></td>
<td>2</td>
<td></td>
<td></td>
<td>rk/2+1</td>
</tr>
</tbody>
</table>
</div>
<p>所以在实点的rk中取最大值，答案是rk/2+1</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1100</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,s,x,into[N*<span class="number">2</span>],vis[N],head[N*<span class="number">2</span>],cnt=<span class="number">0</span>,rk[N*<span class="number">2</span>],ans=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> b[N*<span class="number">2</span>],l,r,sz,start;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line"> <span class="type">int</span> p,nt;</span><br><span class="line">&#125;a[N*N];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;T f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"> a[++cnt].p=y;a[cnt].nt=head[x];head[x]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">addb</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"> rk[x]=y;b[++r]=x;sz++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(m);<span class="comment">//n车站 m车</span></span><br><span class="line"> <span class="built_in">mem</span>(into,<span class="number">0</span>);<span class="built_in">mem</span>(head,<span class="number">255</span>); </span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(s);<span class="built_in">mem</span>(vis,<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">fsb</span>(j,<span class="number">1</span>,s)&#123;</span><br><span class="line">   <span class="built_in">rll</span>(x);vis[x]=<span class="number">1</span>;</span><br><span class="line">   start=j==<span class="number">1</span>?x:start;</span><br><span class="line">   into[x]++;<span class="built_in">add</span>(i+n,x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">fsb</span>(j,start,x)</span><br><span class="line">   <span class="keyword">if</span>(!vis[j])&#123;</span><br><span class="line">    into[i+n]++;<span class="built_in">add</span>(j,i+n);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> l=<span class="number">1</span>;r=<span class="number">0</span>;sz=<span class="number">0</span>;<span class="built_in">mem</span>(rk,<span class="number">255</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n+m)</span><br><span class="line">  <span class="keyword">if</span>(into[i]==<span class="number">0</span>)<span class="built_in">addb</span>(i,<span class="number">0</span>);</span><br><span class="line"> <span class="keyword">while</span>(sz&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="type">int</span> u=b[l];l++;sz--;</span><br><span class="line"><span class="comment">//  printf(&quot;%10d %d\n&quot;,u,rk[u]);</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> t=head[u];t!=<span class="number">-1</span>;t=a[t].nt)&#123;</span><br><span class="line">   <span class="type">int</span> v=a[t].p;</span><br><span class="line">   into[v]--;rk[v]=<span class="built_in">max</span>(rk[v],rk[u]+<span class="number">1</span>);</span><br><span class="line">   <span class="keyword">if</span>(into[v]==<span class="number">0</span>)<span class="built_in">addb</span>(v,rk[v]);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)ans=<span class="built_in">max</span>(ans,rk[i]);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans/<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP1962 斐波那契数列</title>
    <url>/2018/10/31/luoguP1962%20%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P1962">题目</a></p>
<hr>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mo 1000000007</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> md(a) ((a)%mo)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">mt</span>&#123;</span><br><span class="line"> ll a[<span class="number">5</span>][<span class="number">5</span>]; </span><br><span class="line">&#125;s,c;</span><br><span class="line">ll n;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> mt <span class="title">times</span><span class="params">(mt a,mt b)</span></span>&#123;</span><br><span class="line"> mt ans;<span class="built_in">memset</span>(ans.a,<span class="number">0</span>,<span class="built_in">sizeof</span>(ans.a));</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,<span class="number">2</span>)<span class="built_in">fsb</span>(j,<span class="number">1</span>,<span class="number">2</span>)<span class="built_in">fsb</span>(k,<span class="number">1</span>,<span class="number">2</span>)ans.a[i][j]=<span class="built_in">md</span>(ans.a[i][j]+a.a[i][k]*b.a[k][j]);</span><br><span class="line"> <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> mt <span class="title">po</span><span class="params">(mt a,ll y)</span></span>&#123;</span><br><span class="line"> mt ans=a,t=a;y--;</span><br><span class="line"> <span class="keyword">while</span>(y&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(y&amp;<span class="number">1</span>)ans=<span class="built_in">times</span>(ans,t);</span><br><span class="line">  t=<span class="built_in">times</span>(t,t);</span><br><span class="line">  y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line"> s.a[<span class="number">1</span>][<span class="number">1</span>]=s.a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"> c.a[<span class="number">1</span>][<span class="number">1</span>]=c.a[<span class="number">1</span>][<span class="number">2</span>]=c.a[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>; </span><br><span class="line"> <span class="keyword">if</span>(n&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">times</span>(<span class="built_in">po</span>(c,n<span class="number">-2</span>),s).a[<span class="number">1</span>][<span class="number">1</span>]);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP2052 [NOI2011]道路修建</title>
    <url>/2018/10/31/luoguP2052%20%5BNOI2011%5D%E9%81%93%E8%B7%AF%E4%BF%AE%E5%BB%BA/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2052">题目</a></p>
<hr>
<p>O(n)用树上DP或者拓扑跑一遍</p>
<p>拓扑：当度为1时，加入队列，每次f[i]被加时，度—</p>
<p>代码是树上DP的</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1000010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> abs(a) ((a)&gt;0?(a):(-(a)))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(ll a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(ll a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line"> ll p,nt,mark;</span><br><span class="line">&#125;a[N*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> ll x,y,z;</span><br><span class="line">&#125;b[N];</span><br><span class="line">ll n,cnt=<span class="number">0</span>,head[N],x,y,z,ans=<span class="number">0</span>,f[N];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(ll x,ll y,ll z)</span></span>&#123;</span><br><span class="line"> a[++cnt].p=y;a[cnt].nt=head[x];head[x]=cnt;a[cnt].mark=z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs</span><span class="params">(ll u,ll fa)</span></span>&#123;</span><br><span class="line"> f[u]=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span>(ll t=head[u];t!=<span class="number">-1</span>;t=a[t].nt)&#123;</span><br><span class="line">  ll v=a[t].p;<span class="keyword">if</span>(v==fa)<span class="keyword">continue</span>;</span><br><span class="line">  <span class="built_in">dfs</span>(v,u);f[u]+=f[v];ans+=<span class="built_in">abs</span>(n<span class="number">-2</span>*f[v])*b[a[t].mark].z;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">mem</span>(head,<span class="number">255</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(x);<span class="built_in">rll</span>(y);<span class="built_in">rll</span>(z);<span class="built_in">add</span>(x,y,i);<span class="built_in">add</span>(y,x,i);</span><br><span class="line">  b[i]=(node)&#123;x,y,z&#125;;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">mem</span>(f,<span class="number">0</span>);<span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP2115 [USACO14MAR]破坏Sabotage</title>
    <url>/2018/11/07/luoguP2115%20%5BUSACO14MAR%5D%E7%A0%B4%E5%9D%8FSabotage/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2115">题目</a></p>
<hr>
<p>不能直接跑最大连续子段和，因为平均数不确定，如果该点产量在平均数以下则为正贡献，反之为负贡献，无法确定平均数，因此无法确定舍去哪些点。</p>
<p>考虑二分答案。</p>
<p>若$a[i]&lt;=x$则为正贡献，若$a[i]&gt;x$则为负贡献，因此每次check先把$a[i]$减去x。跑最大连续子段和。然后验证除去最大连续子段后的sum是否小于等于0，如果是则mid合法。</p>
<hr>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> eps (0.00001)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">double</span> a[N],f[N],g[N],sum=<span class="number">0</span>,l,r,md;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">double</span> x)</span></span>&#123;</span><br><span class="line"> <span class="built_in">mem</span>(f,<span class="number">0</span>);<span class="built_in">mem</span>(g,<span class="number">0</span>);<span class="type">int</span> mx=<span class="number">0</span>;<span class="type">double</span> sum=<span class="number">0</span>; </span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">2</span>,n<span class="number">-1</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(f[i<span class="number">-1</span>]&gt;<span class="number">0</span>)&#123;</span><br><span class="line">   g[i]=g[i<span class="number">-1</span>];f[i]=f[i<span class="number">-1</span>]+a[i]-x;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   f[i]=a[i]-x;g[i]=i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(mx==<span class="number">0</span>||f[mx]&lt;f[i])mx=i;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,g[mx]<span class="number">-1</span>)sum+=a[i]-x;</span><br><span class="line"> <span class="built_in">fsb</span>(i,mx+<span class="number">1</span>,n)sum+=a[i]-x;</span><br><span class="line"> <span class="keyword">return</span> sum&lt;=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">rll</span>(a[i]),sum+=a[i];</span><br><span class="line"><span class="comment">// fsb(i,1,n)printf(&quot;%lf &quot;,a[i]);</span></span><br><span class="line"> l=<span class="number">0</span>;r=sum;</span><br><span class="line"> <span class="keyword">while</span>(l+eps&lt;r)&#123;</span><br><span class="line">  md=(l+r)/<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">check</span>(md))r=md;<span class="keyword">else</span> l=md;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%0.3lf\n&quot;</span>,md);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意精度</p>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP2439 [SDOI2005]阶梯教室设备利用</title>
    <url>/2018/10/28/luoguP2439-SDOI2005-%E9%98%B6%E6%A2%AF%E6%95%99%E5%AE%A4%E8%AE%BE%E5%A4%87%E5%88%A9%E7%94%A8/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2439">题目</a></p>
<hr>
<h2 id="O-k-nlogn"><a href="#O-k-nlogn" class="headerlink" title="O(k+nlogn)"></a>O(k+nlogn)</h2><p>f[i]表示0..i的区间的最大演讲时间。</p>
<p>f[i]要么不演讲从f[i-1]转移 要么演讲，从f[i-a[j].s]转移（a[j].e==i）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 30010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> <span class="type">int</span> s,e;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="type">int</span> f[M],n,mx;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> a.e&lt;b.e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line"> T f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);mx=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(a[i].s),<span class="built_in">rll</span>(a[i].e);</span><br><span class="line">  a[i].s++;a[i].e++;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line"> <span class="type">int</span> j=<span class="number">1</span>;mx=a[n].e;f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,mx)&#123;</span><br><span class="line">  f[i]=f[i<span class="number">-1</span>];</span><br><span class="line">  <span class="keyword">while</span>(j&lt;=n&amp;&amp;a[j].e==i)&#123;</span><br><span class="line">   f[i]=<span class="built_in">max</span>(f[i],f[a[j].s]+a[j].e-a[j].s);</span><br><span class="line">   j++;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,f[mx]);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="O-n-k"><a href="#O-n-k" class="headerlink" title="O(n+k)"></a>O(n+k)</h2><p>用链式前向星</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 30010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> <span class="type">int</span> s,nt;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="type">int</span> f[M],n,mx,head[M],x,y;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line"> T f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> i)</span></span>&#123;</span><br><span class="line"> a[i].s=y;a[i].nt=head[x];head[x]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);mx=<span class="number">0</span>;<span class="built_in">memset</span>(head,<span class="number">255</span>,<span class="built_in">sizeof</span>(head));</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(x),<span class="built_in">rll</span>(y);x++;y++;</span><br><span class="line">  <span class="built_in">add</span>(y,x,i);mx=<span class="built_in">max</span>(mx,y);</span><br><span class="line"> &#125;</span><br><span class="line"> f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,mx)&#123;</span><br><span class="line">  f[i]=f[i<span class="number">-1</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> t=head[i];t!=<span class="number">-1</span>;t=a[t].nt)</span><br><span class="line">   f[i]=<span class="built_in">max</span>(f[i],f[a[t].s]+i-a[t].s);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,f[mx]);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP2327 [SCOI2005]扫雷</title>
    <url>/2018/10/28/luoguP2327%20%5BSCOI2005%5D%E6%89%AB%E9%9B%B7/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2327">题目</a></p>
<p>x,y=1:放 0:不放</p>
<p>calc(p,x,y)计算第p个位置为x 第p+1个位置为y的方案数</p>
<p>显然第p-1个位置需要为a[p]-x-y才能满足第p个位置</p>
<p>可见答案只可能是0/1/2</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[N],n;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line"> T f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">calc</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(p==<span class="number">0</span>) <span class="keyword">return</span> (x==<span class="number">0</span>)?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line"> <span class="type">int</span> t=a[p]-x-y;</span><br><span class="line"> <span class="keyword">if</span>(t&lt;<span class="number">0</span>||t&gt;<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">calc</span>(p<span class="number">-1</span>,t,x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">rll</span>(a[i]);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">calc</span>(n,<span class="number">0</span>,<span class="number">0</span>)+<span class="built_in">calc</span>(n,<span class="number">1</span>,<span class="number">0</span>));</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP2967 [USACO09DEC]视频游戏的麻烦Video Game Troubles</title>
    <url>/2018/11/05/luoguP2967%20%5BUSACO09DEC%5D%E8%A7%86%E9%A2%91%E6%B8%B8%E6%88%8F%E7%9A%84%E9%BA%BB%E7%83%A6Video%20Game%20Troubles/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2967">题目</a></p>
<hr>
<p>f(i,j)表示前i个游戏平台花费j的最大愉悦值。</p>
<p>难点在于保证买该平台游戏，则游戏平台一定要买。</p>
<p>如果按照金明的预算方案那样对于每个附属品选/不选肯定要T。</p>
<p>考虑f(i,j)=max( f(i-1,j-x)+y , f(i-1,j) )，这里x和y是一个附属物品的体积和价值。</p>
<p>如果直接这么转移就会出现不买平台直接买游戏的尴尬。</p>
<p>因此我们考虑先强制买平台。下文中平台价格为p</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">f</span>(i,j)=<span class="built_in">f</span>(i<span class="number">-1</span>,j-p)</span><br></pre></td></tr></table></figure>
<p>对于一个平台的附属游戏，只有买了平台才能生效。所以从p+x开始转移</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">f</span>(i,j)=<span class="built_in">max</span>(<span class="built_in">f</span>(i,j),<span class="built_in">f</span>(i,j-x)+y)      p+x&lt;=j&lt;=v</span><br></pre></td></tr></table></figure>
<p>然后考虑不买的情况</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">f</span>(i,j)=<span class="built_in">max</span>(<span class="built_in">f</span>(i,j),<span class="built_in">f</span>(i<span class="number">-1</span>,j))</span><br></pre></td></tr></table></figure>
<p>如果直接开f(i,j)数组，空间要爆。显然f(i)只与f(i-1)有关，滚动数组。</p>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 60</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> V 100010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][V],nw=<span class="number">1</span>,lt=<span class="number">0</span>,n,g,v,x,y,p,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(v);<span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="built_in">sizeof</span>(f));</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(p);</span><br><span class="line">  <span class="built_in">fsb</span>(i,p,v)f[nw][i]=f[lt][i-p];</span><br><span class="line">  <span class="built_in">rll</span>(g);</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">1</span>,g)&#123;</span><br><span class="line">   <span class="built_in">rll</span>(x);<span class="built_in">rll</span>(y);</span><br><span class="line">   <span class="built_in">fbs</span>(i,v,p+x)f[nw][i]=<span class="built_in">max</span>(f[nw][i],f[nw][i-x]+y);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">0</span>,v)f[nw][i]=<span class="built_in">max</span>(f[nw][i],f[lt][i]);</span><br><span class="line">  <span class="built_in">swap</span>(lt,nw);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">0</span>,v)ans=<span class="built_in">max</span>(ans,f[lt][i]);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP2845 [USACO15DEC]Switching on the Lights 开关灯</title>
    <url>/2018/11/05/luoguP2845%20%5BUSACO15DEC%5DSwitching%20on%20the%20Lights%20%E5%BC%80%E5%85%B3%E7%81%AF/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2845">题目</a></p>
<hr>
<p>函数1：用于点亮(x,y)能开的灯，假设能开(xx,yy)，将(xx,yy)交至函数2</p>
<p>函数2：判断(x,y)是否能被<em>走到</em>（即4个方向有被访问到的点相邻），如果能，将(x,y)交至函数1，遍历(x,y)的4个方向，如果有亮着灯但没有被访问的点(xx,yy)，将(xx,yy)交至函数2</p>
<p>主程序：(1,1) —&gt; 函数1</p>
<hr>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 110</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 200010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line"> <span class="type">int</span> x,y,nt;</span><br><span class="line">&#125;a[M];</span><br><span class="line"><span class="type">int</span> n,m,x,y,xx,yy,cnt=<span class="number">0</span>,head[N][N],li[N][N],vi[N][N],ans=<span class="number">1</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> xx,<span class="type">int</span> yy)</span></span>&#123;</span><br><span class="line"> a[++cnt]=(edge)&#123;xx,yy,head[x][y]&#125;;head[x][y]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> flag=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">0</span>,<span class="number">3</span>)<span class="keyword">if</span>(vi[x+dx[i]][y+dy[i]])flag=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">if</span>(flag==<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line"> vi[x][y]=<span class="number">1</span>;</span><br><span class="line"> <span class="built_in">dfs</span>(x,y);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">0</span>,<span class="number">3</span>)&#123;</span><br><span class="line">  <span class="type">int</span> xx=x+dx[i],yy=y+dy[i];</span><br><span class="line">  <span class="keyword">if</span>((!vi[xx][yy])&amp;&amp;(li[xx][yy]))<span class="built_in">dfs2</span>(xx,yy);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="comment">// printf(&quot;%10d %d\n&quot;,x,y);</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="type">int</span> t=head[x][y];t!=<span class="number">-1</span>;t=a[t].nt)&#123;</span><br><span class="line">  <span class="type">int</span> xx=a[t].x,yy=a[t].y;</span><br><span class="line">  <span class="keyword">if</span>(li[xx][yy])<span class="keyword">continue</span>;</span><br><span class="line">  li[xx][yy]=<span class="number">1</span>;ans++;<span class="built_in">dfs2</span>(xx,yy);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// freopen(&quot;2845_1.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(m);<span class="built_in">mem</span>(head,<span class="number">255</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(x);<span class="built_in">rll</span>(y);<span class="built_in">rll</span>(xx);<span class="built_in">rll</span>(yy);</span><br><span class="line">  <span class="built_in">add</span>(x,y,xx,yy);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">mem</span>(li,<span class="number">0</span>);<span class="built_in">mem</span>(vi,<span class="number">0</span>);li[<span class="number">1</span>][<span class="number">1</span>]=vi[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"> <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：答案问的是开灯数而非访问数。</p>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP2975 [USACO10JAN]轮流Taking Turns</title>
    <url>/2018/11/06/luoguP2975%20%5BUSACO10JAN%5D%E8%BD%AE%E6%B5%81Taking%20Turns/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P2975">题目</a></p>
<hr>
<p>$f[i]$表示$i..n$能取到的最大和</p>
<p>$g[i]$表示$i..n$取到最大和时，最先取到的点</p>
<p>从后往前跑，对于一个点，考虑它取不取</p>
<p>​ 如果不取，$f[i]=f[i+1],g[i]=g[i+1]$</p>
<p>​ 如果取，$f[i]=f[g[i+1]+1]+a[i],g[i]=i$</p>
<p>因为$g[i+1]$表示$i+1$取最大和时，最先取到的点，如果取i，那么下一头牛就会取$i+1..n$的最大和，也就是取第$g[i+1]$个。那么当前这头牛就只能从$g[i+1]+1$开始取，所以是$f[i]=f[g[i+1]+1]+a[i]$</p>
<hr>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 700010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(ll a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(ll a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,f[N],g[N],a[N];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">rll</span>(a[i]);<span class="built_in">mem</span>(f,<span class="number">0</span>);<span class="built_in">mem</span>(g,<span class="number">0</span>);</span><br><span class="line"> <span class="built_in">fbs</span>(i,n,<span class="number">1</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>((g[i+<span class="number">1</span>]==<span class="number">0</span>)||(f[g[i+<span class="number">1</span>]+<span class="number">1</span>]==<span class="number">0</span>))&#123;</span><br><span class="line">   f[i]=a[i];g[i]=i;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   f[i]=a[i]+f[g[i+<span class="number">1</span>]+<span class="number">1</span>];g[i]=i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(f[i+<span class="number">1</span>]&gt;f[i])f[i]=f[i+<span class="number">1</span>],g[i]=g[i+<span class="number">1</span>];</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%lld %lld\n&quot;</span>,f[<span class="number">1</span>],f[g[<span class="number">1</span>]+<span class="number">1</span>]);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP3621 [APIO2007]风铃</title>
    <url>/2018/11/04/luoguP3621%20%5BAPIO2007%5D%E9%A3%8E%E9%93%83/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3621">题目</a></p>
<hr>
<h5 id="什么时候不合法"><a href="#什么时候不合法" class="headerlink" title="什么时候不合法"></a>什么时候不合法</h5><p>最大玩具深度（下文记为mx）比最小玩具深度（下文记为mn）大至少2。</p>
<p>对于一根木棍，木棍左边连接有深度为mx、mn的玩具，木棍右边也连接有深度为mx，mn的玩具，这时候交换左右，仍然不可能满足题目的第二个要求。</p>
<h5 id="计算ans"><a href="#计算ans" class="headerlink" title="计算ans"></a>计算ans</h5><p>在合法的前提下，对于一根木棍，如果左边有深度为mn的玩具，右边有深度为mx的玩具，ans++</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> min(a,b) ((a)&lt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int (a)=(b);(a)&lt;=(c);(a)++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int (a)=(b);(a)&gt;=(c);(a)--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> <span class="type">int</span> ls,rs,l1,l2,r1,r2;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="type">int</span> n,mx=<span class="number">0</span>,mn=<span class="number">99999999</span>,ans=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(u==<span class="number">-1</span>)<span class="keyword">return</span>;</span><br><span class="line"> <span class="keyword">if</span>(a[u].ls==<span class="number">-1</span>||a[u].rs==<span class="number">-1</span>)mx=<span class="built_in">max</span>(mx,d),mn=<span class="built_in">min</span>(mn,d);</span><br><span class="line"> <span class="built_in">dfs</span>(a[u].ls,d+<span class="number">1</span>);<span class="built_in">dfs</span>(a[u].rs,d+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> ls=a[u].ls,rs=a[u].rs,&amp;l1=a[u].l1,&amp;l2=a[u].l2,&amp;r1=a[u].r1,&amp;r2=a[u].r2;</span><br><span class="line"> <span class="keyword">if</span>(ls==<span class="number">-1</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(d==mn)l1=<span class="number">1</span>;<span class="keyword">else</span> l2=<span class="number">1</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">dfs2</span>(ls,d+<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span>(flag==<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line">  l1=a[ls].l1|a[ls].r1;</span><br><span class="line">  l2=a[ls].l2|a[ls].r2;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(rs==<span class="number">-1</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(d==mn)r1=<span class="number">1</span>;<span class="keyword">else</span> r2=<span class="number">1</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">dfs2</span>(rs,d+<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span>(flag==<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line">  r1=a[rs].l1|a[rs].r1;</span><br><span class="line">  r2=a[rs].l2|a[rs].r2;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(l1+l2+r1+r2==<span class="number">4</span>)&#123;</span><br><span class="line">  flag=<span class="number">0</span>;<span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(l1==<span class="number">1</span>&amp;&amp;r2==<span class="number">1</span>)ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(a[i].ls);<span class="built_in">rll</span>(a[i].rs);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"> <span class="keyword">if</span>(mx-mn&gt;<span class="number">1</span>)flag=<span class="number">0</span>;<span class="keyword">else</span> <span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,(flag==<span class="number">0</span>)?<span class="number">-1</span>:ans);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP3718 [AHOI2017初中组]alter</title>
    <url>/2018/10/29/luoguP3718-AHOI2017%E5%88%9D%E4%B8%AD%E7%BB%84-alter/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3718">题目</a></p>
<hr>
<p>需要特判ans=1</p>
<p>check函数要考虑</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7 1</span><br><span class="line">NNFFFNN</span><br></pre></td></tr></table></figure>
<p>这种数据</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,a[N],l,r,mid,b[N],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> s[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> last=<span class="number">2</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)</span><br><span class="line">  <span class="keyword">if</span>(a[i]!=last)&#123;</span><br><span class="line">   b[++cnt]=<span class="number">1</span>;last=a[i];</span><br><span class="line">  &#125;<span class="keyword">else</span> b[cnt]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> cnt1=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,cnt)cnt1+=b[i]/(x+<span class="number">1</span>);</span><br><span class="line"> <span class="keyword">return</span> cnt1&lt;=m; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)a[i]=s[i]==<span class="string">&#x27;N&#x27;</span>?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">work</span>();</span><br><span class="line"> <span class="type">int</span> cnt2=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="keyword">if</span>(a[i]+(i&amp;<span class="number">1</span>)==<span class="number">1</span>)cnt2++;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(cnt2&lt;=m||n-cnt2&lt;=m)&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line"> &#125;</span><br><span class="line"> l=<span class="number">2</span>;r=n;</span><br><span class="line"> <span class="keyword">while</span>(l+<span class="number">5</span>&lt;r)&#123;</span><br><span class="line">  mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">check</span>(mid))r=mid;<span class="keyword">else</span> l=mid;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,l,r)<span class="keyword">if</span>(<span class="built_in">check</span>(i))&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP3034 [USACO11DEC]牛摄影Cow Photography</title>
    <url>/2018/11/04/luoguP3034%20%5BUSACO11DEC%5D%E7%89%9B%E6%91%84%E5%BD%B1Cow%20Photography/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3034">题目</a></p>
<hr>
<p>考虑对于任意两头牛a和b，假设a在b前面。</p>
<p>他们在5张照片中，至少有3张照片，a在b前面，剩下一张可能是a移到了后面，还有一张可能是b移到了前面，但无论如何，至少有3张照片他们的相对位置保持不变。</p>
<p>这样就可以排序了。</p>
<p>p.s.还需要离散化。</p>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 20010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>][N],n,rk[N],b[N],x;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> a&lt;b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">getrk</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> l=<span class="number">1</span>,r=n,m;</span><br><span class="line"> <span class="keyword">while</span>(l+<span class="number">5</span>&lt;r)&#123;</span><br><span class="line">  m=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(rk[m]==x)<span class="keyword">return</span> m;</span><br><span class="line">  <span class="keyword">if</span>(rk[m]&lt;x)l=m;<span class="keyword">else</span> r=m;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,l,r)<span class="keyword">if</span>(rk[i]==x)<span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">cmp2</span><span class="params">(<span class="type">int</span> aa,<span class="type">int</span> bb)</span></span>&#123;</span><br><span class="line"> <span class="type">int</span> rka=<span class="built_in">getrk</span>(aa),rkb=<span class="built_in">getrk</span>(bb);</span><br><span class="line"> <span class="type">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,<span class="number">5</span>)cnt+=a[i][rka]&lt;a[i][rkb]?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">return</span> cnt&gt;=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;<span class="comment">//a[i][j]表示在第i张图中，rk=j的位置 </span></span><br><span class="line"> <span class="built_in">rll</span>(n);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">rll</span>(rk[i]),b[i]=rk[i];</span><br><span class="line"> <span class="built_in">sort</span>(rk+<span class="number">1</span>,rk+<span class="number">1</span>+n,cmp); </span><br><span class="line"><span class="comment">// fsb(i,1,n)printf(&quot;%10d\n&quot;,rk[i]);</span></span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)a[<span class="number">1</span>][<span class="built_in">getrk</span>(b[i])]=i;</span><br><span class="line"> <span class="built_in">fsb</span>(j,<span class="number">2</span>,<span class="number">5</span>)</span><br><span class="line">  <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">   <span class="built_in">rll</span>(x);a[j][<span class="built_in">getrk</span>(x)]=i; </span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// fsb(i,1,n)printf(&quot;%10d\n&quot;,a[2][i]);</span></span><br><span class="line"> <span class="built_in">sort</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+n,cmp2);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,b[i]);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP3871 [TJOI2010]中位数</title>
    <url>/2018/10/30/luoguP3871%20%5BTJOI2010%5D%E4%B8%AD%E4%BD%8D%E6%95%B0/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3871">题目</a></p>
<hr>
<p>显然中位数为排序后第(n+1)/2个数</p>
<h1 id="define-m-n-1-2"><a href="#define-m-n-1-2" class="headerlink" title="define m (n+1)/2"></a>define m (n+1)/2</h1><p>考虑维护两个堆</p>
<p>一个<em>大根堆</em>（s1），里面为前m个元素；一个<em>小根堆</em>（s2），里面为后n-m个元素</p>
<p>修改和询问的流程如下</p>
<p>每次加入一个数x时</p>
<p>如果x&lt;=s1.top</p>
<p>​ add x to s1</p>
<p>​ 如果|s1|&gt;|s2|+1</p>
<p>​  move s1.top to s2</p>
<p>else</p>
<p>​ add x to s2</p>
<p>​ 如果|s2|&gt;|s1|</p>
<p>​  move s2.top to s1</p>
<p>每次询问</p>
<p>输出s1.top</p>
<p>显然正确</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n=<span class="number">0</span>,m,x,sz1=<span class="number">0</span>,sz2=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> s[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node1</span>&#123;</span><br><span class="line"> <span class="type">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node2</span>&#123;</span><br><span class="line"> <span class="type">int</span> x;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="keyword">operator</span>&lt;(node1 a,node1 b)&#123;</span><br><span class="line"> <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="keyword">operator</span>&lt;(node2 a,node2 b)&#123;</span><br><span class="line"> <span class="keyword">return</span> a.x&gt;b.x;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;node1&gt;s1;</span><br><span class="line">priority_queue&lt;node2&gt;s2;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> qw f=<span class="number">1</span>;x=<span class="number">0</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(s1.<span class="built_in">empty</span>())&#123;</span><br><span class="line">  s1.<span class="built_in">push</span>((node1)&#123;x&#125;);sz1++;<span class="keyword">return</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(x&lt;=s1.<span class="built_in">top</span>().x)&#123;</span><br><span class="line">  s1.<span class="built_in">push</span>((node1)&#123;x&#125;);sz1++;</span><br><span class="line">  <span class="keyword">if</span>(sz1&gt;sz2+<span class="number">1</span>)&#123;</span><br><span class="line">   <span class="type">int</span> t=s1.<span class="built_in">top</span>().x;s1.<span class="built_in">pop</span>();</span><br><span class="line">   s2.<span class="built_in">push</span>((node2)&#123;t&#125;);sz1--;sz2++;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  s2.<span class="built_in">push</span>((node2)&#123;x&#125;);sz2++;</span><br><span class="line">  <span class="keyword">if</span>(sz2&gt;sz1)&#123;</span><br><span class="line">   <span class="type">int</span> t=s2.<span class="built_in">top</span>().x;s2.<span class="built_in">pop</span>();</span><br><span class="line">   s1.<span class="built_in">push</span>((node1)&#123;t&#125;);sz1++;sz2--;</span><br><span class="line">  &#125; </span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(m);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(x);<span class="built_in">add</span>(x);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">rll</span>(m);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span>(s[<span class="number">1</span>]==<span class="string">&#x27;a&#x27;</span>)&#123;</span><br><span class="line">   <span class="built_in">rll</span>(x);<span class="built_in">add</span>(x);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,s1.<span class="built_in">top</span>().x);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP3946 ことりのおやつ（小鸟的点心）</title>
    <url>/2018/11/02/luoguP3946%20%E3%81%93%E3%81%A8%E3%82%8A%E3%81%AE%E3%81%8A%E3%82%84%E3%81%A4%EF%BC%88%E5%B0%8F%E9%B8%9F%E7%9A%84%E7%82%B9%E5%BF%83%EF%BC%89/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3946">题目</a></p>
<hr>
<p>跑出每个点被雪覆盖的时间</p>
<p>跑dijk，如果到这个点的最短时间超过限制，就置为不连通。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 500010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 99999999999999999</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(ll a=b;a&lt;=c;a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(ll a=b;a&gt;=c;a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll l[N],n,m,cnt=<span class="number">0</span>,x,y,z,s,t,g,q,head[N],d[N],vis[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line"> ll p,nt,l;</span><br><span class="line">&#125;a[M*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> ll u,d;</span><br><span class="line">&#125;;</span><br><span class="line">priority_queue&lt;node&gt;S;</span><br><span class="line"><span class="type">int</span> <span class="keyword">operator</span> &lt;(node a,node b)&#123;</span><br><span class="line"> <span class="keyword">return</span> a.d&gt;b.d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(ll x,ll y,ll z)</span></span>&#123;</span><br><span class="line"> a[++cnt].p=y;a[cnt].nt=head[x];head[x]=cnt;a[cnt].l=z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(m);<span class="built_in">rll</span>(s);<span class="built_in">rll</span>(t);<span class="built_in">rll</span>(g);<span class="built_in">rll</span>(q);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(x);<span class="built_in">rll</span>(y);l[i]=(i==s||i==t)?(INF):((q==<span class="number">0</span>?INF:(y-x)/q));</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">mem</span>(head,<span class="number">255</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(x);<span class="built_in">rll</span>(y);<span class="built_in">rll</span>(z);<span class="built_in">add</span>(x,y,z);<span class="built_in">add</span>(y,x,z);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">mem</span>(vis,<span class="number">0</span>);<span class="built_in">mem</span>(d,<span class="number">60</span>);d[s]=<span class="number">0</span>;S.<span class="built_in">push</span>((node)&#123;s,<span class="number">0</span>&#125;);</span><br><span class="line"> <span class="keyword">while</span>(!S.<span class="built_in">empty</span>())&#123;</span><br><span class="line">  ll u=S.<span class="built_in">top</span>().u;S.<span class="built_in">pop</span>();</span><br><span class="line">  <span class="keyword">if</span>(vis[u])<span class="keyword">continue</span>;</span><br><span class="line">  vis[u]=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">if</span>(d[u]&gt;g)<span class="keyword">break</span>;</span><br><span class="line">  <span class="keyword">for</span>(ll t=head[u];t!=<span class="number">-1</span>;t=a[t].nt)&#123;</span><br><span class="line">   ll v=a[t].p;</span><br><span class="line">   <span class="keyword">if</span>(vis[v]||d[u]+a[t].l&gt;d[v]||d[u]+a[t].l&gt;l[v])<span class="keyword">continue</span>;</span><br><span class="line">   d[v]=d[u]+a[t].l;S.<span class="built_in">push</span>((node)&#123;v,d[v]&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(d[t]&gt;g)<span class="built_in">puts</span>(<span class="string">&quot;wtnap wa kotori no oyatsu desu!&quot;</span>);<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,d[t]);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP3932 浮游大陆的68号岛</title>
    <url>/2018/11/05/luoguP3932%20%E6%B5%AE%E6%B8%B8%E5%A4%A7%E9%99%86%E7%9A%8468%E5%8F%B7%E5%B2%9B/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P3932">题目</a></p>
<hr>
<p>开四个数组：</p>
<p>$lcnt[i]$记录仓库i左边（不包括i）共有多少物品 $rcnt[i]$记录仓库i右边（不包括i）共有多少物品 $lcost[i]$记录将仓库i左边的所有物品移到仓库i所需的代价 $rcost[i]$记录将仓库i右边的所有物品移到仓库i所需的代价。</p>
<hr>
<p>$lcnt[i]$和$rcnt[i]$很好算，考虑如何O(n)计算$lcost[]$和$rcost[]​$。</p>
<p>以$lcost[]$为例</p>
<p>考虑新加入一个仓库。假设为6。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>编号(i)</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
</tr>
</thead>
<tbody>
<tr>
<td>$lcnt[i]$</td>
<td>0</td>
<td>4</td>
<td>5</td>
<td>6</td>
<td>8</td>
<td>9</td>
</tr>
</tbody>
</table>
</div>
<p>把1-5号仓库的所有物品移到6号仓库等价于把1-4号仓库的所有物品移到5号仓库，然后把5号仓库里的所有东西移到6号仓库。</p>
<p>也就是$lcost[i]=lcost[i-1]+lcnt[i]·dis(i-1,i)$</p>
<p>$rcost[]$也可以如法炮制</p>
<hr>
<p>考虑对于一个询问$l..r$</p>
<p><img src="https://s1.ax1x.com/2018/11/05/iIjSvd.png" alt="image"></p>
<p>一定是形如这样的（或者在x的右边；或者包括了x，包括x时可以分成两段分开计算）</p>
<p>把$l..r$的所有物品移到x等价于把r左边所有物品移到r，然后把r仓库的所有东西移到x，<em>减去</em>把l左边所有东西移到l，然后把l仓库的所有东西移到x</p>
<p>也就是$cost(l,r)=lcnt[r+1]·(po[x]-po[r])+lcost[r]-lcost[l]-lcnt[l]·(po[x]-po[l])$</p>
<p>$l..r$在x的右边也可以如法炮制</p>
<hr>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 200010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mo 19260817</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> md(a) (((a)%mo+mo)%mo)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mem(a,b) memset(a,b,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(ll a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(ll a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,m,po[N],a[N],lcnt[N],rcnt[N],lcost[N],rcost[N],x,l,r;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// freopen(&quot;3932_1.in&quot;,&quot;r&quot;,stdin);freopen(&quot;3932.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(m);po[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">2</span>,n)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(po[i]);po[i]+=po[i<span class="number">-1</span>];po[i]=<span class="built_in">md</span>(po[i]);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">mem</span>(a,<span class="number">0</span>);<span class="built_in">fsb</span>(i,<span class="number">1</span>,n)<span class="built_in">rll</span>(a[i]);</span><br><span class="line"> <span class="built_in">mem</span>(lcnt,<span class="number">0</span>);<span class="built_in">mem</span>(rcnt,<span class="number">0</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  lcnt[i]=lcnt[i<span class="number">-1</span>]+a[i<span class="number">-1</span>];lcnt[i]=<span class="built_in">md</span>(lcnt[i]);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fbs</span>(i,n,<span class="number">1</span>)&#123;</span><br><span class="line">  rcnt[i]=rcnt[i+<span class="number">1</span>]+a[i+<span class="number">1</span>];rcnt[i]=<span class="built_in">md</span>(rcnt[i]);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">mem</span>(lcost,<span class="number">0</span>);<span class="built_in">mem</span>(rcost,<span class="number">0</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">2</span>,n)&#123;</span><br><span class="line">  lcost[i]=<span class="built_in">md</span>(lcost[i<span class="number">-1</span>]+lcnt[i]*(po[i]-po[i<span class="number">-1</span>]));</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">// fsb(i,1,n)printf(&quot;%10lld %lld %lld\n&quot;,i,lcnt[i],rcnt[i]);</span></span><br><span class="line"> <span class="built_in">fbs</span>(i,n<span class="number">-1</span>,<span class="number">1</span>)&#123;</span><br><span class="line">  rcost[i]=<span class="built_in">md</span>(rcost[i+<span class="number">1</span>]+rcnt[i]*(po[i+<span class="number">1</span>]-po[i]));</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,m)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(x);<span class="built_in">rll</span>(l);<span class="built_in">rll</span>(r);</span><br><span class="line">  l=l==x?l+<span class="number">1</span>:l;</span><br><span class="line">  r=r==x?r<span class="number">-1</span>:r;</span><br><span class="line">  <span class="keyword">if</span>(l&gt;r)&#123;</span><br><span class="line">   <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);<span class="keyword">continue</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ll ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(r&lt;x)&#123;</span><br><span class="line">   ans=<span class="built_in">md</span>(lcnt[r+<span class="number">1</span>]*(po[x]-po[r])+lcost[r]-lcost[l]-lcnt[l]*(po[x]-po[l]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(l&gt;x)&#123;</span><br><span class="line">   ans=<span class="built_in">md</span>(rcnt[l<span class="number">-1</span>]*(po[l]-po[x])+rcost[l]-rcost[r]-rcnt[r]*(po[r]-po[x]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(l&lt;x&amp;&amp;r&gt;x)&#123;</span><br><span class="line">   ans=<span class="built_in">md</span>(lcnt[x]*(po[x]-po[x<span class="number">-1</span>])+lcost[x<span class="number">-1</span>]-lcost[l]-lcnt[l]*(po[x]-po[l]));</span><br><span class="line">   ans+=<span class="built_in">md</span>(rcnt[x]*(po[x+<span class="number">1</span>]-po[x])+rcost[x+<span class="number">1</span>]-rcost[r]-rcnt[r]*(po[r]-po[x]));</span><br><span class="line">   ans=<span class="built_in">md</span>(ans);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意：数字有点大，及时%。</p>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP4047 [JSOI2010]部落划分</title>
    <url>/2018/11/05/luoguP4047%20%5BJSOI2010%5D%E9%83%A8%E8%90%BD%E5%88%92%E5%88%86/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P4047">题目</a></p>
<hr>
<p>考虑将两两点之间的距离算出来并从小到大排序。</p>
<p>显然，应该优先合并距离小且不在一个部落中点对。因为如果不合并，则最小距离就是这两个点间的距离了。</p>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqr(a) ((a)*(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(register int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(register int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"> <span class="type">int</span> x,y;</span><br><span class="line">&#125;a[N],b[N*N];</span><br><span class="line"><span class="type">int</span> n,m,cnt=<span class="number">0</span>,fa[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">double</span> <span class="title">getdis</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">sqrt</span>(<span class="built_in">sqr</span>(a[i].x-a[j].x)+<span class="built_in">sqr</span>(a[i].y-a[j].y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="built_in">getdis</span>(a.x,a.y)&lt;<span class="built_in">getdis</span>(b.x,b.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">getf</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> x==fa[x]?x:fa[x]=<span class="built_in">getf</span>(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">rll</span>(m);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">rll</span>(a[i].x);<span class="built_in">rll</span>(a[i].y);</span><br><span class="line">  <span class="built_in">fsb</span>(j,<span class="number">1</span>,i<span class="number">-1</span>)b[++cnt]=(node)&#123;j,i&#125;;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">sort</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+cnt,cmp);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)fa[i]=i;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,cnt)&#123;</span><br><span class="line">  <span class="type">int</span> fax=<span class="built_in">getf</span>(b[i].x),fay=<span class="built_in">getf</span>(b[i].y);</span><br><span class="line">  <span class="keyword">if</span>(fax==fay)<span class="keyword">continue</span>;</span><br><span class="line">  <span class="keyword">if</span>(n==m)&#123;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;%0.2lf&quot;</span>,<span class="built_in">getdis</span>(b[i].x,b[i].y));</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  fa[fay]=fax;</span><br><span class="line">  n--;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguU50590 数字</title>
    <url>/2018/11/05/luoguU50590%20%E6%95%B0%E5%AD%97/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/U50590">题目(num)</a></p>
<hr>
<p>我们可有用DP很快地求出用x个数字构成y的方案数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f[i][j]=f[i-1][m-a[k]]</span><br></pre></td></tr></table></figure>
<p>其中a()为数字集合S中的数。</p>
<hr>
<p>主要难点在于题目中条件3：前后和相等<em>或</em>奇偶和相等。考虑容斥。</p>
<p>我们可以很快地求出前后和相等+奇偶和相等的方案数，再减去既是前后和相等又是奇偶和相等的方案数即可。</p>
<hr>
<p>我们已知用x个数字构成y的方案数，如何快速求前后和相等的方案数？</p>
<p>前后和相等时，这个数字可以表示为【       A       】【       B       】，由两端长度为n的数字构成，且他们的和相等。</p>
<p>首先显然要枚举前后和，假设为i。则A有<em>f(n,i)</em>种取法，B也有<em>f(n,i)</em>种取法，因此前后和相等且为i的方案数为$sqr(f(n,i))$</p>
<p>对于所有的前后和，答案为$\sum sqr(f[n][i])$</p>
<hr>
<p>如何快速求奇偶和相等的方案数？</p>
<p>脑补把上文的A和B的每个数字穿插。新构成的数就是A1B1A2B2A3B3…AnBn，这时新构成的数奇偶和相等。</p>
<p>因此方案数和前后和相等的方案数相等，为$\sum sqr(f[n][i])$</p>
<hr>
<p>如何快速求奇偶和相等<em>且</em>前后和相等的方案数？</p>
<p>考虑一个数x我们可以把它分成【A】【B】前后长度各位n的两部分，记A0为A中偶数位的和，A1为A中奇数位的和，B0为B中偶数位的和，B1为B中奇数位的和。</p>
<p>要使得前后和相等且奇偶和相等，则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A0+A1=B0+B1</span><br><span class="line">A0+B0=A1+B1</span><br></pre></td></tr></table></figure>
<p>解得</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A0=B1</span><br><span class="line">A1=B0</span><br></pre></td></tr></table></figure>
<p>分别求出A0=B1 A1=B0的对数，相乘即为答案。</p>
<p><em>下文中A0 A1 B0 B1分别表示处于这些位置的数字的个数，而非处于这些位置的数字的和</em></p>
<p>如果n是偶数，例如n=4</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>位数</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
</tr>
</thead>
<tbody>
<tr>
<td>奇偶</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>属于</td>
<td>A1</td>
<td>A0</td>
<td>A1</td>
<td>A0</td>
<td>B1</td>
<td>B0</td>
<td>B1</td>
<td>B0</td>
</tr>
</tbody>
</table>
</div>
<p>A0=2 A1=2 B0=2 B1=2</p>
<p>重复答案：$\sum (f[A0][i]·f[B1][i])·\sum (f[A1][i]·f[B0][i])=\sum (f[2][i]·f[2][i])·\sum (f[2][i]·f[2][i])$</p>
<p>如果n是奇数，例如n=5</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>位数</th>
<th>1</th>
<th>2</th>
<th>3</th>
<th>4</th>
<th>5</th>
<th>6</th>
<th>7</th>
<th>8</th>
<th>9</th>
<th>10</th>
</tr>
</thead>
<tbody>
<tr>
<td>奇偶</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
<td>1</td>
<td>0</td>
</tr>
<tr>
<td>属于</td>
<td>A1</td>
<td>A0</td>
<td>A1</td>
<td>A0</td>
<td>A1</td>
<td>B0</td>
<td>B1</td>
<td>B0</td>
<td>B1</td>
<td>B0</td>
</tr>
</tbody>
</table>
</div>
<p>A0=2 A1=3 B0=3 B1=2</p>
<p>重复答案：$\sum ( f[A0][i] · f[B1][i] ) · \sum ( f[A1][i] · f[B0][i] ) = \sum ( f[2][i] · f[2][i] ) · \sum ( f[3][i] · f[3][i] )$</p>
<p>可以发现$A0=B1&lt;=A1=B0$</p>
<p>设$t1=A0=B1，t2=A1=B0$，则重复的答案为$\sum sqr(f[t1][i]) · \sum sqr(f[t2][i])$</p>
<hr>
<p>容斥一下，最终答案为</p>
<p>$2·\sum sqr(f[n][i])-\sum sqr(f[t1][i]) · \sum sqr(f[t2][i])$</p>
<hr>
<h5 id="code"><a href="#code" class="headerlink" title="code"></a>code</h5><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mo 999983</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> md(a) (((a)%mo+mo)%mo)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> md2(a) ((a)%mo)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 1010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SUM 9010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sqr(a) ((a)*(a))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max(a,b) ((a)&gt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(ll a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(ll a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,vis[<span class="number">20</span>],a[<span class="number">20</span>],m=<span class="number">0</span>,f[N][SUM],mx=<span class="number">0</span>,maxx=<span class="number">0</span>,ans=<span class="number">0</span>,sum1=<span class="number">0</span>,sum2=<span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> s[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> qw&gt;<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">rll</span><span class="params">(qw &amp;x)</span></span>&#123;</span><br><span class="line"> x=<span class="number">0</span>;qw f=<span class="number">1</span>;<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))f=c==<span class="string">&#x27;-&#x27;</span>?<span class="number">-1</span>:f,c=<span class="built_in">getchar</span>();</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">isdigit</span>(c))x=x*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line"> x*=f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">freopen</span>(<span class="string">&quot;num.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);<span class="built_in">freopen</span>(<span class="string">&quot;num.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line"><span class="comment">// ll T=clock();</span></span><br><span class="line"> <span class="built_in">rll</span>(n);<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s+<span class="number">1</span>);s[<span class="number">0</span>]=<span class="string">&#x27;!&#x27;</span>;</span><br><span class="line"> <span class="built_in">fbs</span>(i,<span class="built_in">strlen</span>(s)<span class="number">-1</span>,<span class="number">1</span>)</span><br><span class="line">  <span class="keyword">if</span>(vis[s[i]-<span class="string">&#x27;0&#x27;</span>]==<span class="number">0</span>)&#123;</span><br><span class="line">   vis[s[i]-<span class="string">&#x27;0&#x27;</span>]=<span class="number">1</span>;a[++m]=s[i]-<span class="string">&#x27;0&#x27;</span>;maxx=<span class="built_in">max</span>(maxx,a[m]);</span><br><span class="line">  &#125;</span><br><span class="line"> f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">  <span class="built_in">fsb</span>(j,<span class="number">1</span>,m)</span><br><span class="line">   <span class="built_in">fbs</span>(k,mx+a[j],a[j])</span><br><span class="line">    f[i][k]=<span class="built_in">md2</span>(f[i][k]+f[i<span class="number">-1</span>][k-a[j]]);</span><br><span class="line">  mx+=maxx;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">// fsb(i,0,mx)printf(&quot;%10d %d\n&quot;,i,f[n][i]);</span></span><br><span class="line"><span class="comment">// printf(&quot;%d\n&quot;,clock()-T);</span></span><br><span class="line"> ll t1=n/<span class="number">2</span>,t2=n-t1;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">0</span>,mx)&#123;</span><br><span class="line">  ans=<span class="built_in">md2</span>(ans+<span class="built_in">md2</span>(<span class="number">2</span>*<span class="built_in">sqr</span>(f[n][i])));</span><br><span class="line">  sum1=<span class="built_in">md2</span>(sum1+<span class="built_in">md2</span>(<span class="built_in">sqr</span>(f[t1][i])));</span><br><span class="line">  sum2=<span class="built_in">md2</span>(sum2+<span class="built_in">md2</span>(<span class="built_in">sqr</span>(f[t2][i])));</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">md</span>(ans-<span class="built_in">md2</span>(sum1*sum2)));</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>luoguP4283 [AHOI2008]Y型项链</title>
    <url>/2018/11/06/luoguP4283%20%5BAHOI2008%5DY%E5%9E%8B%E9%A1%B9%E9%93%BE/</url>
    <content><![CDATA[<p><a href="https://www.luogu.org/problemnew/show/P4283">题目</a></p>
<hr>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 60</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> min(a,b) ((a)&lt;(b)?(a):(b))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fsb(a,b,c) for(int a=b;a&lt;=(c);a++)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fbs(a,b,c) for(int a=b;a&gt;=(c);a--)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> a[N],b[N],c[N];</span><br><span class="line"><span class="type">int</span> la,lb,lc,ab=<span class="number">0</span>,ac=<span class="number">0</span>,bc=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> a[<span class="number">0</span>]=b[<span class="number">0</span>]=c[<span class="number">0</span>]=<span class="string">&#x27;!&#x27;</span>;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;la);<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a+<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;lb);<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,b+<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;lc);<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,c+<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,<span class="built_in">min</span>(la,lb))&#123;</span><br><span class="line">  <span class="keyword">if</span>(a[i]==b[i])ab++;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,<span class="built_in">min</span>(lc,lb))&#123;</span><br><span class="line">  <span class="keyword">if</span>(c[i]==b[i])bc++;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">fsb</span>(i,<span class="number">1</span>,<span class="built_in">min</span>(la,lc))&#123;</span><br><span class="line">  <span class="keyword">if</span>(a[i]==c[i])ac++;<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">// printf(&quot;%10d %d %d\n&quot;,ab,bc,ac);</span></span><br><span class="line"> <span class="keyword">if</span>(bc&gt;ab)&#123;</span><br><span class="line">  <span class="built_in">swap</span>(bc,ab);<span class="built_in">swap</span>(lc,la);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(ac&gt;ab)&#123;</span><br><span class="line">  <span class="built_in">swap</span>(ac,ab);<span class="built_in">swap</span>(lc,lb);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">// printf(&quot;%10d %d %d\n&quot;,la,lb,lc);</span></span><br><span class="line"><span class="comment">// printf(&quot;%10d %d %d\n&quot;,ab,ac,bc);</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,la-ab+lb-ab+lc-ac+ab-ac);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>在树莓派上搭建Nextcloud私有云</title>
    <url>/2019/01/31/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E6%90%AD%E5%BB%BANextcloud%E7%A7%81%E6%9C%89%E4%BA%91/</url>
    <content><![CDATA[<h2 id="为什么是Nextcloud？"><a href="#为什么是Nextcloud？" class="headerlink" title="为什么是Nextcloud？"></a>为什么是Nextcloud？</h2><p>在树莓派这个预算下，基本上是owncloud和nextcloud二分天下。而owncloud现在美国德国高层分歧大，技术开发们受不了于是另辟炉灶开发了nextcloud。也就是说，nextcloud是owncloud原班人马建的，这一点可以体现在nextcloud的客户端也兼容owncloud。就目前而言，无论其功能还是美观程度都要甚于owncloud。唯一的不足是汉化不完全，但完全不影响使用。</p>
<p>nextcloud可以干什么？首先当然是私有云有的功能它都有。除此之外，nextcloud有多用户系统，容量控制系统，共享系统（有连接选项，因此可以共享给非用户）和出色的预览系统和出色的客户端、网页端。</p>
<p>成果图：</p>
<p>通过VNC远程桌面连接</p>
<p><img src="https://s2.ax1x.com/2019/01/31/k3pL6K.png" alt=""></p>
<p>实体，很小巧</p>
<p><img src="https://s2.ax1x.com/2019/01/31/k3pql6.jpg" alt=""></p>
<p>网页登录页面</p>
<p><img src="https://s2.ax1x.com/2019/01/31/k3pOOO.png" alt=""></p>
<p>网页端</p>
<p><img src="https://s2.ax1x.com/2019/01/31/k3pbSx.png" alt=""></p>
<p><a href="http://1617z38d55.51mypc.cn/">外网访问，可能（高概率）不在线</a></p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>树莓派。我的是3b+。树莓派需要联网，并且可以通过SSH或者各种如teamviewer、VNC等进行控制（或者您有钱 直接外接显示屏）。</p>
<h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><p>有很多种方法可以安装nextcloud，比如换nextcloud的iso，比如用命令行纯手工安装。这里选一种最简单最稳的。</p>
<p>英语强的大佬可以直接看<a href="https://docs.nextcloud.com/server/15/admin_manual/installation/index.html">官方教程</a></p>
<h3 id="下载安装snap"><a href="#下载安装snap" class="headerlink" title="下载安装snap"></a>下载安装snap</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install snapd</span><br></pre></td></tr></table></figure>
<h3 id="下载安装Nextcloud"><a href="#下载安装Nextcloud" class="headerlink" title="下载安装Nextcloud"></a>下载安装Nextcloud</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo snap install nextcloud</span><br></pre></td></tr></table></figure>
<p>下载安装过程时间较长。</p>
<h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p>完成后，可以在树莓派浏览器上直接localhost:80登录也可以在其他电脑上输入树莓派的IP登录。</p>
<p>在页面上输入所需的管理员用户名和密码。</p>
<p>根据官网，这时候会有一个更改储存位置的选项，但我试了好多遍都没有发现，这一点还有待探究。</p>
<h2 id="花生壳内网穿透"><a href="#花生壳内网穿透" class="headerlink" title="花生壳内网穿透"></a>花生壳内网穿透</h2><p>目前，nextcloud已经可以在内网正常运行了，那么如果想外网访问呢？</p>
<p>首先要解决的就是动态IP和穿透局域网的问题。</p>
<p>这里最无脑的就是使用花生壳。</p>
<p><a href="http://hsk.oray.com/download/download?id=25">deb安装包</a></p>
<p>cd到下载目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i 文件名</span><br></pre></td></tr></table></figure>
<p>安装完成后显示SN码、默认密码</p>
<p>登录<a href="http://b.oray.com/">花生壳</a>，输入SN码和默认密码，并按照提示激活。</p>
<p>然后可以选择直接选用这个作为账号密码也可以在右上角选择切换用户，登录自己账号后自动绑定。</p>
<h2 id="分配阿里云域名"><a href="#分配阿里云域名" class="headerlink" title="分配阿里云域名"></a>分配阿里云域名</h2><p>花生壳的默认域名又臭又长，考虑从阿里云的域名跳转过去。由于没满18岁域名无法备案，暂时无法实现。理论上给cloud.xxx.xxx解析一个CNAME就行了吧…</p>
]]></content>
      <tags>
        <tag>Fun Stuff</tag>
      </tags>
  </entry>
  <entry>
    <title>模板/知识库</title>
    <url>/2018/10/27/%E6%A8%A1%E6%9D%BF%E7%9F%A5%E8%AF%86%E5%BA%93/</url>
    <content><![CDATA[<h1 id="逆元"><a href="#逆元" class="headerlink" title="逆元"></a>逆元</h1><p>求x在%p意义下的逆元</p>
<p>即x^(p-2)</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> md(a) (((a)%p+p)%p)</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">po</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line"> ll y=mo<span class="number">-3</span>,ans=x,t=x;</span><br><span class="line"> <span class="keyword">while</span>(y&gt;<span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(y&amp;<span class="number">1</span>)ans=<span class="built_in">md</span>(ans*t);</span><br><span class="line">  y=y&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  t=<span class="built_in">md</span>(t*t);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h1><p><img src="https://s1.ax1x.com/2018/10/29/igtmn0.png" alt="位运算"></p>
]]></content>
      <tags>
        <tag>OI</tag>
      </tags>
  </entry>
  <entry>
    <title>学生端杀手</title>
    <url>/2019/03/24/%E5%AD%A6%E7%94%9F%E7%AB%AF%E6%9D%80%E6%89%8B/</url>
    <content><![CDATA[<p><a href="https://github.com/zijunhz/MythwareStudentClientAssistant">Github Repo</a></p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>目前大多数电子教室使用的学生端软件是极域电子教室，杀除它的方法也有很多。但对于大多数小白，记下这些方法并不容易，于是萌生了开发这样一款傻瓜软件的想法。</p>
<h3 id="现有的杀除学生端方法"><a href="#现有的杀除学生端方法" class="headerlink" title="现有的杀除学生端方法"></a>现有的杀除学生端方法</h3><h4 id="通过注册表获取学生端密码"><a href="#通过注册表获取学生端密码" class="headerlink" title="通过注册表获取学生端密码"></a>通过注册表获取学生端密码</h4><p>这个方法是我最早接触的方法，小学时想着杀除学生端于是就开始百度，排名前几就是这个。</p>
<p>具体而言有以下几步</p>
<p>1.win（键盘左下角的Windows徽标）+R，打开运行，输入regedit，点击确定。打开注册表管理器。</p>
<p><img src="https://s2.ax1x.com/2019/03/24/AYpGrD.png" alt=""></p>
<p>2.依次进入HKEY_LOCAL_MACHINE，SOFTWARE，TopDomain，e-Learning Class Standard，1.00。右侧UninstallPasswd的键值假设是psswd123，真实密码为去掉前5位psswd即123。</p>
<p><img src="https://s2.ax1x.com/2019/03/24/AYpyqg.png" alt=""></p>
<p>3.右键单击右下角任务栏上的学生端，点击设置，输入密码后，找到防杀进程，取消。</p>
<p>4.右键任务栏打开任务管理器，在进程中找到一项名为StudentMain的进程，结束任务即可杀除。</p>
<h4 id="通过命令杀除学生端"><a href="#通过命令杀除学生端" class="headerlink" title="通过命令杀除学生端"></a>通过命令杀除学生端</h4><p>主要有几种</p>
<p>一是通过刚刚的任务管理器，二是taskkill命令。但如果开了防杀进程，这两种都是无效的。</p>
<p>有没有有效的命令呢？</p>
<p>自然是有的。</p>
<p><a href="https://baike.baidu.com/item/ntsd/5790171?fr=aladdin">ntsd</a>是Windows中系统级的调试命令，但是自Windows Vista后不再集成于Windows中。</p>
<p>假设要杀除进程PID为123的进程，语法为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ntsd -c q -p &quot;123&quot;</span><br></pre></td></tr></table></figure>
<p>当然，也可以直接杀除进程名为xxx的进程，但由于PID才是进程的唯一对应标识（即可以有多个同名进程，但PID是唯一的），所以通常使用PID。</p>
<h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><h4 id="计划实现功能"><a href="#计划实现功能" class="headerlink" title="计划实现功能"></a>计划实现功能</h4><p>1.立即杀除，很好理解</p>
<p>2.定时杀除，广播前可以开启，广播到一半学生端就会被杀除</p>
<p>3.连续杀除，算是定时杀除的升级版，每隔一段时间定时杀除</p>
<p>4.重新开启学生端，显然，并不是所有人都知道学生端在哪，也并不是所有人都想一直关着学生端</p>
<h4 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h4><p>获取学生端PID，已知学生端进程名为StudentMain，其中，s=”””StudentMain.exe”””</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Dim</span> WmiService <span class="keyword">As</span> <span class="type">Object</span>, Processes <span class="keyword">As</span> <span class="type">Object</span>, Process <span class="keyword">As</span> <span class="type">Object</span></span><br><span class="line"><span class="keyword">Set</span> WmiService = GetObject(<span class="string">&quot;winmgmts:&#123;impersonationLevel=impersonate&#125;!\\.\root\cimv2&quot;</span>)</span><br><span class="line"><span class="keyword">Set</span> Processes = WmiService.ExecQuery(<span class="string">&quot;SELECT * FROM Win32_Process WHERE Name = &quot;</span> &amp; s)</span><br><span class="line"><span class="keyword">Dim</span> x <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">x = <span class="string">&quot;x&quot;</span></span><br><span class="line"><span class="keyword">For</span> <span class="keyword">Each</span> Process <span class="keyword">In</span> Processes</span><br><span class="line">x = x &amp; <span class="string">&quot; &quot;</span> &amp; Process.ProcessId</span><br><span class="line"><span class="keyword">Next</span></span><br><span class="line"><span class="keyword">If</span> (x = <span class="string">&quot;x&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    getpid = -<span class="number">1</span></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line">    getpid = Val(<span class="keyword">Mid</span>(x, <span class="number">2</span>, Len(x) - <span class="number">1</span>))</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">Set</span> WmiService = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> Processes = <span class="literal">Nothing</span></span><br><span class="line"><span class="keyword">Set</span> Process = <span class="literal">Nothing</span></span><br></pre></td></tr></table></figure>
<p>释放ntsd，因为Windows 7应该没有集成了</p>
<p>首先要把ntsd.exe加到资源中，然后每次杀除前释放到程序目录（万一有熊孩子把生成的ntsd给删了）</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Dim</span> arr() <span class="keyword">As</span> <span class="type">Byte</span></span><br><span class="line">arr = LoadResData(<span class="number">101</span>, <span class="string">&quot;CUSTOM&quot;</span>)</span><br><span class="line">Open App.Path &amp; <span class="string">&quot;\ntsd1.exe&quot;</span> <span class="keyword">For</span> <span class="keyword">Binary</span> <span class="keyword">As</span> #<span class="number">1</span></span><br><span class="line">Put #<span class="number">1</span>, , arr()</span><br><span class="line">Close #<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>杀除，其中，pid即为刚刚get的PID</p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line">Shell App.Path &amp; <span class="string">&quot;/ntsd1 -c q -p &quot;&quot;&quot;</span> &amp; Str(pid) &amp; <span class="string">&quot;&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>
<p>定时方面，总共使用3个计时器。</p>
<p>第一个计时器interval=1000，用于检测学生端状态并修改状态text和提示label的内容。</p>
<p>第二个和第三个计时器分别对应定时查杀和连续查杀。</p>
<p><img src="https://s2.ax1x.com/2019/03/24/AYCMjK.png" alt=""></p>
<h3 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h3><p>下周（2019.3.25-29）将去学校机房验证，现在在家就拿notepad++作为小白鼠叭orz</p>
<p><img src="https://s2.ax1x.com/2019/03/24/AYPvzq.gif" alt=""></p>
<p><img src="https://s2.ax1x.com/2019/03/24/AYPqoQ.gif" alt=""></p>
<p><img src="https://s2.ax1x.com/2019/03/24/AYFAHS.gif" alt=""></p>
<p><img src="https://s2.ax1x.com/2019/03/24/AYFCct.gif" alt=""></p>
<p>3.29更新：</p>
<p>的确可行，偷传至FTP，不少同学发现了。</p>
<p>5.3更新：</p>
<p>有次老师走到身后时刚巧查杀，非常尴尬，寻思在全屏广播时也能自由控制，而不是定时。</p>
<p><img src="https://s2.ax1x.com/2019/05/03/EN5rgP.gif" alt=""></p>
<p>学生端杀手gen2能在鼠标移至左上角时自动杀除，下周将带去学校试验。</p>
<h3 id="关于360报毒"><a href="#关于360报毒" class="headerlink" title="关于360报毒"></a>关于360报毒</h3><p>360报毒原因：使用了资源文件附带ntsd.exe，凡是使用资源文件，360都会报毒。</p>
<p>有没有毒呢？</p>
<p>自然是没有的。请看完整代码：</p>
<p><img src="https://s2.ax1x.com/2019/03/29/A0j5n0.png" alt=""></p>
]]></content>
      <tags>
        <tag>Project</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派入门：安装与配置</title>
    <url>/2019/02/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%EF%BC%9A%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>树莓派是一块只有信用卡长宽的微型电脑，通常配备ARM处理器。麻雀虽小而接口丰富，五脏俱全。</p>
<p>比如我目前入手的树莓派3B+有4个USB2.0，1个千兆以太网（支持以太网供电），1个3.5mm音频接口，1个摄像头接口，1个HDMI接口，1个Micro USB电源接口，1个DSI显示接口，内置WiFi与蓝牙。树莓派拥有超级广泛用途的一个重要原因是其配备40针GPIO接口，意味着树莓派的配件扩展可以极其丰富。</p>
<h2 id="选购"><a href="#选购" class="headerlink" title="选购"></a>选购</h2><p>首先不能对树莓派的性能有太高的指望，毕竟这只是台成本在200-300元的机子，比如3B+配备1.4GHz四核处理器与1G RAM。这里给出各版本对照表：</p>
<p><img src="https://s2.ax1x.com/2019/02/01/k31cVJ.png" alt=""></p>
<p>这张图制作较早，并没有包含树莓派3B+。3B+（280）比3B（264）更贵，但处理器主频在不超频情况下从1.2GHz提高到了1.4GHz。另外，上表中有成本为5美元的Zero，但在京东等平台上售价也都在150+，并没有实惠多少。</p>
<p>选完树莓派后可以根据自己的需求选取相应的传感器、配件等等。</p>
<p>这里推荐加装一个外壳和风扇。树莓派发热非常厉害，如果要超频则更甚，良好散热对使用寿命是有极大好处的。至于外壳，单纯因为树莓派看起来太单薄，电子元件裸露，容易损坏。</p>
<p><img src="https://s2.ax1x.com/2019/02/01/k33pqg.jpg" alt=""></p>
<p>另外，需要一张Micro SD，推荐16GB+，class10以上。着重看读写速度。我选用的是闪迪至尊极速32GB，读入和写入分别为100MB/s和60MB/s</p>
<h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><p>由于是ARM处理器，因此在操作系统上稍有限制。可选各类ARMlinux以及windows10iot。</p>
<p>其他操作系统，日后研究，这里以官方推荐的操作系统Raspbian（基于Debian，自带很多硬件驱动）为例。</p>
<p><a href="http://downloads.raspberrypi.org/raspbian_latest">下载操作系统</a> <a href="https://sourceforge.net/projects/win32diskimager/">下载Win32 Disk Imager</a></p>
<p>然后就是傻瓜操作，打开软件，选择img镜像，写入到SD卡上。</p>
<h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><p>SD卡插入树莓派，接上电源后自动开机。第一次开机连接一个显示器。</p>
<p>以前版本的Raspbian默认用户名和密码是pi和raspberry，现在好像可以在第一次开机自己设定密码了。</p>
<p>第一次开机会有一些设置，非常不推荐在这个过程中选择更新，我也不知道是网慢还是什么原因，经常卡在这儿。</p>
<p>接下来是一些推荐的配置（更改默认分辨率，开启VNC，更改软件源，安装vim）</p>
<h4 id="更改默认分辨率，开启VNC"><a href="#更改默认分辨率，开启VNC" class="headerlink" title="更改默认分辨率，开启VNC"></a>更改默认分辨率，开启VNC</h4><p>命令行输入如下命令进入设置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure>
<p>进入7 Advanced Options，在A5 Resolution可以更改分辨率。进入5 Interfacing Options，选择VNC enabled。</p>
<p>同时建议给树莓派分配专门的IP，方便VNC连接。这步要去路由器管理后台，找到DHCP保留或静态IP或绑定IP等等这样的设置，将树莓派的MAC绑在固定的IP上即可。</p>
<p>windows通过VNC访问树莓派也非常简单。在VNC开启后，VNC会默认开机启动。因此只要树莓派开机联网，在windows下使用VNCviewer，输入树莓派IP和访问密码（通常是树莓派密码或者是自己设定的），就能远程访问桌面了。</p>
<h4 id="更改软件源"><a href="#更改软件源" class="headerlink" title="更改软件源"></a>更改软件源</h4><p>命令行输入如下命令就可以换到亲测比较优秀的一个源上（中科大的源）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -s</span><br><span class="line">echo -e &quot;deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi \n deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi&quot; &gt; /etc/apt/sources.list</span><br><span class="line">echo -e &quot;deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/ stretch main ui&quot; &gt; /etc/apt/sources.list.d/raspi.list</span><br><span class="line">exit</span><br><span class="line">sudo apt update &amp;&amp; sudo apt -y upgrade</span><br></pre></td></tr></table></figure>
<h4 id="安装vim"><a href="#安装vim" class="headerlink" title="安装vim"></a>安装vim</h4><p>居然没有默认安装orz。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install vim</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Fun Stuff</tag>
      </tags>
  </entry>
</search>
